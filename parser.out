Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     p -> <empty>
Rule 2     empty -> <empty>
Rule 3     programa -> PROGRAM ID variables statements END PROGRAM ID ending subroutines
Rule 4     ending -> <empty>
Rule 5     variables -> variables variables1
Rule 6     variables -> variables variables2
Rule 7     variables -> variables variables3
Rule 8     variables -> variables variables4
Rule 9     variables -> <empty>
Rule 10    variables1 -> tipo ID loopvars
Rule 11    loopvars -> loopvars COMMA ID
Rule 12    loopvars -> empty
Rule 13    variables2 -> tipo ID EQUAL NUMBER
Rule 14    variables2 -> tipo ID EQUAL REAL
Rule 15    variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
Rule 16    variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
Rule 17    paso1dim -> <empty>
Rule 18    paso2dim -> <empty>
Rule 19    paso3dim -> <empty>
Rule 20    paso4dim -> <empty>
Rule 21    paso51dim -> <empty>
Rule 22    paso52dim -> <empty>
Rule 23    statements -> statements statement
Rule 24    statements -> statement
Rule 25    statements -> <empty>
Rule 26    tipo -> INT
Rule 27    tipo -> REAL
Rule 28    subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine
Rule 29    subroutines -> SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine
Rule 30    subroutines -> <empty>
Rule 31    paso1subroutine -> <empty>
Rule 32    paso2subroutine -> <empty>
Rule 33    statement -> ID paso8 EQUAL expression paso9
Rule 34    statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
Rule 35    statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
Rule 36    statement -> CALL ID callprocedure
Rule 37    statement -> ID COLLON DO paso1do statements paso2do END DO ID
Rule 38    statement -> READ ID readquad
Rule 39    statement -> WRITE write writequad
Rule 40    statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
Rule 41    statement -> IF paso1bool ifs END IF paso4bool
Rule 42    statement -> EXIT paso4do
Rule 43    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
Rule 44    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
Rule 45    statement -> DO paso1do statements paso2do END DO
Rule 46    write -> expression correction
Rule 47    write -> STRING
Rule 48    correction -> <empty>
Rule 49    paso1bool -> <empty>
Rule 50    paso3bool -> <empty>
Rule 51    paso1do -> <empty>
Rule 52    paso2do -> <empty>
Rule 53    paso1for -> <empty>
Rule 54    paso2for -> <empty>
Rule 55    paso3for -> <empty>
Rule 56    paso4for1 -> <empty>
Rule 57    paso4for2 -> <empty>
Rule 58    writequad -> <empty>
Rule 59    readquad -> <empty>
Rule 60    paso8 -> <empty>
Rule 61    paso9 -> <empty>
Rule 62    pasogetdim -> <empty>
Rule 63    pasogetdim1 -> <empty>
Rule 64    pasogetdim2 -> <empty>
Rule 65    callprocedure -> <empty>
Rule 66    ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs
Rule 67    paso2bool -> <empty>
Rule 68    paso4bool -> <empty>
Rule 69    iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 70    iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 71    iffs -> <empty>
Rule 72    paso4do -> <empty>
Rule 73    expression -> expression paso4 PLUS paso23 subexpression paso4
Rule 74    expression -> expression paso4 MINUS paso23 subexpression paso4
Rule 75    expression -> subexpression paso4
Rule 76    paso4 -> <empty>
Rule 77    paso23 -> <empty>
Rule 78    subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5
Rule 79    subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5
Rule 80    subexpression -> ssubexpression paso5
Rule 81    paso5 -> <empty>
Rule 82    ssubexpression -> ID paso1
Rule 83    ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN
Rule 84    ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
Rule 85    ssubexpression -> NUMBER paso12
Rule 86    ssubexpression -> REAL paso13
Rule 87    ssubexpression -> OPAREN paso6 expression CPAREN paso7
Rule 88    paso1 -> <empty>
Rule 89    paso12 -> <empty>
Rule 90    paso13 -> <empty>
Rule 91    paso14 -> <empty>
Rule 92    paso6 -> <empty>
Rule 93    paso7 -> <empty>
Rule 94    andornot -> <empty>
Rule 95    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 96    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 97    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 98    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 99    logicexp -> NOT andornot slogicexp pasonot paso2lgexp
Rule 100   logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 101   logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 102   logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 103   paso1lgexp -> <empty>
Rule 104   paso2lgexp -> <empty>
Rule 105   pasonot -> <empty>
Rule 106   slogicexp -> OPAREN logicexp CPAREN
Rule 107   slogicexp -> ID paso1
Rule 108   slogicexp -> NUMBER paso12
Rule 109   slogicexp -> REAL paso13
Rule 110   slogicexp -> ID OPAREN expression COMMA expression CPAREN
Rule 111   slogicexp -> ID OPAREN expression CPAREN
Rule 112   logicop -> GT
Rule 113   logicop -> GET
Rule 114   logicop -> NE
Rule 115   logicop -> EQUALS
Rule 116   logicop -> LET
Rule 117   logicop -> LT

Terminals, with rules where they appear

AND                  : 95 97 101
CALL                 : 36
COLLON               : 37
COMMA                : 11 15 34 43 43 44 84 110
CPAREN               : 15 16 34 35 66 69 70 83 84 87 106 110 111
DIV                  : 79
DO                   : 37 37 43 43 44 44 45 45
ELSE                 : 40
ELSIF                : 69 70
END                  : 3 28 29 37 40 41 43 44 45
EQUAL                : 13 14 33 34 35 43 44
EQUALS               : 115
EXIT                 : 42
GET                  : 113
GT                   : 112
ID                   : 3 3 10 11 13 14 15 16 28 29 33 34 35 36 37 37 38 43 44 82 83 84 107 110 111
IF                   : 40 40 41 41
INT                  : 26
LET                  : 116
LT                   : 117
MINUS                : 74
MUL                  : 78
NE                   : 114
NOT                  : 95 96 97 98 99
NUMBER               : 13 15 15 16 85 108
OPAREN               : 15 16 34 35 66 69 70 83 84 87 106 110 111
OR                   : 96 98 102
PLUS                 : 73
PROGRAM              : 3 3
READ                 : 38
REAL                 : 14 27 86 109
STRING               : 47
SUBROUTINE           : 28 28 29 29
THEN                 : 66 69 70
WRITE                : 39
error                : 

Nonterminals, with rules where they appear

andornot             : 95 95 96 96 97 97 98 98 99 101 102
callprocedure        : 36
correction           : 46
empty                : 12
ending               : 3
expression           : 33 34 34 34 35 35 43 43 43 44 44 46 73 74 83 84 84 87 110 110 111
iffs                 : 66 69
ifs                  : 40 41
logicexp             : 66 69 70 95 96 97 98 101 102 106
logicop              : 97 98 100 101 102
loopvars             : 10 11
p                    : 
paso1                : 82 107
paso12               : 85 108
paso13               : 86 109
paso14               : 83 84
paso1bool            : 40 41
paso1dim             : 15 16
paso1do              : 37 45
paso1for             : 43 44
paso1lgexp           : 97 98 100 101 102
paso1subroutine      : 28 29
paso23               : 73 74 78 79
paso2bool            : 66 69 70
paso2dim             : 15 16
paso2do              : 37 45
paso2for             : 43 44
paso2lgexp           : 95 95 96 96 97 97 98 98 99 100 101 101 102 102
paso2subroutine      : 28 29
paso3bool            : 40 69 70
paso3dim             : 15 16
paso3for             : 43 44
paso4                : 73 73 74 74 75
paso4bool            : 40 41
paso4dim             : 15
paso4do              : 42
paso4for1            : 43
paso4for2            : 44
paso5                : 78 78 79 79 80
paso51dim            : 16
paso52dim            : 15
paso6                : 87
paso7                : 87
paso8                : 33 34 35
paso9                : 33 34 35
pasogetdim           : 35 83
pasogetdim1          : 34 84
pasogetdim2          : 34 84
pasonot              : 95 96 97 98 99
programa             : 0
readquad             : 38
slogicexp            : 95 96 97 97 98 98 99 100 100 101 101 102 102
ssubexpression       : 78 79 80
statement            : 23 24
statements           : 3 23 28 29 37 40 43 44 45 66 69 70
subexpression        : 73 74 75 78 79
subroutines          : 3 28
tipo                 : 10 13 14 15 16
variables            : 3 5 6 7 8
variables1           : 5
variables2           : 6
variables3           : 7
variables4           : 8
write                : 39
writequad            : 39

Parsing method: LALR

state 0

    (0) S' -> . programa
    (3) programa -> . PROGRAM ID variables statements END PROGRAM ID ending subroutines

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (3) programa -> PROGRAM . ID variables statements END PROGRAM ID ending subroutines

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (3) programa -> PROGRAM ID . variables statements END PROGRAM ID ending subroutines
    (5) variables -> . variables variables1
    (6) variables -> . variables variables2
    (7) variables -> . variables variables3
    (8) variables -> . variables variables4
    (9) variables -> .

    ID              reduce using rule 9 (variables -> .)
    CALL            reduce using rule 9 (variables -> .)
    READ            reduce using rule 9 (variables -> .)
    WRITE           reduce using rule 9 (variables -> .)
    IF              reduce using rule 9 (variables -> .)
    EXIT            reduce using rule 9 (variables -> .)
    DO              reduce using rule 9 (variables -> .)
    INT             reduce using rule 9 (variables -> .)
    REAL            reduce using rule 9 (variables -> .)
    END             reduce using rule 9 (variables -> .)

    variables                      shift and go to state 4

state 4

    (3) programa -> PROGRAM ID variables . statements END PROGRAM ID ending subroutines
    (5) variables -> variables . variables1
    (6) variables -> variables . variables2
    (7) variables -> variables . variables3
    (8) variables -> variables . variables4
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (10) variables1 -> . tipo ID loopvars
    (13) variables2 -> . tipo ID EQUAL NUMBER
    (14) variables2 -> . tipo ID EQUAL REAL
    (15) variables3 -> . tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> . tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO
    (26) tipo -> . INT
    (27) tipo -> . REAL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7
    INT             shift and go to state 13
    REAL            shift and go to state 5

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 6
    tipo                           shift and go to state 9
    statement                      shift and go to state 10
    variables3                     shift and go to state 17
    variables2                     shift and go to state 18
    variables1                     shift and go to state 19
    variables4                     shift and go to state 14

state 5

    (27) tipo -> REAL .

    ID              reduce using rule 27 (tipo -> REAL .)


state 6

    (3) programa -> PROGRAM ID variables statements . END PROGRAM ID ending subroutines
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             shift and go to state 22
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21

state 7

    (43) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> DO . paso1do statements paso2do END DO
    (51) paso1do -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 24
    CALL            reduce using rule 51 (paso1do -> .)
    READ            reduce using rule 51 (paso1do -> .)
    WRITE           reduce using rule 51 (paso1do -> .)
    IF              reduce using rule 51 (paso1do -> .)
    EXIT            reduce using rule 51 (paso1do -> .)
    DO              reduce using rule 51 (paso1do -> .)
    END             reduce using rule 51 (paso1do -> .)

  ! ID              [ reduce using rule 51 (paso1do -> .) ]

    paso1do                        shift and go to state 23

state 8

    (38) statement -> READ . ID readquad

    ID              shift and go to state 25


state 9

    (10) variables1 -> tipo . ID loopvars
    (13) variables2 -> tipo . ID EQUAL NUMBER
    (14) variables2 -> tipo . ID EQUAL REAL
    (15) variables3 -> tipo . ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo . ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim

    ID              shift and go to state 26


state 10

    (24) statements -> statement .

    ID              reduce using rule 24 (statements -> statement .)
    CALL            reduce using rule 24 (statements -> statement .)
    READ            reduce using rule 24 (statements -> statement .)
    WRITE           reduce using rule 24 (statements -> statement .)
    IF              reduce using rule 24 (statements -> statement .)
    EXIT            reduce using rule 24 (statements -> statement .)
    DO              reduce using rule 24 (statements -> statement .)
    ELSIF           reduce using rule 24 (statements -> statement .)
    ELSE            reduce using rule 24 (statements -> statement .)
    END             reduce using rule 24 (statements -> statement .)


state 11

    (42) statement -> EXIT . paso4do
    (72) paso4do -> .

    END             reduce using rule 72 (paso4do -> .)
    ID              reduce using rule 72 (paso4do -> .)
    CALL            reduce using rule 72 (paso4do -> .)
    READ            reduce using rule 72 (paso4do -> .)
    WRITE           reduce using rule 72 (paso4do -> .)
    IF              reduce using rule 72 (paso4do -> .)
    EXIT            reduce using rule 72 (paso4do -> .)
    DO              reduce using rule 72 (paso4do -> .)
    ELSIF           reduce using rule 72 (paso4do -> .)
    ELSE            reduce using rule 72 (paso4do -> .)

    paso4do                        shift and go to state 27

state 12

    (40) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> IF . paso1bool ifs END IF paso4bool
    (49) paso1bool -> .

    OPAREN          reduce using rule 49 (paso1bool -> .)

    paso1bool                      shift and go to state 28

state 13

    (26) tipo -> INT .

    ID              reduce using rule 26 (tipo -> INT .)


state 14

    (8) variables -> variables variables4 .

    ID              reduce using rule 8 (variables -> variables variables4 .)
    CALL            reduce using rule 8 (variables -> variables variables4 .)
    READ            reduce using rule 8 (variables -> variables variables4 .)
    WRITE           reduce using rule 8 (variables -> variables variables4 .)
    IF              reduce using rule 8 (variables -> variables variables4 .)
    EXIT            reduce using rule 8 (variables -> variables variables4 .)
    DO              reduce using rule 8 (variables -> variables variables4 .)
    INT             reduce using rule 8 (variables -> variables variables4 .)
    REAL            reduce using rule 8 (variables -> variables variables4 .)
    END             reduce using rule 8 (variables -> variables variables4 .)


state 15

    (33) statement -> ID . paso8 EQUAL expression paso9
    (34) statement -> ID . paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> ID . paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (37) statement -> ID . COLLON DO paso1do statements paso2do END DO ID
    (60) paso8 -> .

    COLLON          shift and go to state 29
    EQUAL           reduce using rule 60 (paso8 -> .)
    OPAREN          reduce using rule 60 (paso8 -> .)

    paso8                          shift and go to state 30

state 16

    (39) statement -> WRITE . write writequad
    (46) write -> . expression correction
    (47) write -> . STRING
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    STRING          shift and go to state 35
    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    write                          shift and go to state 34
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 39

state 17

    (7) variables -> variables variables3 .

    ID              reduce using rule 7 (variables -> variables variables3 .)
    CALL            reduce using rule 7 (variables -> variables variables3 .)
    READ            reduce using rule 7 (variables -> variables variables3 .)
    WRITE           reduce using rule 7 (variables -> variables variables3 .)
    IF              reduce using rule 7 (variables -> variables variables3 .)
    EXIT            reduce using rule 7 (variables -> variables variables3 .)
    DO              reduce using rule 7 (variables -> variables variables3 .)
    INT             reduce using rule 7 (variables -> variables variables3 .)
    REAL            reduce using rule 7 (variables -> variables variables3 .)
    END             reduce using rule 7 (variables -> variables variables3 .)


state 18

    (6) variables -> variables variables2 .

    ID              reduce using rule 6 (variables -> variables variables2 .)
    CALL            reduce using rule 6 (variables -> variables variables2 .)
    READ            reduce using rule 6 (variables -> variables variables2 .)
    WRITE           reduce using rule 6 (variables -> variables variables2 .)
    IF              reduce using rule 6 (variables -> variables variables2 .)
    EXIT            reduce using rule 6 (variables -> variables variables2 .)
    DO              reduce using rule 6 (variables -> variables variables2 .)
    INT             reduce using rule 6 (variables -> variables variables2 .)
    REAL            reduce using rule 6 (variables -> variables variables2 .)
    END             reduce using rule 6 (variables -> variables variables2 .)


state 19

    (5) variables -> variables variables1 .

    ID              reduce using rule 5 (variables -> variables variables1 .)
    CALL            reduce using rule 5 (variables -> variables variables1 .)
    READ            reduce using rule 5 (variables -> variables variables1 .)
    WRITE           reduce using rule 5 (variables -> variables variables1 .)
    IF              reduce using rule 5 (variables -> variables variables1 .)
    EXIT            reduce using rule 5 (variables -> variables variables1 .)
    DO              reduce using rule 5 (variables -> variables variables1 .)
    INT             reduce using rule 5 (variables -> variables variables1 .)
    REAL            reduce using rule 5 (variables -> variables variables1 .)
    END             reduce using rule 5 (variables -> variables variables1 .)


state 20

    (36) statement -> CALL . ID callprocedure

    ID              shift and go to state 40


state 21

    (23) statements -> statements statement .

    ID              reduce using rule 23 (statements -> statements statement .)
    CALL            reduce using rule 23 (statements -> statements statement .)
    READ            reduce using rule 23 (statements -> statements statement .)
    WRITE           reduce using rule 23 (statements -> statements statement .)
    IF              reduce using rule 23 (statements -> statements statement .)
    EXIT            reduce using rule 23 (statements -> statements statement .)
    DO              reduce using rule 23 (statements -> statements statement .)
    ELSIF           reduce using rule 23 (statements -> statements statement .)
    ELSE            reduce using rule 23 (statements -> statements statement .)
    END             reduce using rule 23 (statements -> statements statement .)


state 22

    (3) programa -> PROGRAM ID variables statements END . PROGRAM ID ending subroutines

    PROGRAM         shift and go to state 41


state 23

    (45) statement -> DO paso1do . statements paso2do END DO
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 42
    statement                      shift and go to state 10

state 24

    (43) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (53) paso1for -> .

    EQUAL           reduce using rule 53 (paso1for -> .)

    paso1for                       shift and go to state 43

state 25

    (38) statement -> READ ID . readquad
    (59) readquad -> .

    END             reduce using rule 59 (readquad -> .)
    ID              reduce using rule 59 (readquad -> .)
    CALL            reduce using rule 59 (readquad -> .)
    READ            reduce using rule 59 (readquad -> .)
    WRITE           reduce using rule 59 (readquad -> .)
    IF              reduce using rule 59 (readquad -> .)
    EXIT            reduce using rule 59 (readquad -> .)
    DO              reduce using rule 59 (readquad -> .)
    ELSIF           reduce using rule 59 (readquad -> .)
    ELSE            reduce using rule 59 (readquad -> .)

    readquad                       shift and go to state 44

state 26

    (10) variables1 -> tipo ID . loopvars
    (13) variables2 -> tipo ID . EQUAL NUMBER
    (14) variables2 -> tipo ID . EQUAL REAL
    (15) variables3 -> tipo ID . paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID . paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
    (11) loopvars -> . loopvars COMMA ID
    (12) loopvars -> . empty
    (17) paso1dim -> .
    (2) empty -> .

    EQUAL           shift and go to state 47
    OPAREN          reduce using rule 17 (paso1dim -> .)
    COMMA           reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    CALL            reduce using rule 2 (empty -> .)
    READ            reduce using rule 2 (empty -> .)
    WRITE           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    EXIT            reduce using rule 2 (empty -> .)
    DO              reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)
    REAL            reduce using rule 2 (empty -> .)
    END             reduce using rule 2 (empty -> .)

    loopvars                       shift and go to state 45
    paso1dim                       shift and go to state 46
    empty                          shift and go to state 48

state 27

    (42) statement -> EXIT paso4do .

    ID              reduce using rule 42 (statement -> EXIT paso4do .)
    CALL            reduce using rule 42 (statement -> EXIT paso4do .)
    READ            reduce using rule 42 (statement -> EXIT paso4do .)
    WRITE           reduce using rule 42 (statement -> EXIT paso4do .)
    IF              reduce using rule 42 (statement -> EXIT paso4do .)
    EXIT            reduce using rule 42 (statement -> EXIT paso4do .)
    DO              reduce using rule 42 (statement -> EXIT paso4do .)
    ELSIF           reduce using rule 42 (statement -> EXIT paso4do .)
    ELSE            reduce using rule 42 (statement -> EXIT paso4do .)
    END             reduce using rule 42 (statement -> EXIT paso4do .)


state 28

    (40) statement -> IF paso1bool . ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> IF paso1bool . ifs END IF paso4bool
    (66) ifs -> . OPAREN logicexp CPAREN paso2bool THEN statements iffs

    OPAREN          shift and go to state 50

    ifs                            shift and go to state 49

state 29

    (37) statement -> ID COLLON . DO paso1do statements paso2do END DO ID

    DO              shift and go to state 51


state 30

    (33) statement -> ID paso8 . EQUAL expression paso9
    (34) statement -> ID paso8 . OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> ID paso8 . OPAREN expression pasogetdim CPAREN EQUAL expression paso9

    EQUAL           shift and go to state 52
    OPAREN          shift and go to state 53


state 31

    (86) ssubexpression -> REAL . paso13
    (90) paso13 -> .

    MUL             reduce using rule 90 (paso13 -> .)
    DIV             reduce using rule 90 (paso13 -> .)
    PLUS            reduce using rule 90 (paso13 -> .)
    MINUS           reduce using rule 90 (paso13 -> .)
    END             reduce using rule 90 (paso13 -> .)
    ID              reduce using rule 90 (paso13 -> .)
    CALL            reduce using rule 90 (paso13 -> .)
    READ            reduce using rule 90 (paso13 -> .)
    WRITE           reduce using rule 90 (paso13 -> .)
    IF              reduce using rule 90 (paso13 -> .)
    EXIT            reduce using rule 90 (paso13 -> .)
    DO              reduce using rule 90 (paso13 -> .)
    ELSIF           reduce using rule 90 (paso13 -> .)
    ELSE            reduce using rule 90 (paso13 -> .)
    COMMA           reduce using rule 90 (paso13 -> .)
    CPAREN          reduce using rule 90 (paso13 -> .)

    paso13                         shift and go to state 54

state 32

    (85) ssubexpression -> NUMBER . paso12
    (89) paso12 -> .

    MUL             reduce using rule 89 (paso12 -> .)
    DIV             reduce using rule 89 (paso12 -> .)
    PLUS            reduce using rule 89 (paso12 -> .)
    MINUS           reduce using rule 89 (paso12 -> .)
    END             reduce using rule 89 (paso12 -> .)
    ID              reduce using rule 89 (paso12 -> .)
    CALL            reduce using rule 89 (paso12 -> .)
    READ            reduce using rule 89 (paso12 -> .)
    WRITE           reduce using rule 89 (paso12 -> .)
    IF              reduce using rule 89 (paso12 -> .)
    EXIT            reduce using rule 89 (paso12 -> .)
    DO              reduce using rule 89 (paso12 -> .)
    ELSIF           reduce using rule 89 (paso12 -> .)
    ELSE            reduce using rule 89 (paso12 -> .)
    COMMA           reduce using rule 89 (paso12 -> .)
    CPAREN          reduce using rule 89 (paso12 -> .)

    paso12                         shift and go to state 55

state 33

    (82) ssubexpression -> ID . paso1
    (83) ssubexpression -> ID . paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> ID . paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (88) paso1 -> .
    (91) paso14 -> .

    MUL             reduce using rule 88 (paso1 -> .)
    DIV             reduce using rule 88 (paso1 -> .)
    PLUS            reduce using rule 88 (paso1 -> .)
    MINUS           reduce using rule 88 (paso1 -> .)
    END             reduce using rule 88 (paso1 -> .)
    ID              reduce using rule 88 (paso1 -> .)
    CALL            reduce using rule 88 (paso1 -> .)
    READ            reduce using rule 88 (paso1 -> .)
    WRITE           reduce using rule 88 (paso1 -> .)
    IF              reduce using rule 88 (paso1 -> .)
    EXIT            reduce using rule 88 (paso1 -> .)
    DO              reduce using rule 88 (paso1 -> .)
    ELSIF           reduce using rule 88 (paso1 -> .)
    ELSE            reduce using rule 88 (paso1 -> .)
    COMMA           reduce using rule 88 (paso1 -> .)
    CPAREN          reduce using rule 88 (paso1 -> .)
    OPAREN          reduce using rule 91 (paso14 -> .)

    paso14                         shift and go to state 56
    paso1                          shift and go to state 57

state 34

    (39) statement -> WRITE write . writequad
    (58) writequad -> .

    END             reduce using rule 58 (writequad -> .)
    ID              reduce using rule 58 (writequad -> .)
    CALL            reduce using rule 58 (writequad -> .)
    READ            reduce using rule 58 (writequad -> .)
    WRITE           reduce using rule 58 (writequad -> .)
    IF              reduce using rule 58 (writequad -> .)
    EXIT            reduce using rule 58 (writequad -> .)
    DO              reduce using rule 58 (writequad -> .)
    ELSIF           reduce using rule 58 (writequad -> .)
    ELSE            reduce using rule 58 (writequad -> .)

    writequad                      shift and go to state 58

state 35

    (47) write -> STRING .

    END             reduce using rule 47 (write -> STRING .)
    ID              reduce using rule 47 (write -> STRING .)
    CALL            reduce using rule 47 (write -> STRING .)
    READ            reduce using rule 47 (write -> STRING .)
    WRITE           reduce using rule 47 (write -> STRING .)
    IF              reduce using rule 47 (write -> STRING .)
    EXIT            reduce using rule 47 (write -> STRING .)
    DO              reduce using rule 47 (write -> STRING .)
    ELSIF           reduce using rule 47 (write -> STRING .)
    ELSE            reduce using rule 47 (write -> STRING .)


state 36

    (75) expression -> subexpression . paso4
    (78) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (76) paso4 -> .
    (81) paso5 -> .

    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)
    END             reduce using rule 76 (paso4 -> .)
    ID              reduce using rule 76 (paso4 -> .)
    CALL            reduce using rule 76 (paso4 -> .)
    READ            reduce using rule 76 (paso4 -> .)
    WRITE           reduce using rule 76 (paso4 -> .)
    IF              reduce using rule 76 (paso4 -> .)
    EXIT            reduce using rule 76 (paso4 -> .)
    DO              reduce using rule 76 (paso4 -> .)
    ELSIF           reduce using rule 76 (paso4 -> .)
    ELSE            reduce using rule 76 (paso4 -> .)
    COMMA           reduce using rule 76 (paso4 -> .)
    CPAREN          reduce using rule 76 (paso4 -> .)
    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)

    paso4                          shift and go to state 59
    paso5                          shift and go to state 60

state 37

    (80) subexpression -> ssubexpression . paso5
    (81) paso5 -> .

    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)
    PLUS            reduce using rule 81 (paso5 -> .)
    MINUS           reduce using rule 81 (paso5 -> .)
    END             reduce using rule 81 (paso5 -> .)
    ID              reduce using rule 81 (paso5 -> .)
    CALL            reduce using rule 81 (paso5 -> .)
    READ            reduce using rule 81 (paso5 -> .)
    WRITE           reduce using rule 81 (paso5 -> .)
    IF              reduce using rule 81 (paso5 -> .)
    EXIT            reduce using rule 81 (paso5 -> .)
    DO              reduce using rule 81 (paso5 -> .)
    ELSIF           reduce using rule 81 (paso5 -> .)
    ELSE            reduce using rule 81 (paso5 -> .)
    COMMA           reduce using rule 81 (paso5 -> .)
    CPAREN          reduce using rule 81 (paso5 -> .)

    paso5                          shift and go to state 61

state 38

    (87) ssubexpression -> OPAREN . paso6 expression CPAREN paso7
    (92) paso6 -> .

    ID              reduce using rule 92 (paso6 -> .)
    NUMBER          reduce using rule 92 (paso6 -> .)
    REAL            reduce using rule 92 (paso6 -> .)
    OPAREN          reduce using rule 92 (paso6 -> .)

    paso6                          shift and go to state 62

state 39

    (46) write -> expression . correction
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (48) correction -> .
    (76) paso4 -> .

    END             reduce using rule 48 (correction -> .)
    ID              reduce using rule 48 (correction -> .)
    CALL            reduce using rule 48 (correction -> .)
    READ            reduce using rule 48 (correction -> .)
    WRITE           reduce using rule 48 (correction -> .)
    IF              reduce using rule 48 (correction -> .)
    EXIT            reduce using rule 48 (correction -> .)
    DO              reduce using rule 48 (correction -> .)
    ELSIF           reduce using rule 48 (correction -> .)
    ELSE            reduce using rule 48 (correction -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64
    correction                     shift and go to state 63

state 40

    (36) statement -> CALL ID . callprocedure
    (65) callprocedure -> .

    END             reduce using rule 65 (callprocedure -> .)
    ID              reduce using rule 65 (callprocedure -> .)
    CALL            reduce using rule 65 (callprocedure -> .)
    READ            reduce using rule 65 (callprocedure -> .)
    WRITE           reduce using rule 65 (callprocedure -> .)
    IF              reduce using rule 65 (callprocedure -> .)
    EXIT            reduce using rule 65 (callprocedure -> .)
    DO              reduce using rule 65 (callprocedure -> .)
    ELSIF           reduce using rule 65 (callprocedure -> .)
    ELSE            reduce using rule 65 (callprocedure -> .)

    callprocedure                  shift and go to state 65

state 41

    (3) programa -> PROGRAM ID variables statements END PROGRAM . ID ending subroutines

    ID              shift and go to state 66


state 42

    (45) statement -> DO paso1do statements . paso2do END DO
    (23) statements -> statements . statement
    (52) paso2do -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             reduce using rule 52 (paso2do -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    paso2do                        shift and go to state 67
    statement                      shift and go to state 21

state 43

    (43) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO

    EQUAL           shift and go to state 68


state 44

    (38) statement -> READ ID readquad .

    ID              reduce using rule 38 (statement -> READ ID readquad .)
    CALL            reduce using rule 38 (statement -> READ ID readquad .)
    READ            reduce using rule 38 (statement -> READ ID readquad .)
    WRITE           reduce using rule 38 (statement -> READ ID readquad .)
    IF              reduce using rule 38 (statement -> READ ID readquad .)
    EXIT            reduce using rule 38 (statement -> READ ID readquad .)
    DO              reduce using rule 38 (statement -> READ ID readquad .)
    ELSIF           reduce using rule 38 (statement -> READ ID readquad .)
    ELSE            reduce using rule 38 (statement -> READ ID readquad .)
    END             reduce using rule 38 (statement -> READ ID readquad .)


state 45

    (10) variables1 -> tipo ID loopvars .
    (11) loopvars -> loopvars . COMMA ID

    ID              reduce using rule 10 (variables1 -> tipo ID loopvars .)
    CALL            reduce using rule 10 (variables1 -> tipo ID loopvars .)
    READ            reduce using rule 10 (variables1 -> tipo ID loopvars .)
    WRITE           reduce using rule 10 (variables1 -> tipo ID loopvars .)
    IF              reduce using rule 10 (variables1 -> tipo ID loopvars .)
    EXIT            reduce using rule 10 (variables1 -> tipo ID loopvars .)
    DO              reduce using rule 10 (variables1 -> tipo ID loopvars .)
    INT             reduce using rule 10 (variables1 -> tipo ID loopvars .)
    REAL            reduce using rule 10 (variables1 -> tipo ID loopvars .)
    END             reduce using rule 10 (variables1 -> tipo ID loopvars .)
    COMMA           shift and go to state 69


state 46

    (15) variables3 -> tipo ID paso1dim . OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID paso1dim . OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim

    OPAREN          shift and go to state 70


state 47

    (13) variables2 -> tipo ID EQUAL . NUMBER
    (14) variables2 -> tipo ID EQUAL . REAL

    NUMBER          shift and go to state 71
    REAL            shift and go to state 72


state 48

    (12) loopvars -> empty .

    COMMA           reduce using rule 12 (loopvars -> empty .)
    ID              reduce using rule 12 (loopvars -> empty .)
    CALL            reduce using rule 12 (loopvars -> empty .)
    READ            reduce using rule 12 (loopvars -> empty .)
    WRITE           reduce using rule 12 (loopvars -> empty .)
    IF              reduce using rule 12 (loopvars -> empty .)
    EXIT            reduce using rule 12 (loopvars -> empty .)
    DO              reduce using rule 12 (loopvars -> empty .)
    INT             reduce using rule 12 (loopvars -> empty .)
    REAL            reduce using rule 12 (loopvars -> empty .)
    END             reduce using rule 12 (loopvars -> empty .)


state 49

    (40) statement -> IF paso1bool ifs . ELSE paso3bool statements END IF paso4bool
    (41) statement -> IF paso1bool ifs . END IF paso4bool

    ELSE            shift and go to state 73
    END             shift and go to state 74


state 50

    (66) ifs -> OPAREN . logicexp CPAREN paso2bool THEN statements iffs
    (95) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (99) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (100) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 81
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 76
    logicexp                       shift and go to state 78

state 51

    (37) statement -> ID COLLON DO . paso1do statements paso2do END DO ID
    (51) paso1do -> .

    ID              reduce using rule 51 (paso1do -> .)
    CALL            reduce using rule 51 (paso1do -> .)
    READ            reduce using rule 51 (paso1do -> .)
    WRITE           reduce using rule 51 (paso1do -> .)
    IF              reduce using rule 51 (paso1do -> .)
    EXIT            reduce using rule 51 (paso1do -> .)
    DO              reduce using rule 51 (paso1do -> .)
    END             reduce using rule 51 (paso1do -> .)

    paso1do                        shift and go to state 82

state 52

    (33) statement -> ID paso8 EQUAL . expression paso9
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 83

state 53

    (34) statement -> ID paso8 OPAREN . expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> ID paso8 OPAREN . expression pasogetdim CPAREN EQUAL expression paso9
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 84

state 54

    (86) ssubexpression -> REAL paso13 .

    MUL             reduce using rule 86 (ssubexpression -> REAL paso13 .)
    DIV             reduce using rule 86 (ssubexpression -> REAL paso13 .)
    CPAREN          reduce using rule 86 (ssubexpression -> REAL paso13 .)
    PLUS            reduce using rule 86 (ssubexpression -> REAL paso13 .)
    MINUS           reduce using rule 86 (ssubexpression -> REAL paso13 .)
    END             reduce using rule 86 (ssubexpression -> REAL paso13 .)
    ID              reduce using rule 86 (ssubexpression -> REAL paso13 .)
    CALL            reduce using rule 86 (ssubexpression -> REAL paso13 .)
    READ            reduce using rule 86 (ssubexpression -> REAL paso13 .)
    WRITE           reduce using rule 86 (ssubexpression -> REAL paso13 .)
    IF              reduce using rule 86 (ssubexpression -> REAL paso13 .)
    EXIT            reduce using rule 86 (ssubexpression -> REAL paso13 .)
    DO              reduce using rule 86 (ssubexpression -> REAL paso13 .)
    ELSIF           reduce using rule 86 (ssubexpression -> REAL paso13 .)
    ELSE            reduce using rule 86 (ssubexpression -> REAL paso13 .)
    COMMA           reduce using rule 86 (ssubexpression -> REAL paso13 .)


state 55

    (85) ssubexpression -> NUMBER paso12 .

    MUL             reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    DIV             reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    CPAREN          reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    PLUS            reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    MINUS           reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    END             reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    ID              reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    CALL            reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    READ            reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    WRITE           reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    IF              reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    EXIT            reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    DO              reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    ELSIF           reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    ELSE            reduce using rule 85 (ssubexpression -> NUMBER paso12 .)
    COMMA           reduce using rule 85 (ssubexpression -> NUMBER paso12 .)


state 56

    (83) ssubexpression -> ID paso14 . OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> ID paso14 . OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN

    OPAREN          shift and go to state 85


state 57

    (82) ssubexpression -> ID paso1 .

    MUL             reduce using rule 82 (ssubexpression -> ID paso1 .)
    DIV             reduce using rule 82 (ssubexpression -> ID paso1 .)
    CPAREN          reduce using rule 82 (ssubexpression -> ID paso1 .)
    PLUS            reduce using rule 82 (ssubexpression -> ID paso1 .)
    MINUS           reduce using rule 82 (ssubexpression -> ID paso1 .)
    END             reduce using rule 82 (ssubexpression -> ID paso1 .)
    ID              reduce using rule 82 (ssubexpression -> ID paso1 .)
    CALL            reduce using rule 82 (ssubexpression -> ID paso1 .)
    READ            reduce using rule 82 (ssubexpression -> ID paso1 .)
    WRITE           reduce using rule 82 (ssubexpression -> ID paso1 .)
    IF              reduce using rule 82 (ssubexpression -> ID paso1 .)
    EXIT            reduce using rule 82 (ssubexpression -> ID paso1 .)
    DO              reduce using rule 82 (ssubexpression -> ID paso1 .)
    ELSIF           reduce using rule 82 (ssubexpression -> ID paso1 .)
    ELSE            reduce using rule 82 (ssubexpression -> ID paso1 .)
    COMMA           reduce using rule 82 (ssubexpression -> ID paso1 .)


state 58

    (39) statement -> WRITE write writequad .

    ID              reduce using rule 39 (statement -> WRITE write writequad .)
    CALL            reduce using rule 39 (statement -> WRITE write writequad .)
    READ            reduce using rule 39 (statement -> WRITE write writequad .)
    WRITE           reduce using rule 39 (statement -> WRITE write writequad .)
    IF              reduce using rule 39 (statement -> WRITE write writequad .)
    EXIT            reduce using rule 39 (statement -> WRITE write writequad .)
    DO              reduce using rule 39 (statement -> WRITE write writequad .)
    ELSIF           reduce using rule 39 (statement -> WRITE write writequad .)
    ELSE            reduce using rule 39 (statement -> WRITE write writequad .)
    END             reduce using rule 39 (statement -> WRITE write writequad .)


state 59

    (75) expression -> subexpression paso4 .

    CPAREN          reduce using rule 75 (expression -> subexpression paso4 .)
    PLUS            reduce using rule 75 (expression -> subexpression paso4 .)
    MINUS           reduce using rule 75 (expression -> subexpression paso4 .)
    END             reduce using rule 75 (expression -> subexpression paso4 .)
    ID              reduce using rule 75 (expression -> subexpression paso4 .)
    CALL            reduce using rule 75 (expression -> subexpression paso4 .)
    READ            reduce using rule 75 (expression -> subexpression paso4 .)
    WRITE           reduce using rule 75 (expression -> subexpression paso4 .)
    IF              reduce using rule 75 (expression -> subexpression paso4 .)
    EXIT            reduce using rule 75 (expression -> subexpression paso4 .)
    DO              reduce using rule 75 (expression -> subexpression paso4 .)
    ELSIF           reduce using rule 75 (expression -> subexpression paso4 .)
    ELSE            reduce using rule 75 (expression -> subexpression paso4 .)
    COMMA           reduce using rule 75 (expression -> subexpression paso4 .)


state 60

    (78) subexpression -> subexpression paso5 . MUL paso23 ssubexpression paso5
    (79) subexpression -> subexpression paso5 . DIV paso23 ssubexpression paso5

    MUL             shift and go to state 86
    DIV             shift and go to state 87


state 61

    (80) subexpression -> ssubexpression paso5 .

    MUL             reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    DIV             reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    PLUS            reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    MINUS           reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    END             reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    ID              reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    CALL            reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    READ            reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    WRITE           reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    IF              reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    EXIT            reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    DO              reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    ELSIF           reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    ELSE            reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    COMMA           reduce using rule 80 (subexpression -> ssubexpression paso5 .)
    CPAREN          reduce using rule 80 (subexpression -> ssubexpression paso5 .)


state 62

    (87) ssubexpression -> OPAREN paso6 . expression CPAREN paso7
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 88
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 63

    (46) write -> expression correction .

    END             reduce using rule 46 (write -> expression correction .)
    ID              reduce using rule 46 (write -> expression correction .)
    CALL            reduce using rule 46 (write -> expression correction .)
    READ            reduce using rule 46 (write -> expression correction .)
    WRITE           reduce using rule 46 (write -> expression correction .)
    IF              reduce using rule 46 (write -> expression correction .)
    EXIT            reduce using rule 46 (write -> expression correction .)
    DO              reduce using rule 46 (write -> expression correction .)
    ELSIF           reduce using rule 46 (write -> expression correction .)
    ELSE            reduce using rule 46 (write -> expression correction .)


state 64

    (73) expression -> expression paso4 . PLUS paso23 subexpression paso4
    (74) expression -> expression paso4 . MINUS paso23 subexpression paso4

    PLUS            shift and go to state 89
    MINUS           shift and go to state 90


state 65

    (36) statement -> CALL ID callprocedure .

    ID              reduce using rule 36 (statement -> CALL ID callprocedure .)
    CALL            reduce using rule 36 (statement -> CALL ID callprocedure .)
    READ            reduce using rule 36 (statement -> CALL ID callprocedure .)
    WRITE           reduce using rule 36 (statement -> CALL ID callprocedure .)
    IF              reduce using rule 36 (statement -> CALL ID callprocedure .)
    EXIT            reduce using rule 36 (statement -> CALL ID callprocedure .)
    DO              reduce using rule 36 (statement -> CALL ID callprocedure .)
    ELSIF           reduce using rule 36 (statement -> CALL ID callprocedure .)
    ELSE            reduce using rule 36 (statement -> CALL ID callprocedure .)
    END             reduce using rule 36 (statement -> CALL ID callprocedure .)


state 66

    (3) programa -> PROGRAM ID variables statements END PROGRAM ID . ending subroutines
    (4) ending -> .

    SUBROUTINE      reduce using rule 4 (ending -> .)
    $end            reduce using rule 4 (ending -> .)

    ending                         shift and go to state 91

state 67

    (45) statement -> DO paso1do statements paso2do . END DO

    END             shift and go to state 92


state 68

    (43) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 93

state 69

    (11) loopvars -> loopvars COMMA . ID

    ID              shift and go to state 94


state 70

    (15) variables3 -> tipo ID paso1dim OPAREN . paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID paso1dim OPAREN . paso2dim NUMBER paso3dim CPAREN paso51dim
    (18) paso2dim -> .

    NUMBER          reduce using rule 18 (paso2dim -> .)

    paso2dim                       shift and go to state 95

state 71

    (13) variables2 -> tipo ID EQUAL NUMBER .

    ID              reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    CALL            reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    READ            reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    WRITE           reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    IF              reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    EXIT            reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    DO              reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    INT             reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    REAL            reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)
    END             reduce using rule 13 (variables2 -> tipo ID EQUAL NUMBER .)


state 72

    (14) variables2 -> tipo ID EQUAL REAL .

    ID              reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    CALL            reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    READ            reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    WRITE           reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    IF              reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    EXIT            reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    DO              reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    INT             reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    REAL            reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)
    END             reduce using rule 14 (variables2 -> tipo ID EQUAL REAL .)


state 73

    (40) statement -> IF paso1bool ifs ELSE . paso3bool statements END IF paso4bool
    (50) paso3bool -> .

    ID              reduce using rule 50 (paso3bool -> .)
    CALL            reduce using rule 50 (paso3bool -> .)
    READ            reduce using rule 50 (paso3bool -> .)
    WRITE           reduce using rule 50 (paso3bool -> .)
    IF              reduce using rule 50 (paso3bool -> .)
    EXIT            reduce using rule 50 (paso3bool -> .)
    DO              reduce using rule 50 (paso3bool -> .)
    END             reduce using rule 50 (paso3bool -> .)

    paso3bool                      shift and go to state 96

state 74

    (41) statement -> IF paso1bool ifs END . IF paso4bool

    IF              shift and go to state 97


state 75

    (109) slogicexp -> REAL . paso13
    (90) paso13 -> .

    GT              reduce using rule 90 (paso13 -> .)
    GET             reduce using rule 90 (paso13 -> .)
    NE              reduce using rule 90 (paso13 -> .)
    EQUALS          reduce using rule 90 (paso13 -> .)
    LET             reduce using rule 90 (paso13 -> .)
    LT              reduce using rule 90 (paso13 -> .)
    CPAREN          reduce using rule 90 (paso13 -> .)
    AND             reduce using rule 90 (paso13 -> .)
    OR              reduce using rule 90 (paso13 -> .)

    paso13                         shift and go to state 98

state 76

    (100) logicexp -> slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (112) logicop -> . GT
    (113) logicop -> . GET
    (114) logicop -> . NE
    (115) logicop -> . EQUALS
    (116) logicop -> . LET
    (117) logicop -> . LT

    GT              shift and go to state 103
    GET             shift and go to state 99
    NE              shift and go to state 100
    EQUALS          shift and go to state 101
    LET             shift and go to state 104
    LT              shift and go to state 102

    logicop                        shift and go to state 105

state 77

    (108) slogicexp -> NUMBER . paso12
    (89) paso12 -> .

    GT              reduce using rule 89 (paso12 -> .)
    GET             reduce using rule 89 (paso12 -> .)
    NE              reduce using rule 89 (paso12 -> .)
    EQUALS          reduce using rule 89 (paso12 -> .)
    LET             reduce using rule 89 (paso12 -> .)
    LT              reduce using rule 89 (paso12 -> .)
    CPAREN          reduce using rule 89 (paso12 -> .)
    AND             reduce using rule 89 (paso12 -> .)
    OR              reduce using rule 89 (paso12 -> .)

    paso12                         shift and go to state 106

state 78

    (66) ifs -> OPAREN logicexp . CPAREN paso2bool THEN statements iffs
    (95) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          shift and go to state 108
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 107

state 79

    (107) slogicexp -> ID . paso1
    (110) slogicexp -> ID . OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> ID . OPAREN expression CPAREN
    (88) paso1 -> .

    OPAREN          shift and go to state 109
    GT              reduce using rule 88 (paso1 -> .)
    GET             reduce using rule 88 (paso1 -> .)
    NE              reduce using rule 88 (paso1 -> .)
    EQUALS          reduce using rule 88 (paso1 -> .)
    LET             reduce using rule 88 (paso1 -> .)
    LT              reduce using rule 88 (paso1 -> .)
    CPAREN          reduce using rule 88 (paso1 -> .)
    AND             reduce using rule 88 (paso1 -> .)
    OR              reduce using rule 88 (paso1 -> .)

    paso1                          shift and go to state 110

state 80

    (106) slogicexp -> OPAREN . logicexp CPAREN
    (95) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (99) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (100) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 81
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 76
    logicexp                       shift and go to state 111

state 81

    (99) logicexp -> NOT . andornot slogicexp pasonot paso2lgexp
    (94) andornot -> .

    OPAREN          reduce using rule 94 (andornot -> .)
    ID              reduce using rule 94 (andornot -> .)
    NUMBER          reduce using rule 94 (andornot -> .)
    REAL            reduce using rule 94 (andornot -> .)

    andornot                       shift and go to state 112

state 82

    (37) statement -> ID COLLON DO paso1do . statements paso2do END DO ID
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 113
    statement                      shift and go to state 10

state 83

    (33) statement -> ID paso8 EQUAL expression . paso9
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (61) paso9 -> .
    (76) paso4 -> .

    END             reduce using rule 61 (paso9 -> .)
    ID              reduce using rule 61 (paso9 -> .)
    CALL            reduce using rule 61 (paso9 -> .)
    READ            reduce using rule 61 (paso9 -> .)
    WRITE           reduce using rule 61 (paso9 -> .)
    IF              reduce using rule 61 (paso9 -> .)
    EXIT            reduce using rule 61 (paso9 -> .)
    DO              reduce using rule 61 (paso9 -> .)
    ELSIF           reduce using rule 61 (paso9 -> .)
    ELSE            reduce using rule 61 (paso9 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64
    paso9                          shift and go to state 114

state 84

    (34) statement -> ID paso8 OPAREN expression . pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> ID paso8 OPAREN expression . pasogetdim CPAREN EQUAL expression paso9
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (63) pasogetdim1 -> .
    (62) pasogetdim -> .
    (76) paso4 -> .

    COMMA           reduce using rule 63 (pasogetdim1 -> .)
    CPAREN          reduce using rule 62 (pasogetdim -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    pasogetdim1                    shift and go to state 115
    paso4                          shift and go to state 64
    pasogetdim                     shift and go to state 116

state 85

    (83) ssubexpression -> ID paso14 OPAREN . expression pasogetdim CPAREN
    (84) ssubexpression -> ID paso14 OPAREN . expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 117
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 86

    (78) subexpression -> subexpression paso5 MUL . paso23 ssubexpression paso5
    (77) paso23 -> .

    ID              reduce using rule 77 (paso23 -> .)
    NUMBER          reduce using rule 77 (paso23 -> .)
    REAL            reduce using rule 77 (paso23 -> .)
    OPAREN          reduce using rule 77 (paso23 -> .)

    paso23                         shift and go to state 118

state 87

    (79) subexpression -> subexpression paso5 DIV . paso23 ssubexpression paso5
    (77) paso23 -> .

    ID              reduce using rule 77 (paso23 -> .)
    NUMBER          reduce using rule 77 (paso23 -> .)
    REAL            reduce using rule 77 (paso23 -> .)
    OPAREN          reduce using rule 77 (paso23 -> .)

    paso23                         shift and go to state 119

state 88

    (87) ssubexpression -> OPAREN paso6 expression . CPAREN paso7
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (76) paso4 -> .

    CPAREN          shift and go to state 120
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64

state 89

    (73) expression -> expression paso4 PLUS . paso23 subexpression paso4
    (77) paso23 -> .

    ID              reduce using rule 77 (paso23 -> .)
    NUMBER          reduce using rule 77 (paso23 -> .)
    REAL            reduce using rule 77 (paso23 -> .)
    OPAREN          reduce using rule 77 (paso23 -> .)

    paso23                         shift and go to state 121

state 90

    (74) expression -> expression paso4 MINUS . paso23 subexpression paso4
    (77) paso23 -> .

    ID              reduce using rule 77 (paso23 -> .)
    NUMBER          reduce using rule 77 (paso23 -> .)
    REAL            reduce using rule 77 (paso23 -> .)
    OPAREN          reduce using rule 77 (paso23 -> .)

    paso23                         shift and go to state 122

state 91

    (3) programa -> PROGRAM ID variables statements END PROGRAM ID ending . subroutines
    (28) subroutines -> . subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine
    (29) subroutines -> . SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine
    (30) subroutines -> .

  ! shift/reduce conflict for SUBROUTINE resolved as shift
    SUBROUTINE      shift and go to state 124
    $end            reduce using rule 30 (subroutines -> .)

  ! SUBROUTINE      [ reduce using rule 30 (subroutines -> .) ]

    subroutines                    shift and go to state 123

state 92

    (45) statement -> DO paso1do statements paso2do END . DO

    DO              shift and go to state 125


state 93

    (43) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for statements paso4for2 END DO
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (54) paso2for -> .
    (76) paso4 -> .

    COMMA           reduce using rule 54 (paso2for -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso2for                       shift and go to state 126
    paso4                          shift and go to state 64

state 94

    (11) loopvars -> loopvars COMMA ID .

    COMMA           reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    ID              reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    CALL            reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    READ            reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    WRITE           reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    IF              reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    EXIT            reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    DO              reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    INT             reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    REAL            reduce using rule 11 (loopvars -> loopvars COMMA ID .)
    END             reduce using rule 11 (loopvars -> loopvars COMMA ID .)


state 95

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim . NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID paso1dim OPAREN paso2dim . NUMBER paso3dim CPAREN paso51dim

    NUMBER          shift and go to state 127


state 96

    (40) statement -> IF paso1bool ifs ELSE paso3bool . statements END IF paso4bool
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 128
    statement                      shift and go to state 10

state 97

    (41) statement -> IF paso1bool ifs END IF . paso4bool
    (68) paso4bool -> .

    END             reduce using rule 68 (paso4bool -> .)
    ID              reduce using rule 68 (paso4bool -> .)
    CALL            reduce using rule 68 (paso4bool -> .)
    READ            reduce using rule 68 (paso4bool -> .)
    WRITE           reduce using rule 68 (paso4bool -> .)
    IF              reduce using rule 68 (paso4bool -> .)
    EXIT            reduce using rule 68 (paso4bool -> .)
    DO              reduce using rule 68 (paso4bool -> .)
    ELSIF           reduce using rule 68 (paso4bool -> .)
    ELSE            reduce using rule 68 (paso4bool -> .)

    paso4bool                      shift and go to state 129

state 98

    (109) slogicexp -> REAL paso13 .

    GT              reduce using rule 109 (slogicexp -> REAL paso13 .)
    GET             reduce using rule 109 (slogicexp -> REAL paso13 .)
    NE              reduce using rule 109 (slogicexp -> REAL paso13 .)
    EQUALS          reduce using rule 109 (slogicexp -> REAL paso13 .)
    LET             reduce using rule 109 (slogicexp -> REAL paso13 .)
    LT              reduce using rule 109 (slogicexp -> REAL paso13 .)
    CPAREN          reduce using rule 109 (slogicexp -> REAL paso13 .)
    AND             reduce using rule 109 (slogicexp -> REAL paso13 .)
    OR              reduce using rule 109 (slogicexp -> REAL paso13 .)


state 99

    (113) logicop -> GET .

    OPAREN          reduce using rule 113 (logicop -> GET .)
    ID              reduce using rule 113 (logicop -> GET .)
    NUMBER          reduce using rule 113 (logicop -> GET .)
    REAL            reduce using rule 113 (logicop -> GET .)


state 100

    (114) logicop -> NE .

    OPAREN          reduce using rule 114 (logicop -> NE .)
    ID              reduce using rule 114 (logicop -> NE .)
    NUMBER          reduce using rule 114 (logicop -> NE .)
    REAL            reduce using rule 114 (logicop -> NE .)


state 101

    (115) logicop -> EQUALS .

    OPAREN          reduce using rule 115 (logicop -> EQUALS .)
    ID              reduce using rule 115 (logicop -> EQUALS .)
    NUMBER          reduce using rule 115 (logicop -> EQUALS .)
    REAL            reduce using rule 115 (logicop -> EQUALS .)


state 102

    (117) logicop -> LT .

    OPAREN          reduce using rule 117 (logicop -> LT .)
    ID              reduce using rule 117 (logicop -> LT .)
    NUMBER          reduce using rule 117 (logicop -> LT .)
    REAL            reduce using rule 117 (logicop -> LT .)


state 103

    (112) logicop -> GT .

    OPAREN          reduce using rule 112 (logicop -> GT .)
    ID              reduce using rule 112 (logicop -> GT .)
    NUMBER          reduce using rule 112 (logicop -> GT .)
    REAL            reduce using rule 112 (logicop -> GT .)


state 104

    (116) logicop -> LET .

    OPAREN          reduce using rule 116 (logicop -> LET .)
    ID              reduce using rule 116 (logicop -> LET .)
    NUMBER          reduce using rule 116 (logicop -> LET .)
    REAL            reduce using rule 116 (logicop -> LET .)


state 105

    (100) logicexp -> slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 130

state 106

    (108) slogicexp -> NUMBER paso12 .

    GT              reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    GET             reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    NE              reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    EQUALS          reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    LET             reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    LT              reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    CPAREN          reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    AND             reduce using rule 108 (slogicexp -> NUMBER paso12 .)
    OR              reduce using rule 108 (slogicexp -> NUMBER paso12 .)


state 107

    (95) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp paso2lgexp . AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp paso2lgexp . OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp

    AND             shift and go to state 131
    OR              shift and go to state 132


state 108

    (66) ifs -> OPAREN logicexp CPAREN . paso2bool THEN statements iffs
    (67) paso2bool -> .

    THEN            reduce using rule 67 (paso2bool -> .)

    paso2bool                      shift and go to state 133

state 109

    (110) slogicexp -> ID OPAREN . expression COMMA expression CPAREN
    (111) slogicexp -> ID OPAREN . expression CPAREN
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 134
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 110

    (107) slogicexp -> ID paso1 .

    GT              reduce using rule 107 (slogicexp -> ID paso1 .)
    GET             reduce using rule 107 (slogicexp -> ID paso1 .)
    NE              reduce using rule 107 (slogicexp -> ID paso1 .)
    EQUALS          reduce using rule 107 (slogicexp -> ID paso1 .)
    LET             reduce using rule 107 (slogicexp -> ID paso1 .)
    LT              reduce using rule 107 (slogicexp -> ID paso1 .)
    CPAREN          reduce using rule 107 (slogicexp -> ID paso1 .)
    AND             reduce using rule 107 (slogicexp -> ID paso1 .)
    OR              reduce using rule 107 (slogicexp -> ID paso1 .)


state 111

    (106) slogicexp -> OPAREN logicexp . CPAREN
    (95) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          shift and go to state 135
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 107

state 112

    (99) logicexp -> NOT andornot . slogicexp pasonot paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 136

state 113

    (37) statement -> ID COLLON DO paso1do statements . paso2do END DO ID
    (23) statements -> statements . statement
    (52) paso2do -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             reduce using rule 52 (paso2do -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    paso2do                        shift and go to state 137
    statement                      shift and go to state 21

state 114

    (33) statement -> ID paso8 EQUAL expression paso9 .

    ID              reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    CALL            reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    READ            reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    WRITE           reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    IF              reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    EXIT            reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    DO              reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    ELSIF           reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    ELSE            reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)
    END             reduce using rule 33 (statement -> ID paso8 EQUAL expression paso9 .)


state 115

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 . COMMA expression pasogetdim2 CPAREN EQUAL expression paso9

    COMMA           shift and go to state 138


state 116

    (35) statement -> ID paso8 OPAREN expression pasogetdim . CPAREN EQUAL expression paso9

    CPAREN          shift and go to state 139


state 117

    (83) ssubexpression -> ID paso14 OPAREN expression . pasogetdim CPAREN
    (84) ssubexpression -> ID paso14 OPAREN expression . pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (62) pasogetdim -> .
    (63) pasogetdim1 -> .
    (76) paso4 -> .

    CPAREN          reduce using rule 62 (pasogetdim -> .)
    COMMA           reduce using rule 63 (pasogetdim1 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    pasogetdim1                    shift and go to state 140
    paso4                          shift and go to state 64
    pasogetdim                     shift and go to state 141

state 118

    (78) subexpression -> subexpression paso5 MUL paso23 . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    ssubexpression                 shift and go to state 142

state 119

    (79) subexpression -> subexpression paso5 DIV paso23 . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    ssubexpression                 shift and go to state 143

state 120

    (87) ssubexpression -> OPAREN paso6 expression CPAREN . paso7
    (93) paso7 -> .

    MUL             reduce using rule 93 (paso7 -> .)
    DIV             reduce using rule 93 (paso7 -> .)
    PLUS            reduce using rule 93 (paso7 -> .)
    MINUS           reduce using rule 93 (paso7 -> .)
    END             reduce using rule 93 (paso7 -> .)
    ID              reduce using rule 93 (paso7 -> .)
    CALL            reduce using rule 93 (paso7 -> .)
    READ            reduce using rule 93 (paso7 -> .)
    WRITE           reduce using rule 93 (paso7 -> .)
    IF              reduce using rule 93 (paso7 -> .)
    EXIT            reduce using rule 93 (paso7 -> .)
    DO              reduce using rule 93 (paso7 -> .)
    ELSIF           reduce using rule 93 (paso7 -> .)
    ELSE            reduce using rule 93 (paso7 -> .)
    COMMA           reduce using rule 93 (paso7 -> .)
    CPAREN          reduce using rule 93 (paso7 -> .)

    paso7                          shift and go to state 144

state 121

    (73) expression -> expression paso4 PLUS paso23 . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 145
    ssubexpression                 shift and go to state 37

state 122

    (74) expression -> expression paso4 MINUS paso23 . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 146
    ssubexpression                 shift and go to state 37

state 123

    (3) programa -> PROGRAM ID variables statements END PROGRAM ID ending subroutines .
    (28) subroutines -> subroutines . SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine

    $end            reduce using rule 3 (programa -> PROGRAM ID variables statements END PROGRAM ID ending subroutines .)
    SUBROUTINE      shift and go to state 147


state 124

    (29) subroutines -> SUBROUTINE . ID paso1subroutine statements END SUBROUTINE paso2subroutine

    ID              shift and go to state 148


state 125

    (45) statement -> DO paso1do statements paso2do END DO .

    ID              reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    CALL            reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    READ            reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    WRITE           reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    IF              reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    EXIT            reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    DO              reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    ELSIF           reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    ELSE            reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)
    END             reduce using rule 45 (statement -> DO paso1do statements paso2do END DO .)


state 126

    (43) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for statements paso4for2 END DO

    COMMA           shift and go to state 149


state 127

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER . paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER . paso3dim CPAREN paso51dim
    (19) paso3dim -> .

    COMMA           reduce using rule 19 (paso3dim -> .)
    CPAREN          reduce using rule 19 (paso3dim -> .)

    paso3dim                       shift and go to state 150

state 128

    (40) statement -> IF paso1bool ifs ELSE paso3bool statements . END IF paso4bool
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             shift and go to state 151
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21

state 129

    (41) statement -> IF paso1bool ifs END IF paso4bool .

    ID              reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    CALL            reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    READ            reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    WRITE           reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    IF              reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    EXIT            reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    DO              reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSIF           reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSE            reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)
    END             reduce using rule 41 (statement -> IF paso1bool ifs END IF paso4bool .)


state 130

    (100) logicexp -> slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (103) paso1lgexp -> .

    CPAREN          reduce using rule 103 (paso1lgexp -> .)
    AND             reduce using rule 103 (paso1lgexp -> .)
    OR              reduce using rule 103 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 152

state 131

    (95) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp paso2lgexp AND . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) andornot -> .

    NOT             reduce using rule 94 (andornot -> .)
    OPAREN          reduce using rule 94 (andornot -> .)
    ID              reduce using rule 94 (andornot -> .)
    NUMBER          reduce using rule 94 (andornot -> .)
    REAL            reduce using rule 94 (andornot -> .)

    andornot                       shift and go to state 153

state 132

    (96) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp paso2lgexp OR . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) andornot -> .

    NOT             reduce using rule 94 (andornot -> .)
    OPAREN          reduce using rule 94 (andornot -> .)
    ID              reduce using rule 94 (andornot -> .)
    NUMBER          reduce using rule 94 (andornot -> .)
    REAL            reduce using rule 94 (andornot -> .)

    andornot                       shift and go to state 154

state 133

    (66) ifs -> OPAREN logicexp CPAREN paso2bool . THEN statements iffs

    THEN            shift and go to state 155


state 134

    (110) slogicexp -> ID OPAREN expression . COMMA expression CPAREN
    (111) slogicexp -> ID OPAREN expression . CPAREN
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (76) paso4 -> .

    COMMA           shift and go to state 157
    CPAREN          shift and go to state 156
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64

state 135

    (106) slogicexp -> OPAREN logicexp CPAREN .

    GT              reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    GET             reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    NE              reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    EQUALS          reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    LET             reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    LT              reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    CPAREN          reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    AND             reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)
    OR              reduce using rule 106 (slogicexp -> OPAREN logicexp CPAREN .)


state 136

    (99) logicexp -> NOT andornot slogicexp . pasonot paso2lgexp
    (105) pasonot -> .

    CPAREN          reduce using rule 105 (pasonot -> .)
    AND             reduce using rule 105 (pasonot -> .)
    OR              reduce using rule 105 (pasonot -> .)

    pasonot                        shift and go to state 158

state 137

    (37) statement -> ID COLLON DO paso1do statements paso2do . END DO ID

    END             shift and go to state 159


state 138

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA . expression pasogetdim2 CPAREN EQUAL expression paso9
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 160
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 139

    (35) statement -> ID paso8 OPAREN expression pasogetdim CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 161


state 140

    (84) ssubexpression -> ID paso14 OPAREN expression pasogetdim1 . COMMA expression pasogetdim2 CPAREN

    COMMA           shift and go to state 162


state 141

    (83) ssubexpression -> ID paso14 OPAREN expression pasogetdim . CPAREN

    CPAREN          shift and go to state 163


state 142

    (78) subexpression -> subexpression paso5 MUL paso23 ssubexpression . paso5
    (81) paso5 -> .

    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)
    PLUS            reduce using rule 81 (paso5 -> .)
    MINUS           reduce using rule 81 (paso5 -> .)
    END             reduce using rule 81 (paso5 -> .)
    ID              reduce using rule 81 (paso5 -> .)
    CALL            reduce using rule 81 (paso5 -> .)
    READ            reduce using rule 81 (paso5 -> .)
    WRITE           reduce using rule 81 (paso5 -> .)
    IF              reduce using rule 81 (paso5 -> .)
    EXIT            reduce using rule 81 (paso5 -> .)
    DO              reduce using rule 81 (paso5 -> .)
    ELSIF           reduce using rule 81 (paso5 -> .)
    ELSE            reduce using rule 81 (paso5 -> .)
    COMMA           reduce using rule 81 (paso5 -> .)
    CPAREN          reduce using rule 81 (paso5 -> .)

    paso5                          shift and go to state 164

state 143

    (79) subexpression -> subexpression paso5 DIV paso23 ssubexpression . paso5
    (81) paso5 -> .

    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)
    PLUS            reduce using rule 81 (paso5 -> .)
    MINUS           reduce using rule 81 (paso5 -> .)
    END             reduce using rule 81 (paso5 -> .)
    ID              reduce using rule 81 (paso5 -> .)
    CALL            reduce using rule 81 (paso5 -> .)
    READ            reduce using rule 81 (paso5 -> .)
    WRITE           reduce using rule 81 (paso5 -> .)
    IF              reduce using rule 81 (paso5 -> .)
    EXIT            reduce using rule 81 (paso5 -> .)
    DO              reduce using rule 81 (paso5 -> .)
    ELSIF           reduce using rule 81 (paso5 -> .)
    ELSE            reduce using rule 81 (paso5 -> .)
    COMMA           reduce using rule 81 (paso5 -> .)
    CPAREN          reduce using rule 81 (paso5 -> .)

    paso5                          shift and go to state 165

state 144

    (87) ssubexpression -> OPAREN paso6 expression CPAREN paso7 .

    MUL             reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DIV             reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    CPAREN          reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    PLUS            reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    MINUS           reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    END             reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ID              reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    CALL            reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    READ            reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    WRITE           reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    IF              reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    EXIT            reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DO              reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSIF           reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSE            reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    COMMA           reduce using rule 87 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)


state 145

    (73) expression -> expression paso4 PLUS paso23 subexpression . paso4
    (78) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (76) paso4 -> .
    (81) paso5 -> .

    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)
    END             reduce using rule 76 (paso4 -> .)
    ID              reduce using rule 76 (paso4 -> .)
    CALL            reduce using rule 76 (paso4 -> .)
    READ            reduce using rule 76 (paso4 -> .)
    WRITE           reduce using rule 76 (paso4 -> .)
    IF              reduce using rule 76 (paso4 -> .)
    EXIT            reduce using rule 76 (paso4 -> .)
    DO              reduce using rule 76 (paso4 -> .)
    ELSIF           reduce using rule 76 (paso4 -> .)
    ELSE            reduce using rule 76 (paso4 -> .)
    COMMA           reduce using rule 76 (paso4 -> .)
    CPAREN          reduce using rule 76 (paso4 -> .)
    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)

    paso4                          shift and go to state 166
    paso5                          shift and go to state 60

state 146

    (74) expression -> expression paso4 MINUS paso23 subexpression . paso4
    (78) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (76) paso4 -> .
    (81) paso5 -> .

    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)
    END             reduce using rule 76 (paso4 -> .)
    ID              reduce using rule 76 (paso4 -> .)
    CALL            reduce using rule 76 (paso4 -> .)
    READ            reduce using rule 76 (paso4 -> .)
    WRITE           reduce using rule 76 (paso4 -> .)
    IF              reduce using rule 76 (paso4 -> .)
    EXIT            reduce using rule 76 (paso4 -> .)
    DO              reduce using rule 76 (paso4 -> .)
    ELSIF           reduce using rule 76 (paso4 -> .)
    ELSE            reduce using rule 76 (paso4 -> .)
    COMMA           reduce using rule 76 (paso4 -> .)
    CPAREN          reduce using rule 76 (paso4 -> .)
    MUL             reduce using rule 81 (paso5 -> .)
    DIV             reduce using rule 81 (paso5 -> .)

    paso4                          shift and go to state 167
    paso5                          shift and go to state 60

state 147

    (28) subroutines -> subroutines SUBROUTINE . ID paso1subroutine statements END SUBROUTINE paso2subroutine

    ID              shift and go to state 168


state 148

    (29) subroutines -> SUBROUTINE ID . paso1subroutine statements END SUBROUTINE paso2subroutine
    (31) paso1subroutine -> .

    ID              reduce using rule 31 (paso1subroutine -> .)
    CALL            reduce using rule 31 (paso1subroutine -> .)
    READ            reduce using rule 31 (paso1subroutine -> .)
    WRITE           reduce using rule 31 (paso1subroutine -> .)
    IF              reduce using rule 31 (paso1subroutine -> .)
    EXIT            reduce using rule 31 (paso1subroutine -> .)
    DO              reduce using rule 31 (paso1subroutine -> .)
    END             reduce using rule 31 (paso1subroutine -> .)

    paso1subroutine                shift and go to state 169

state 149

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for statements paso4for2 END DO
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 170

state 150

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim . COMMA NUMBER paso4dim CPAREN paso52dim
    (16) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim . CPAREN paso51dim

    COMMA           shift and go to state 172
    CPAREN          shift and go to state 171


state 151

    (40) statement -> IF paso1bool ifs ELSE paso3bool statements END . IF paso4bool

    IF              shift and go to state 173


state 152

    (100) logicexp -> slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 174

state 153

    (95) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp paso2lgexp AND andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 176
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 175

state 154

    (96) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp paso2lgexp OR andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 178
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 177

state 155

    (66) ifs -> OPAREN logicexp CPAREN paso2bool THEN . statements iffs
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 25 (statements -> .)
    ELSE            reduce using rule 25 (statements -> .)
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 179
    statement                      shift and go to state 10

state 156

    (111) slogicexp -> ID OPAREN expression CPAREN .

    GT              reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    GET             reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    NE              reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    EQUALS          reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    LET             reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    LT              reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    CPAREN          reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    AND             reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)
    OR              reduce using rule 111 (slogicexp -> ID OPAREN expression CPAREN .)


state 157

    (110) slogicexp -> ID OPAREN expression COMMA . expression CPAREN
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 180
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 158

    (99) logicexp -> NOT andornot slogicexp pasonot . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 181

state 159

    (37) statement -> ID COLLON DO paso1do statements paso2do END . DO ID

    DO              shift and go to state 182


state 160

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression . pasogetdim2 CPAREN EQUAL expression paso9
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (64) pasogetdim2 -> .
    (76) paso4 -> .

    CPAREN          reduce using rule 64 (pasogetdim2 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    pasogetdim2                    shift and go to state 183
    paso4                          shift and go to state 64

state 161

    (35) statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL . expression paso9
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 184

state 162

    (84) ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA . expression pasogetdim2 CPAREN
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 185
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 163

    (83) ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .

    MUL             reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    DIV             reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    CPAREN          reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    PLUS            reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    MINUS           reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    END             reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    ID              reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    CALL            reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    READ            reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    WRITE           reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    IF              reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    EXIT            reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    DO              reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    ELSIF           reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    ELSE            reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)
    COMMA           reduce using rule 83 (ssubexpression -> ID paso14 OPAREN expression pasogetdim CPAREN .)


state 164

    (78) subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .

    MUL             reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DIV             reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    END             reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ID              reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    CALL            reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    READ            reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    IF              reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    EXIT            reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DO              reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 78 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)


state 165

    (79) subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .

    MUL             reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DIV             reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    END             reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ID              reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    CALL            reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    READ            reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    IF              reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    EXIT            reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DO              reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 79 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)


state 166

    (73) expression -> expression paso4 PLUS paso23 subexpression paso4 .

    CPAREN          reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    END             reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ID              reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    CALL            reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    READ            reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    IF              reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    EXIT            reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    DO              reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    COMMA           reduce using rule 73 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)


state 167

    (74) expression -> expression paso4 MINUS paso23 subexpression paso4 .

    CPAREN          reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    END             reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ID              reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    CALL            reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    READ            reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    IF              reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    EXIT            reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    DO              reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    COMMA           reduce using rule 74 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)


state 168

    (28) subroutines -> subroutines SUBROUTINE ID . paso1subroutine statements END SUBROUTINE paso2subroutine
    (31) paso1subroutine -> .

    ID              reduce using rule 31 (paso1subroutine -> .)
    CALL            reduce using rule 31 (paso1subroutine -> .)
    READ            reduce using rule 31 (paso1subroutine -> .)
    WRITE           reduce using rule 31 (paso1subroutine -> .)
    IF              reduce using rule 31 (paso1subroutine -> .)
    EXIT            reduce using rule 31 (paso1subroutine -> .)
    DO              reduce using rule 31 (paso1subroutine -> .)
    END             reduce using rule 31 (paso1subroutine -> .)

    paso1subroutine                shift and go to state 186

state 169

    (29) subroutines -> SUBROUTINE ID paso1subroutine . statements END SUBROUTINE paso2subroutine
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 187
    statement                      shift and go to state 10

state 170

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for statements paso4for2 END DO
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (55) paso3for -> .
    (76) paso4 -> .

    COMMA           reduce using rule 55 (paso3for -> .)
    ID              reduce using rule 55 (paso3for -> .)
    CALL            reduce using rule 55 (paso3for -> .)
    READ            reduce using rule 55 (paso3for -> .)
    WRITE           reduce using rule 55 (paso3for -> .)
    IF              reduce using rule 55 (paso3for -> .)
    EXIT            reduce using rule 55 (paso3for -> .)
    DO              reduce using rule 55 (paso3for -> .)
    END             reduce using rule 55 (paso3for -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64
    paso3for                       shift and go to state 188

state 171

    (16) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN . paso51dim
    (21) paso51dim -> .

    ID              reduce using rule 21 (paso51dim -> .)
    CALL            reduce using rule 21 (paso51dim -> .)
    READ            reduce using rule 21 (paso51dim -> .)
    WRITE           reduce using rule 21 (paso51dim -> .)
    IF              reduce using rule 21 (paso51dim -> .)
    EXIT            reduce using rule 21 (paso51dim -> .)
    DO              reduce using rule 21 (paso51dim -> .)
    INT             reduce using rule 21 (paso51dim -> .)
    REAL            reduce using rule 21 (paso51dim -> .)
    END             reduce using rule 21 (paso51dim -> .)

    paso51dim                      shift and go to state 189

state 172

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA . NUMBER paso4dim CPAREN paso52dim

    NUMBER          shift and go to state 190


state 173

    (40) statement -> IF paso1bool ifs ELSE paso3bool statements END IF . paso4bool
    (68) paso4bool -> .

    END             reduce using rule 68 (paso4bool -> .)
    ID              reduce using rule 68 (paso4bool -> .)
    CALL            reduce using rule 68 (paso4bool -> .)
    READ            reduce using rule 68 (paso4bool -> .)
    WRITE           reduce using rule 68 (paso4bool -> .)
    IF              reduce using rule 68 (paso4bool -> .)
    EXIT            reduce using rule 68 (paso4bool -> .)
    DO              reduce using rule 68 (paso4bool -> .)
    ELSIF           reduce using rule 68 (paso4bool -> .)
    ELSE            reduce using rule 68 (paso4bool -> .)

    paso4bool                      shift and go to state 191

state 174

    (100) logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 100 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 100 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 100 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 175

    (101) logicexp -> logicexp paso2lgexp AND andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (112) logicop -> . GT
    (113) logicop -> . GET
    (114) logicop -> . NE
    (115) logicop -> . EQUALS
    (116) logicop -> . LET
    (117) logicop -> . LT

    GT              shift and go to state 103
    GET             shift and go to state 99
    NE              shift and go to state 100
    EQUALS          shift and go to state 101
    LET             shift and go to state 104
    LT              shift and go to state 102

    logicop                        shift and go to state 192

state 176

    (95) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) andornot -> .

    OPAREN          reduce using rule 94 (andornot -> .)
    ID              reduce using rule 94 (andornot -> .)
    NUMBER          reduce using rule 94 (andornot -> .)
    REAL            reduce using rule 94 (andornot -> .)

    andornot                       shift and go to state 193

state 177

    (102) logicexp -> logicexp paso2lgexp OR andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (112) logicop -> . GT
    (113) logicop -> . GET
    (114) logicop -> . NE
    (115) logicop -> . EQUALS
    (116) logicop -> . LET
    (117) logicop -> . LT

    GT              shift and go to state 103
    GET             shift and go to state 99
    NE              shift and go to state 100
    EQUALS          shift and go to state 101
    LET             shift and go to state 104
    LT              shift and go to state 102

    logicop                        shift and go to state 194

state 178

    (96) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) andornot -> .

    OPAREN          reduce using rule 94 (andornot -> .)
    ID              reduce using rule 94 (andornot -> .)
    NUMBER          reduce using rule 94 (andornot -> .)
    REAL            reduce using rule 94 (andornot -> .)

    andornot                       shift and go to state 195

state 179

    (66) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements . iffs
    (23) statements -> statements . statement
    (69) iffs -> . iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (70) iffs -> . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (71) iffs -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ELSIF resolved as shift
    ELSIF           shift and go to state 196
    ELSE            reduce using rule 71 (iffs -> .)
    END             reduce using rule 71 (iffs -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ELSIF           [ reduce using rule 71 (iffs -> .) ]

    statement                      shift and go to state 21
    iffs                           shift and go to state 197

state 180

    (110) slogicexp -> ID OPAREN expression COMMA expression . CPAREN
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (76) paso4 -> .

    CPAREN          shift and go to state 198
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64

state 181

    (99) logicexp -> NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 99 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 99 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 99 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)


state 182

    (37) statement -> ID COLLON DO paso1do statements paso2do END DO . ID

    ID              shift and go to state 199


state 183

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 . CPAREN EQUAL expression paso9

    CPAREN          shift and go to state 200


state 184

    (35) statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression . paso9
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (61) paso9 -> .
    (76) paso4 -> .

    END             reduce using rule 61 (paso9 -> .)
    ID              reduce using rule 61 (paso9 -> .)
    CALL            reduce using rule 61 (paso9 -> .)
    READ            reduce using rule 61 (paso9 -> .)
    WRITE           reduce using rule 61 (paso9 -> .)
    IF              reduce using rule 61 (paso9 -> .)
    EXIT            reduce using rule 61 (paso9 -> .)
    DO              reduce using rule 61 (paso9 -> .)
    ELSIF           reduce using rule 61 (paso9 -> .)
    ELSE            reduce using rule 61 (paso9 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso4                          shift and go to state 64
    paso9                          shift and go to state 201

state 185

    (84) ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression . pasogetdim2 CPAREN
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (64) pasogetdim2 -> .
    (76) paso4 -> .

    CPAREN          reduce using rule 64 (pasogetdim2 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    pasogetdim2                    shift and go to state 202
    paso4                          shift and go to state 64

state 186

    (28) subroutines -> subroutines SUBROUTINE ID paso1subroutine . statements END SUBROUTINE paso2subroutine
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 203
    statement                      shift and go to state 10

state 187

    (29) subroutines -> SUBROUTINE ID paso1subroutine statements . END SUBROUTINE paso2subroutine
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             shift and go to state 204
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21

state 188

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . COMMA expression statements paso4for1 END DO
    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . statements paso4for2 END DO
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    COMMA           shift and go to state 206
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 205
    statement                      shift and go to state 10

state 189

    (16) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .

    ID              reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    CALL            reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    READ            reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    WRITE           reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    IF              reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    EXIT            reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    DO              reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    INT             reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    REAL            reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    END             reduce using rule 16 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)


state 190

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER . paso4dim CPAREN paso52dim
    (20) paso4dim -> .

    CPAREN          reduce using rule 20 (paso4dim -> .)

    paso4dim                       shift and go to state 207

state 191

    (40) statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .

    ID              reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    CALL            reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    READ            reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    WRITE           reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    IF              reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    EXIT            reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    DO              reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSIF           reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSE            reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    END             reduce using rule 40 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)


state 192

    (101) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 208

state 193

    (95) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 209

state 194

    (102) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 210

state 195

    (96) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 211

state 196

    (70) iffs -> ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (50) paso3bool -> .

    OPAREN          reduce using rule 50 (paso3bool -> .)

    paso3bool                      shift and go to state 212

state 197

    (66) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .
    (69) iffs -> iffs . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements

    ELSE            reduce using rule 66 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    END             reduce using rule 66 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    ELSIF           shift and go to state 213


state 198

    (110) slogicexp -> ID OPAREN expression COMMA expression CPAREN .

    GT              reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    GET             reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    NE              reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    EQUALS          reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LET             reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LT              reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    CPAREN          reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    AND             reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    OR              reduce using rule 110 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)


state 199

    (37) statement -> ID COLLON DO paso1do statements paso2do END DO ID .

    ID              reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    CALL            reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    READ            reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    WRITE           reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    IF              reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    EXIT            reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    DO              reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    ELSIF           reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    ELSE            reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)
    END             reduce using rule 37 (statement -> ID COLLON DO paso1do statements paso2do END DO ID .)


state 200

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 214


state 201

    (35) statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .

    ID              reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    CALL            reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    EXIT            reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)
    END             reduce using rule 35 (statement -> ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9 .)


state 202

    (84) ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 . CPAREN

    CPAREN          shift and go to state 215


state 203

    (28) subroutines -> subroutines SUBROUTINE ID paso1subroutine statements . END SUBROUTINE paso2subroutine
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             shift and go to state 216
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21

state 204

    (29) subroutines -> SUBROUTINE ID paso1subroutine statements END . SUBROUTINE paso2subroutine

    SUBROUTINE      shift and go to state 217


state 205

    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements . paso4for2 END DO
    (23) statements -> statements . statement
    (57) paso4for2 -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             reduce using rule 57 (paso4for2 -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    paso4for2                      shift and go to state 218
    statement                      shift and go to state 21

state 206

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA . expression statements paso4for1 END DO
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37
    expression                     shift and go to state 219

state 207

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim . CPAREN paso52dim

    CPAREN          shift and go to state 220


state 208

    (101) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (103) paso1lgexp -> .

    CPAREN          reduce using rule 103 (paso1lgexp -> .)
    AND             reduce using rule 103 (paso1lgexp -> .)
    OR              reduce using rule 103 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 221

state 209

    (95) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (105) pasonot -> .

    GT              reduce using rule 105 (pasonot -> .)
    GET             reduce using rule 105 (pasonot -> .)
    NE              reduce using rule 105 (pasonot -> .)
    EQUALS          reduce using rule 105 (pasonot -> .)
    LET             reduce using rule 105 (pasonot -> .)
    LT              reduce using rule 105 (pasonot -> .)
    CPAREN          reduce using rule 105 (pasonot -> .)
    AND             reduce using rule 105 (pasonot -> .)
    OR              reduce using rule 105 (pasonot -> .)

    pasonot                        shift and go to state 222

state 210

    (102) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (103) paso1lgexp -> .

    CPAREN          reduce using rule 103 (paso1lgexp -> .)
    AND             reduce using rule 103 (paso1lgexp -> .)
    OR              reduce using rule 103 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 223

state 211

    (96) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (105) pasonot -> .

    GT              reduce using rule 105 (pasonot -> .)
    GET             reduce using rule 105 (pasonot -> .)
    NE              reduce using rule 105 (pasonot -> .)
    EQUALS          reduce using rule 105 (pasonot -> .)
    LET             reduce using rule 105 (pasonot -> .)
    LT              reduce using rule 105 (pasonot -> .)
    CPAREN          reduce using rule 105 (pasonot -> .)
    AND             reduce using rule 105 (pasonot -> .)
    OR              reduce using rule 105 (pasonot -> .)

    pasonot                        shift and go to state 224

state 212

    (70) iffs -> ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 225


state 213

    (69) iffs -> iffs ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (50) paso3bool -> .

    OPAREN          reduce using rule 50 (paso3bool -> .)

    paso3bool                      shift and go to state 226

state 214

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL . expression paso9
    (73) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (74) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (75) expression -> . subexpression paso4
    (78) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (79) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (80) subexpression -> . ssubexpression paso5
    (82) ssubexpression -> . ID paso1
    (83) ssubexpression -> . ID paso14 OPAREN expression pasogetdim CPAREN
    (84) ssubexpression -> . ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN
    (85) ssubexpression -> . NUMBER paso12
    (86) ssubexpression -> . REAL paso13
    (87) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 33
    NUMBER          shift and go to state 32
    REAL            shift and go to state 31
    OPAREN          shift and go to state 38

    expression                     shift and go to state 227
    subexpression                  shift and go to state 36
    ssubexpression                 shift and go to state 37

state 215

    (84) ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .

    MUL             reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    DIV             reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    CPAREN          reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    PLUS            reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    MINUS           reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    END             reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    ID              reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    CALL            reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    READ            reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    WRITE           reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    IF              reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    EXIT            reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    DO              reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    ELSIF           reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    ELSE            reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)
    COMMA           reduce using rule 84 (ssubexpression -> ID paso14 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN .)


state 216

    (28) subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END . SUBROUTINE paso2subroutine

    SUBROUTINE      shift and go to state 228


state 217

    (29) subroutines -> SUBROUTINE ID paso1subroutine statements END SUBROUTINE . paso2subroutine
    (32) paso2subroutine -> .

    SUBROUTINE      reduce using rule 32 (paso2subroutine -> .)
    $end            reduce using rule 32 (paso2subroutine -> .)

    paso2subroutine                shift and go to state 229

state 218

    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 . END DO

    END             shift and go to state 230


state 219

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression . statements paso4for1 END DO
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (76) paso4 -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 25 (statements -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 231
    statement                      shift and go to state 10
    paso4                          shift and go to state 64

state 220

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN . paso52dim
    (22) paso52dim -> .

    ID              reduce using rule 22 (paso52dim -> .)
    CALL            reduce using rule 22 (paso52dim -> .)
    READ            reduce using rule 22 (paso52dim -> .)
    WRITE           reduce using rule 22 (paso52dim -> .)
    IF              reduce using rule 22 (paso52dim -> .)
    EXIT            reduce using rule 22 (paso52dim -> .)
    DO              reduce using rule 22 (paso52dim -> .)
    INT             reduce using rule 22 (paso52dim -> .)
    REAL            reduce using rule 22 (paso52dim -> .)
    END             reduce using rule 22 (paso52dim -> .)

    paso52dim                      shift and go to state 232

state 221

    (101) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 233

state 222

    (95) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .
    (112) logicop -> . GT
    (113) logicop -> . GET
    (114) logicop -> . NE
    (115) logicop -> . EQUALS
    (116) logicop -> . LET
    (117) logicop -> . LT

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)
    GT              shift and go to state 103
    GET             shift and go to state 99
    NE              shift and go to state 100
    EQUALS          shift and go to state 101
    LET             shift and go to state 104
    LT              shift and go to state 102

    paso2lgexp                     shift and go to state 234
    logicop                        shift and go to state 235

state 223

    (102) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 236

state 224

    (96) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .
    (112) logicop -> . GT
    (113) logicop -> . GET
    (114) logicop -> . NE
    (115) logicop -> . EQUALS
    (116) logicop -> . LET
    (117) logicop -> . LT

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)
    GT              shift and go to state 103
    GET             shift and go to state 99
    NE              shift and go to state 100
    EQUALS          shift and go to state 101
    LET             shift and go to state 104
    LT              shift and go to state 102

    paso2lgexp                     shift and go to state 237
    logicop                        shift and go to state 238

state 225

    (70) iffs -> ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (95) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (99) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (100) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 81
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 76
    logicexp                       shift and go to state 239

state 226

    (69) iffs -> iffs ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 240


state 227

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression . paso9
    (73) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (74) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (61) paso9 -> .
    (76) paso4 -> .

    END             reduce using rule 61 (paso9 -> .)
    ID              reduce using rule 61 (paso9 -> .)
    CALL            reduce using rule 61 (paso9 -> .)
    READ            reduce using rule 61 (paso9 -> .)
    WRITE           reduce using rule 61 (paso9 -> .)
    IF              reduce using rule 61 (paso9 -> .)
    EXIT            reduce using rule 61 (paso9 -> .)
    DO              reduce using rule 61 (paso9 -> .)
    ELSIF           reduce using rule 61 (paso9 -> .)
    ELSE            reduce using rule 61 (paso9 -> .)
    PLUS            reduce using rule 76 (paso4 -> .)
    MINUS           reduce using rule 76 (paso4 -> .)

    paso9                          shift and go to state 241
    paso4                          shift and go to state 64

state 228

    (28) subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE . paso2subroutine
    (32) paso2subroutine -> .

    SUBROUTINE      reduce using rule 32 (paso2subroutine -> .)
    $end            reduce using rule 32 (paso2subroutine -> .)

    paso2subroutine                shift and go to state 242

state 229

    (29) subroutines -> SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .

    SUBROUTINE      reduce using rule 29 (subroutines -> SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .)
    $end            reduce using rule 29 (subroutines -> SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .)


state 230

    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END . DO

    DO              shift and go to state 243


state 231

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements . paso4for1 END DO
    (23) statements -> statements . statement
    (56) paso4for1 -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    END             reduce using rule 56 (paso4for1 -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    paso4for1                      shift and go to state 244
    statement                      shift and go to state 21

state 232

    (15) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .

    ID              reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    CALL            reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    READ            reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    WRITE           reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    IF              reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    EXIT            reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    DO              reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    INT             reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    REAL            reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    END             reduce using rule 15 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)


state 233

    (101) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 101 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 101 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 101 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 234

    (95) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 95 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 95 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 95 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 235

    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 245

state 236

    (102) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 102 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 102 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 102 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 237

    (96) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 96 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 96 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 96 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 238

    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 246

state 239

    (70) iffs -> ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (95) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          shift and go to state 247
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 107

state 240

    (69) iffs -> iffs ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (95) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (99) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (100) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (106) slogicexp -> . OPAREN logicexp CPAREN
    (107) slogicexp -> . ID paso1
    (108) slogicexp -> . NUMBER paso12
    (109) slogicexp -> . REAL paso13
    (110) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (111) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 81
    OPAREN          shift and go to state 80
    ID              shift and go to state 79
    NUMBER          shift and go to state 77
    REAL            shift and go to state 75

    slogicexp                      shift and go to state 76
    logicexp                       shift and go to state 248

state 241

    (34) statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .

    ID              reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    CALL            reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    EXIT            reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)
    END             reduce using rule 34 (statement -> ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9 .)


state 242

    (28) subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .

    SUBROUTINE      reduce using rule 28 (subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .)
    $end            reduce using rule 28 (subroutines -> subroutines SUBROUTINE ID paso1subroutine statements END SUBROUTINE paso2subroutine .)


state 243

    (44) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .

    ID              reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    CALL            reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    READ            reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    WRITE           reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    IF              reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    EXIT            reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    DO              reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSIF           reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSE            reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    END             reduce using rule 44 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)


state 244

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 . END DO

    END             shift and go to state 249


state 245

    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (103) paso1lgexp -> .

    CPAREN          reduce using rule 103 (paso1lgexp -> .)
    AND             reduce using rule 103 (paso1lgexp -> .)
    OR              reduce using rule 103 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 250

state 246

    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (103) paso1lgexp -> .

    CPAREN          reduce using rule 103 (paso1lgexp -> .)
    AND             reduce using rule 103 (paso1lgexp -> .)
    OR              reduce using rule 103 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 251

state 247

    (70) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (67) paso2bool -> .

    THEN            reduce using rule 67 (paso2bool -> .)

    paso2bool                      shift and go to state 252

state 248

    (69) iffs -> iffs ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (95) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          shift and go to state 253
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 107

state 249

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END . DO

    DO              shift and go to state 254


state 250

    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 255

state 251

    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (104) paso2lgexp -> .

    CPAREN          reduce using rule 104 (paso2lgexp -> .)
    AND             reduce using rule 104 (paso2lgexp -> .)
    OR              reduce using rule 104 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 256

state 252

    (70) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 257


state 253

    (69) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (67) paso2bool -> .

    THEN            reduce using rule 67 (paso2bool -> .)

    paso2bool                      shift and go to state 258

state 254

    (43) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .

    ID              reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    CALL            reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    READ            reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    WRITE           reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    IF              reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    EXIT            reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    DO              reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSIF           reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSE            reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    END             reduce using rule 43 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)


state 255

    (97) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 256

    (98) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 257

    (70) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 25 (statements -> .)
    ELSE            reduce using rule 25 (statements -> .)
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 259
    statement                      shift and go to state 10

state 258

    (69) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 260


state 259

    (70) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    ELSIF           reduce using rule 70 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 70 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 70 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21

state 260

    (69) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statements -> .
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 25 (statements -> .)
    ELSE            reduce using rule 25 (statements -> .)
    END             reduce using rule 25 (statements -> .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

  ! ID              [ reduce using rule 25 (statements -> .) ]
  ! CALL            [ reduce using rule 25 (statements -> .) ]
  ! READ            [ reduce using rule 25 (statements -> .) ]
  ! WRITE           [ reduce using rule 25 (statements -> .) ]
  ! IF              [ reduce using rule 25 (statements -> .) ]
  ! EXIT            [ reduce using rule 25 (statements -> .) ]
  ! DO              [ reduce using rule 25 (statements -> .) ]

    statements                     shift and go to state 261
    statement                      shift and go to state 10

state 261

    (69) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (23) statements -> statements . statement
    (33) statement -> . ID paso8 EQUAL expression paso9
    (34) statement -> . ID paso8 OPAREN expression pasogetdim1 COMMA expression pasogetdim2 CPAREN EQUAL expression paso9
    (35) statement -> . ID paso8 OPAREN expression pasogetdim CPAREN EQUAL expression paso9
    (36) statement -> . CALL ID callprocedure
    (37) statement -> . ID COLLON DO paso1do statements paso2do END DO ID
    (38) statement -> . READ ID readquad
    (39) statement -> . WRITE write writequad
    (40) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (41) statement -> . IF paso1bool ifs END IF paso4bool
    (42) statement -> . EXIT paso4do
    (43) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (44) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (45) statement -> . DO paso1do statements paso2do END DO

    ELSIF           reduce using rule 69 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 69 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 69 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 15
    CALL            shift and go to state 20
    READ            shift and go to state 8
    WRITE           shift and go to state 16
    IF              shift and go to state 12
    EXIT            shift and go to state 11
    DO              shift and go to state 7

    statement                      shift and go to state 21
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for CALL in state 4 resolved as shift
WARNING: shift/reduce conflict for READ in state 4 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for CALL in state 23 resolved as shift
WARNING: shift/reduce conflict for READ in state 23 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 23 resolved as shift
WARNING: shift/reduce conflict for IF in state 23 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 23 resolved as shift
WARNING: shift/reduce conflict for DO in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for CALL in state 82 resolved as shift
WARNING: shift/reduce conflict for READ in state 82 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for SUBROUTINE in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for CALL in state 96 resolved as shift
WARNING: shift/reduce conflict for READ in state 96 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 96 resolved as shift
WARNING: shift/reduce conflict for DO in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for CALL in state 155 resolved as shift
WARNING: shift/reduce conflict for READ in state 155 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 155 resolved as shift
WARNING: shift/reduce conflict for DO in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for CALL in state 169 resolved as shift
WARNING: shift/reduce conflict for READ in state 169 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 169 resolved as shift
WARNING: shift/reduce conflict for DO in state 169 resolved as shift
WARNING: shift/reduce conflict for ELSIF in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for CALL in state 186 resolved as shift
WARNING: shift/reduce conflict for READ in state 186 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 186 resolved as shift
WARNING: shift/reduce conflict for IF in state 186 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 186 resolved as shift
WARNING: shift/reduce conflict for DO in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for CALL in state 188 resolved as shift
WARNING: shift/reduce conflict for READ in state 188 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 188 resolved as shift
WARNING: shift/reduce conflict for IF in state 188 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 188 resolved as shift
WARNING: shift/reduce conflict for DO in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for CALL in state 219 resolved as shift
WARNING: shift/reduce conflict for READ in state 219 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 219 resolved as shift
WARNING: shift/reduce conflict for IF in state 219 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 219 resolved as shift
WARNING: shift/reduce conflict for DO in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 257 resolved as shift
WARNING: shift/reduce conflict for CALL in state 257 resolved as shift
WARNING: shift/reduce conflict for READ in state 257 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 257 resolved as shift
WARNING: shift/reduce conflict for IF in state 257 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 257 resolved as shift
WARNING: shift/reduce conflict for DO in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for CALL in state 260 resolved as shift
WARNING: shift/reduce conflict for READ in state 260 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 260 resolved as shift
WARNING: shift/reduce conflict for IF in state 260 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 260 resolved as shift
WARNING: shift/reduce conflict for DO in state 260 resolved as shift
