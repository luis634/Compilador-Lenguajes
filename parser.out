Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     empty -> <empty>
Rule 2     programa -> PROGRAM ID variables statements END PROGRAM ID subroutines
Rule 3     variables -> variables variables1
Rule 4     variables -> variables variables2
Rule 5     variables -> variables variables3
Rule 6     variables -> variables variables4
Rule 7     variables -> <empty>
Rule 8     variables1 -> tipo ID loopvars
Rule 9     loopvars -> loopvars COMMA ID
Rule 10    loopvars -> empty
Rule 11    variables2 -> tipo ID EQUAL expression
Rule 12    variables3 -> tipo ID OPAREN expression COMMA expression CPAREN
Rule 13    variables4 -> tipo ID OPAREN expression
Rule 14    ids -> ids COMMA ID
Rule 15    ids -> ID
Rule 16    statements -> statements statement
Rule 17    statements -> statement
Rule 18    statements -> <empty>
Rule 19    tipo -> INT
Rule 20    tipo -> REAL
Rule 21    subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE
Rule 22    subroutines -> SUBROUTINE ID statements END SUBROUTINE
Rule 23    subroutines -> <empty>
Rule 24    statement -> declare
Rule 25    statement -> ID OPAREN CPAREN
Rule 26    statement -> ID COLLON DO dowhile END DO ID
Rule 27    statement -> READ ID readquad
Rule 28    statement -> WRITE write writequad
Rule 29    statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
Rule 30    statement -> IF paso1bool ifs END IF paso4bool
Rule 31    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
Rule 32    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
Rule 33    statement -> DO paso1do dowhilenoid paso2do END DO
Rule 34    write -> expression correction
Rule 35    write -> STRING
Rule 36    correction -> <empty>
Rule 37    paso1bool -> <empty>
Rule 38    paso3bool -> <empty>
Rule 39    paso1do -> <empty>
Rule 40    paso2do -> <empty>
Rule 41    paso1for -> <empty>
Rule 42    paso2for -> <empty>
Rule 43    paso3for -> <empty>
Rule 44    paso4for1 -> <empty>
Rule 45    paso4for2 -> <empty>
Rule 46    writequad -> <empty>
Rule 47    readquad -> <empty>
Rule 48    declare -> ID paso8 EQUAL expression paso9
Rule 49    declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
Rule 50    declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9
Rule 51    paso8 -> <empty>
Rule 52    paso9 -> <empty>
Rule 53    ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs
Rule 54    paso2bool -> <empty>
Rule 55    paso4bool -> <empty>
Rule 56    iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 57    iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 58    iffs -> <empty>
Rule 59    dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
Rule 60    dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
Rule 61    dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements
Rule 62    dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements
Rule 63    paso4do -> <empty>
Rule 64    expression -> expression paso4 PLUS paso23 subexpression paso4
Rule 65    expression -> expression paso4 MINUS paso23 subexpression paso4
Rule 66    expression -> subexpression paso4
Rule 67    paso4 -> <empty>
Rule 68    paso23 -> <empty>
Rule 69    subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5
Rule 70    subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5
Rule 71    subexpression -> ssubexpression paso5
Rule 72    paso5 -> <empty>
Rule 73    ssubexpression -> ID paso1
Rule 74    ssubexpression -> ID OPAREN expression CPAREN
Rule 75    ssubexpression -> ID OPAREN expression COMMA expression CPAREN
Rule 76    ssubexpression -> NUMBER paso12
Rule 77    ssubexpression -> REAL paso13
Rule 78    ssubexpression -> OPAREN paso6 expression CPAREN paso7
Rule 79    paso1 -> <empty>
Rule 80    paso12 -> <empty>
Rule 81    paso13 -> <empty>
Rule 82    paso6 -> <empty>
Rule 83    paso7 -> <empty>
Rule 84    andornot -> <empty>
Rule 85    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 86    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 87    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 88    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 89    logicexp -> NOT andornot slogicexp pasonot paso2lgexp
Rule 90    logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 91    logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 92    logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 93    paso1lgexp -> <empty>
Rule 94    paso2lgexp -> <empty>
Rule 95    pasonot -> <empty>
Rule 96    slogicexp -> OPAREN logicexp CPAREN
Rule 97    slogicexp -> ID paso1
Rule 98    slogicexp -> NUMBER paso12
Rule 99    slogicexp -> REAL paso13
Rule 100   slogicexp -> ID OPAREN expression COMMA expression CPAREN
Rule 101   slogicexp -> ID OPAREN expression CPAREN
Rule 102   logicop -> GT
Rule 103   logicop -> GET
Rule 104   logicop -> NE
Rule 105   logicop -> EQUALS
Rule 106   logicop -> LET
Rule 107   logicop -> LT

Terminals, with rules where they appear

AND                  : 85 87 91
COLLON               : 26
COMMA                : 9 12 14 31 31 32 49 75 100
CPAREN               : 12 25 49 50 53 56 57 59 60 61 62 74 75 78 96 100 101
DIV                  : 70
DO                   : 26 26 31 31 32 32 33 33
ELSE                 : 29
ELSIF                : 56 57
END                  : 2 21 22 26 29 30 31 32 33
EQUAL                : 11 31 32 48 49 50
EQUALS               : 105
EXIT                 : 59 60 61 62
GET                  : 103
GT                   : 102
ID                   : 2 2 8 9 11 12 13 14 15 21 22 25 26 26 27 31 32 48 49 50 59 60 73 74 75 97 100 101
IF                   : 29 29 30 30 59 60 61 62
INT                  : 19
LET                  : 106
LT                   : 107
MINUS                : 65
MUL                  : 69
NE                   : 104
NOT                  : 85 86 87 88 89
NUMBER               : 76 98
OPAREN               : 12 13 25 49 50 53 56 57 59 60 61 62 74 75 78 96 100 101
OR                   : 86 88 92
PLUS                 : 64
PROGRAM              : 2 2
READ                 : 27
REAL                 : 20 77 99
STRING               : 35
SUBROUTINE           : 21 21 22 22
THEN                 : 53 56 57
WRITE                : 28
error                : 

Nonterminals, with rules where they appear

andornot             : 85 85 86 86 87 87 88 88 89 91 92
correction           : 34
declare              : 24
dowhile              : 26 59
dowhilenoid          : 33 61
empty                : 10
expression           : 11 12 12 13 31 31 31 32 32 34 48 49 49 49 50 50 64 65 74 75 75 78 100 100 101
ids                  : 14
iffs                 : 53 56
ifs                  : 29 30
logicexp             : 53 56 57 59 60 61 62 85 86 87 88 91 92 96
logicop              : 87 88 90 91 92
loopvars             : 8 9
paso1                : 73 97
paso12               : 76 98
paso13               : 77 99
paso1bool            : 29 30
paso1do              : 33
paso1for             : 31 32
paso1lgexp           : 87 88 90 91 92
paso23               : 64 65 69 70
paso2bool            : 53 56 57
paso2do              : 33
paso2for             : 31 32
paso2lgexp           : 85 85 86 86 87 87 88 88 89 90 91 91 92 92
paso3bool            : 29 56 57
paso3for             : 31 32
paso4                : 64 64 65 65 66
paso4bool            : 29 30
paso4do              : 59 60 61 62
paso4for1            : 31
paso4for2            : 32
paso5                : 69 69 70 70 71
paso6                : 78
paso7                : 78
paso8                : 48 49 50
paso9                : 48 49 50
pasonot              : 85 86 87 88 89
programa             : 0
readquad             : 27
slogicexp            : 85 86 87 87 88 88 89 90 90 91 91 92 92
ssubexpression       : 69 70 71
statement            : 16 17
statements           : 2 16 21 22 29 31 32 53 56 57 59 59 60 60 61 62
subexpression        : 64 65 66 69 70
subroutines          : 2 21
tipo                 : 8 11 12 13
variables            : 2 3 4 5 6
variables1           : 3
variables2           : 4
variables3           : 5
variables4           : 6
write                : 28
writequad            : 28

Parsing method: LALR

state 0

    (0) S' -> . programa
    (2) programa -> . PROGRAM ID variables statements END PROGRAM ID subroutines

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (2) programa -> PROGRAM . ID variables statements END PROGRAM ID subroutines

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (2) programa -> PROGRAM ID . variables statements END PROGRAM ID subroutines
    (3) variables -> . variables variables1
    (4) variables -> . variables variables2
    (5) variables -> . variables variables3
    (6) variables -> . variables variables4
    (7) variables -> .

    ID              reduce using rule 7 (variables -> .)
    READ            reduce using rule 7 (variables -> .)
    WRITE           reduce using rule 7 (variables -> .)
    IF              reduce using rule 7 (variables -> .)
    DO              reduce using rule 7 (variables -> .)
    INT             reduce using rule 7 (variables -> .)
    REAL            reduce using rule 7 (variables -> .)
    END             reduce using rule 7 (variables -> .)

    variables                      shift and go to state 4

state 4

    (2) programa -> PROGRAM ID variables . statements END PROGRAM ID subroutines
    (3) variables -> variables . variables1
    (4) variables -> variables . variables2
    (5) variables -> variables . variables3
    (6) variables -> variables . variables4
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (8) variables1 -> . tipo ID loopvars
    (11) variables2 -> . tipo ID EQUAL expression
    (12) variables3 -> . tipo ID OPAREN expression COMMA expression CPAREN
    (13) variables4 -> . tipo ID OPAREN expression
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (19) tipo -> . INT
    (20) tipo -> . REAL
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6
    INT             shift and go to state 15
    REAL            shift and go to state 5

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 7
    tipo                           shift and go to state 9
    statement                      shift and go to state 10
    declare                        shift and go to state 19
    variables3                     shift and go to state 16
    variables2                     shift and go to state 17
    variables1                     shift and go to state 18
    variables4                     shift and go to state 11

state 5

    (20) tipo -> REAL .

    ID              reduce using rule 20 (tipo -> REAL .)


state 6

    (31) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> DO . paso1do dowhilenoid paso2do END DO
    (39) paso1do -> .

    ID              shift and go to state 21
    IF              reduce using rule 39 (paso1do -> .)

    paso1do                        shift and go to state 20

state 7

    (2) programa -> PROGRAM ID variables statements . END PROGRAM ID subroutines
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 23
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 8

    (27) statement -> READ . ID readquad

    ID              shift and go to state 24


state 9

    (8) variables1 -> tipo . ID loopvars
    (11) variables2 -> tipo . ID EQUAL expression
    (12) variables3 -> tipo . ID OPAREN expression COMMA expression CPAREN
    (13) variables4 -> tipo . ID OPAREN expression

    ID              shift and go to state 25


state 10

    (17) statements -> statement .

    IF              reduce using rule 17 (statements -> statement .)
    ID              reduce using rule 17 (statements -> statement .)
    READ            reduce using rule 17 (statements -> statement .)
    WRITE           reduce using rule 17 (statements -> statement .)
    DO              reduce using rule 17 (statements -> statement .)
    END             reduce using rule 17 (statements -> statement .)
    ELSIF           reduce using rule 17 (statements -> statement .)
    ELSE            reduce using rule 17 (statements -> statement .)


state 11

    (6) variables -> variables variables4 .

    ID              reduce using rule 6 (variables -> variables variables4 .)
    READ            reduce using rule 6 (variables -> variables variables4 .)
    WRITE           reduce using rule 6 (variables -> variables variables4 .)
    IF              reduce using rule 6 (variables -> variables variables4 .)
    DO              reduce using rule 6 (variables -> variables variables4 .)
    INT             reduce using rule 6 (variables -> variables variables4 .)
    REAL            reduce using rule 6 (variables -> variables variables4 .)
    END             reduce using rule 6 (variables -> variables variables4 .)


state 12

    (28) statement -> WRITE . write writequad
    (34) write -> . expression correction
    (35) write -> . STRING
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    STRING          shift and go to state 30
    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    write                          shift and go to state 29
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 34

state 13

    (25) statement -> ID . OPAREN CPAREN
    (26) statement -> ID . COLLON DO dowhile END DO ID
    (48) declare -> ID . paso8 EQUAL expression paso9
    (49) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (51) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 51 (paso8 -> .)

  ! OPAREN          [ reduce using rule 51 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 14

    (29) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> IF . paso1bool ifs END IF paso4bool
    (37) paso1bool -> .

    OPAREN          reduce using rule 37 (paso1bool -> .)

    paso1bool                      shift and go to state 38

state 15

    (19) tipo -> INT .

    ID              reduce using rule 19 (tipo -> INT .)


state 16

    (5) variables -> variables variables3 .

    ID              reduce using rule 5 (variables -> variables variables3 .)
    READ            reduce using rule 5 (variables -> variables variables3 .)
    WRITE           reduce using rule 5 (variables -> variables variables3 .)
    IF              reduce using rule 5 (variables -> variables variables3 .)
    DO              reduce using rule 5 (variables -> variables variables3 .)
    INT             reduce using rule 5 (variables -> variables variables3 .)
    REAL            reduce using rule 5 (variables -> variables variables3 .)
    END             reduce using rule 5 (variables -> variables variables3 .)


state 17

    (4) variables -> variables variables2 .

    ID              reduce using rule 4 (variables -> variables variables2 .)
    READ            reduce using rule 4 (variables -> variables variables2 .)
    WRITE           reduce using rule 4 (variables -> variables variables2 .)
    IF              reduce using rule 4 (variables -> variables variables2 .)
    DO              reduce using rule 4 (variables -> variables variables2 .)
    INT             reduce using rule 4 (variables -> variables variables2 .)
    REAL            reduce using rule 4 (variables -> variables variables2 .)
    END             reduce using rule 4 (variables -> variables variables2 .)


state 18

    (3) variables -> variables variables1 .

    ID              reduce using rule 3 (variables -> variables variables1 .)
    READ            reduce using rule 3 (variables -> variables variables1 .)
    WRITE           reduce using rule 3 (variables -> variables variables1 .)
    IF              reduce using rule 3 (variables -> variables variables1 .)
    DO              reduce using rule 3 (variables -> variables variables1 .)
    INT             reduce using rule 3 (variables -> variables variables1 .)
    REAL            reduce using rule 3 (variables -> variables variables1 .)
    END             reduce using rule 3 (variables -> variables variables1 .)


state 19

    (24) statement -> declare .

    ID              reduce using rule 24 (statement -> declare .)
    READ            reduce using rule 24 (statement -> declare .)
    WRITE           reduce using rule 24 (statement -> declare .)
    IF              reduce using rule 24 (statement -> declare .)
    DO              reduce using rule 24 (statement -> declare .)
    END             reduce using rule 24 (statement -> declare .)
    ELSIF           reduce using rule 24 (statement -> declare .)
    ELSE            reduce using rule 24 (statement -> declare .)


state 20

    (33) statement -> DO paso1do . dowhilenoid paso2do END DO
    (61) dowhilenoid -> . dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements
    (62) dowhilenoid -> . IF OPAREN logicexp CPAREN EXIT paso4do statements

    IF              shift and go to state 40

    dowhilenoid                    shift and go to state 39

state 21

    (31) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (41) paso1for -> .

    EQUAL           reduce using rule 41 (paso1for -> .)

    paso1for                       shift and go to state 41

state 22

    (16) statements -> statements statement .

    IF              reduce using rule 16 (statements -> statements statement .)
    ID              reduce using rule 16 (statements -> statements statement .)
    READ            reduce using rule 16 (statements -> statements statement .)
    WRITE           reduce using rule 16 (statements -> statements statement .)
    DO              reduce using rule 16 (statements -> statements statement .)
    END             reduce using rule 16 (statements -> statements statement .)
    ELSIF           reduce using rule 16 (statements -> statements statement .)
    ELSE            reduce using rule 16 (statements -> statements statement .)


state 23

    (2) programa -> PROGRAM ID variables statements END . PROGRAM ID subroutines

    PROGRAM         shift and go to state 42


state 24

    (27) statement -> READ ID . readquad
    (47) readquad -> .

    END             reduce using rule 47 (readquad -> .)
    ID              reduce using rule 47 (readquad -> .)
    READ            reduce using rule 47 (readquad -> .)
    WRITE           reduce using rule 47 (readquad -> .)
    IF              reduce using rule 47 (readquad -> .)
    DO              reduce using rule 47 (readquad -> .)
    ELSIF           reduce using rule 47 (readquad -> .)
    ELSE            reduce using rule 47 (readquad -> .)

    readquad                       shift and go to state 43

state 25

    (8) variables1 -> tipo ID . loopvars
    (11) variables2 -> tipo ID . EQUAL expression
    (12) variables3 -> tipo ID . OPAREN expression COMMA expression CPAREN
    (13) variables4 -> tipo ID . OPAREN expression
    (9) loopvars -> . loopvars COMMA ID
    (10) loopvars -> . empty
    (1) empty -> .

    EQUAL           shift and go to state 45
    OPAREN          shift and go to state 46
    COMMA           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    READ            reduce using rule 1 (empty -> .)
    WRITE           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    REAL            reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)

    loopvars                       shift and go to state 44
    empty                          shift and go to state 47

state 26

    (77) ssubexpression -> REAL . paso13
    (81) paso13 -> .

    MUL             reduce using rule 81 (paso13 -> .)
    DIV             reduce using rule 81 (paso13 -> .)
    PLUS            reduce using rule 81 (paso13 -> .)
    MINUS           reduce using rule 81 (paso13 -> .)
    END             reduce using rule 81 (paso13 -> .)
    ID              reduce using rule 81 (paso13 -> .)
    READ            reduce using rule 81 (paso13 -> .)
    WRITE           reduce using rule 81 (paso13 -> .)
    IF              reduce using rule 81 (paso13 -> .)
    DO              reduce using rule 81 (paso13 -> .)
    ELSIF           reduce using rule 81 (paso13 -> .)
    ELSE            reduce using rule 81 (paso13 -> .)
    INT             reduce using rule 81 (paso13 -> .)
    REAL            reduce using rule 81 (paso13 -> .)
    COMMA           reduce using rule 81 (paso13 -> .)
    CPAREN          reduce using rule 81 (paso13 -> .)

    paso13                         shift and go to state 48

state 27

    (76) ssubexpression -> NUMBER . paso12
    (80) paso12 -> .

    MUL             reduce using rule 80 (paso12 -> .)
    DIV             reduce using rule 80 (paso12 -> .)
    PLUS            reduce using rule 80 (paso12 -> .)
    MINUS           reduce using rule 80 (paso12 -> .)
    END             reduce using rule 80 (paso12 -> .)
    ID              reduce using rule 80 (paso12 -> .)
    READ            reduce using rule 80 (paso12 -> .)
    WRITE           reduce using rule 80 (paso12 -> .)
    IF              reduce using rule 80 (paso12 -> .)
    DO              reduce using rule 80 (paso12 -> .)
    ELSIF           reduce using rule 80 (paso12 -> .)
    ELSE            reduce using rule 80 (paso12 -> .)
    INT             reduce using rule 80 (paso12 -> .)
    REAL            reduce using rule 80 (paso12 -> .)
    COMMA           reduce using rule 80 (paso12 -> .)
    CPAREN          reduce using rule 80 (paso12 -> .)

    paso12                         shift and go to state 49

state 28

    (73) ssubexpression -> ID . paso1
    (74) ssubexpression -> ID . OPAREN expression CPAREN
    (75) ssubexpression -> ID . OPAREN expression COMMA expression CPAREN
    (79) paso1 -> .

    OPAREN          shift and go to state 50
    MUL             reduce using rule 79 (paso1 -> .)
    DIV             reduce using rule 79 (paso1 -> .)
    PLUS            reduce using rule 79 (paso1 -> .)
    MINUS           reduce using rule 79 (paso1 -> .)
    END             reduce using rule 79 (paso1 -> .)
    ID              reduce using rule 79 (paso1 -> .)
    READ            reduce using rule 79 (paso1 -> .)
    WRITE           reduce using rule 79 (paso1 -> .)
    IF              reduce using rule 79 (paso1 -> .)
    DO              reduce using rule 79 (paso1 -> .)
    ELSIF           reduce using rule 79 (paso1 -> .)
    ELSE            reduce using rule 79 (paso1 -> .)
    INT             reduce using rule 79 (paso1 -> .)
    REAL            reduce using rule 79 (paso1 -> .)
    COMMA           reduce using rule 79 (paso1 -> .)
    CPAREN          reduce using rule 79 (paso1 -> .)

    paso1                          shift and go to state 51

state 29

    (28) statement -> WRITE write . writequad
    (46) writequad -> .

    END             reduce using rule 46 (writequad -> .)
    ID              reduce using rule 46 (writequad -> .)
    READ            reduce using rule 46 (writequad -> .)
    WRITE           reduce using rule 46 (writequad -> .)
    IF              reduce using rule 46 (writequad -> .)
    DO              reduce using rule 46 (writequad -> .)
    ELSIF           reduce using rule 46 (writequad -> .)
    ELSE            reduce using rule 46 (writequad -> .)

    writequad                      shift and go to state 52

state 30

    (35) write -> STRING .

    END             reduce using rule 35 (write -> STRING .)
    ID              reduce using rule 35 (write -> STRING .)
    READ            reduce using rule 35 (write -> STRING .)
    WRITE           reduce using rule 35 (write -> STRING .)
    IF              reduce using rule 35 (write -> STRING .)
    DO              reduce using rule 35 (write -> STRING .)
    ELSIF           reduce using rule 35 (write -> STRING .)
    ELSE            reduce using rule 35 (write -> STRING .)


state 31

    (66) expression -> subexpression . paso4
    (69) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (67) paso4 -> .
    (72) paso5 -> .

    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)
    END             reduce using rule 67 (paso4 -> .)
    ID              reduce using rule 67 (paso4 -> .)
    READ            reduce using rule 67 (paso4 -> .)
    WRITE           reduce using rule 67 (paso4 -> .)
    IF              reduce using rule 67 (paso4 -> .)
    DO              reduce using rule 67 (paso4 -> .)
    ELSIF           reduce using rule 67 (paso4 -> .)
    ELSE            reduce using rule 67 (paso4 -> .)
    INT             reduce using rule 67 (paso4 -> .)
    REAL            reduce using rule 67 (paso4 -> .)
    COMMA           reduce using rule 67 (paso4 -> .)
    CPAREN          reduce using rule 67 (paso4 -> .)
    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)

    paso4                          shift and go to state 53
    paso5                          shift and go to state 54

state 32

    (71) subexpression -> ssubexpression . paso5
    (72) paso5 -> .

    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)
    PLUS            reduce using rule 72 (paso5 -> .)
    MINUS           reduce using rule 72 (paso5 -> .)
    END             reduce using rule 72 (paso5 -> .)
    ID              reduce using rule 72 (paso5 -> .)
    READ            reduce using rule 72 (paso5 -> .)
    WRITE           reduce using rule 72 (paso5 -> .)
    IF              reduce using rule 72 (paso5 -> .)
    DO              reduce using rule 72 (paso5 -> .)
    ELSIF           reduce using rule 72 (paso5 -> .)
    ELSE            reduce using rule 72 (paso5 -> .)
    INT             reduce using rule 72 (paso5 -> .)
    REAL            reduce using rule 72 (paso5 -> .)
    COMMA           reduce using rule 72 (paso5 -> .)
    CPAREN          reduce using rule 72 (paso5 -> .)

    paso5                          shift and go to state 55

state 33

    (78) ssubexpression -> OPAREN . paso6 expression CPAREN paso7
    (82) paso6 -> .

    ID              reduce using rule 82 (paso6 -> .)
    NUMBER          reduce using rule 82 (paso6 -> .)
    REAL            reduce using rule 82 (paso6 -> .)
    OPAREN          reduce using rule 82 (paso6 -> .)

    paso6                          shift and go to state 56

state 34

    (34) write -> expression . correction
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (36) correction -> .
    (67) paso4 -> .

    END             reduce using rule 36 (correction -> .)
    ID              reduce using rule 36 (correction -> .)
    READ            reduce using rule 36 (correction -> .)
    WRITE           reduce using rule 36 (correction -> .)
    IF              reduce using rule 36 (correction -> .)
    DO              reduce using rule 36 (correction -> .)
    ELSIF           reduce using rule 36 (correction -> .)
    ELSE            reduce using rule 36 (correction -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58
    correction                     shift and go to state 57

state 35

    (26) statement -> ID COLLON . DO dowhile END DO ID

    DO              shift and go to state 59


state 36

    (48) declare -> ID paso8 . EQUAL expression paso9
    (49) declare -> ID paso8 . OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID paso8 . OPAREN expression CPAREN EQUAL expression paso9

    EQUAL           shift and go to state 60
    OPAREN          shift and go to state 61


state 37

    (25) statement -> ID OPAREN . CPAREN

    CPAREN          shift and go to state 62


state 38

    (29) statement -> IF paso1bool . ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> IF paso1bool . ifs END IF paso4bool
    (53) ifs -> . OPAREN logicexp CPAREN paso2bool THEN statements iffs

    OPAREN          shift and go to state 64

    ifs                            shift and go to state 63

state 39

    (33) statement -> DO paso1do dowhilenoid . paso2do END DO
    (61) dowhilenoid -> dowhilenoid . IF OPAREN logicexp CPAREN EXIT paso4do statements
    (40) paso2do -> .

    IF              shift and go to state 66
    END             reduce using rule 40 (paso2do -> .)

    paso2do                        shift and go to state 65

state 40

    (62) dowhilenoid -> IF . OPAREN logicexp CPAREN EXIT paso4do statements

    OPAREN          shift and go to state 67


state 41

    (31) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO

    EQUAL           shift and go to state 68


state 42

    (2) programa -> PROGRAM ID variables statements END PROGRAM . ID subroutines

    ID              shift and go to state 69


state 43

    (27) statement -> READ ID readquad .

    ID              reduce using rule 27 (statement -> READ ID readquad .)
    READ            reduce using rule 27 (statement -> READ ID readquad .)
    WRITE           reduce using rule 27 (statement -> READ ID readquad .)
    IF              reduce using rule 27 (statement -> READ ID readquad .)
    DO              reduce using rule 27 (statement -> READ ID readquad .)
    END             reduce using rule 27 (statement -> READ ID readquad .)
    ELSIF           reduce using rule 27 (statement -> READ ID readquad .)
    ELSE            reduce using rule 27 (statement -> READ ID readquad .)


state 44

    (8) variables1 -> tipo ID loopvars .
    (9) loopvars -> loopvars . COMMA ID

    ID              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    READ            reduce using rule 8 (variables1 -> tipo ID loopvars .)
    WRITE           reduce using rule 8 (variables1 -> tipo ID loopvars .)
    IF              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    DO              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    INT             reduce using rule 8 (variables1 -> tipo ID loopvars .)
    REAL            reduce using rule 8 (variables1 -> tipo ID loopvars .)
    END             reduce using rule 8 (variables1 -> tipo ID loopvars .)
    COMMA           shift and go to state 70


state 45

    (11) variables2 -> tipo ID EQUAL . expression
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 71
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 46

    (12) variables3 -> tipo ID OPAREN . expression COMMA expression CPAREN
    (13) variables4 -> tipo ID OPAREN . expression
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 72
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 47

    (10) loopvars -> empty .

    COMMA           reduce using rule 10 (loopvars -> empty .)
    ID              reduce using rule 10 (loopvars -> empty .)
    READ            reduce using rule 10 (loopvars -> empty .)
    WRITE           reduce using rule 10 (loopvars -> empty .)
    IF              reduce using rule 10 (loopvars -> empty .)
    DO              reduce using rule 10 (loopvars -> empty .)
    INT             reduce using rule 10 (loopvars -> empty .)
    REAL            reduce using rule 10 (loopvars -> empty .)
    END             reduce using rule 10 (loopvars -> empty .)


state 48

    (77) ssubexpression -> REAL paso13 .

    MUL             reduce using rule 77 (ssubexpression -> REAL paso13 .)
    DIV             reduce using rule 77 (ssubexpression -> REAL paso13 .)
    PLUS            reduce using rule 77 (ssubexpression -> REAL paso13 .)
    MINUS           reduce using rule 77 (ssubexpression -> REAL paso13 .)
    END             reduce using rule 77 (ssubexpression -> REAL paso13 .)
    ID              reduce using rule 77 (ssubexpression -> REAL paso13 .)
    READ            reduce using rule 77 (ssubexpression -> REAL paso13 .)
    WRITE           reduce using rule 77 (ssubexpression -> REAL paso13 .)
    IF              reduce using rule 77 (ssubexpression -> REAL paso13 .)
    DO              reduce using rule 77 (ssubexpression -> REAL paso13 .)
    ELSIF           reduce using rule 77 (ssubexpression -> REAL paso13 .)
    ELSE            reduce using rule 77 (ssubexpression -> REAL paso13 .)
    INT             reduce using rule 77 (ssubexpression -> REAL paso13 .)
    REAL            reduce using rule 77 (ssubexpression -> REAL paso13 .)
    COMMA           reduce using rule 77 (ssubexpression -> REAL paso13 .)
    CPAREN          reduce using rule 77 (ssubexpression -> REAL paso13 .)


state 49

    (76) ssubexpression -> NUMBER paso12 .

    MUL             reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    DIV             reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    PLUS            reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    MINUS           reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    END             reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    ID              reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    READ            reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    WRITE           reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    IF              reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    DO              reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    ELSIF           reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    ELSE            reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    INT             reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    REAL            reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    COMMA           reduce using rule 76 (ssubexpression -> NUMBER paso12 .)
    CPAREN          reduce using rule 76 (ssubexpression -> NUMBER paso12 .)


state 50

    (74) ssubexpression -> ID OPAREN . expression CPAREN
    (75) ssubexpression -> ID OPAREN . expression COMMA expression CPAREN
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 73
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 51

    (73) ssubexpression -> ID paso1 .

    MUL             reduce using rule 73 (ssubexpression -> ID paso1 .)
    DIV             reduce using rule 73 (ssubexpression -> ID paso1 .)
    PLUS            reduce using rule 73 (ssubexpression -> ID paso1 .)
    MINUS           reduce using rule 73 (ssubexpression -> ID paso1 .)
    END             reduce using rule 73 (ssubexpression -> ID paso1 .)
    ID              reduce using rule 73 (ssubexpression -> ID paso1 .)
    READ            reduce using rule 73 (ssubexpression -> ID paso1 .)
    WRITE           reduce using rule 73 (ssubexpression -> ID paso1 .)
    IF              reduce using rule 73 (ssubexpression -> ID paso1 .)
    DO              reduce using rule 73 (ssubexpression -> ID paso1 .)
    ELSIF           reduce using rule 73 (ssubexpression -> ID paso1 .)
    ELSE            reduce using rule 73 (ssubexpression -> ID paso1 .)
    INT             reduce using rule 73 (ssubexpression -> ID paso1 .)
    REAL            reduce using rule 73 (ssubexpression -> ID paso1 .)
    COMMA           reduce using rule 73 (ssubexpression -> ID paso1 .)
    CPAREN          reduce using rule 73 (ssubexpression -> ID paso1 .)


state 52

    (28) statement -> WRITE write writequad .

    ID              reduce using rule 28 (statement -> WRITE write writequad .)
    READ            reduce using rule 28 (statement -> WRITE write writequad .)
    WRITE           reduce using rule 28 (statement -> WRITE write writequad .)
    IF              reduce using rule 28 (statement -> WRITE write writequad .)
    DO              reduce using rule 28 (statement -> WRITE write writequad .)
    END             reduce using rule 28 (statement -> WRITE write writequad .)
    ELSIF           reduce using rule 28 (statement -> WRITE write writequad .)
    ELSE            reduce using rule 28 (statement -> WRITE write writequad .)


state 53

    (66) expression -> subexpression paso4 .

    COMMA           reduce using rule 66 (expression -> subexpression paso4 .)
    CPAREN          reduce using rule 66 (expression -> subexpression paso4 .)
    PLUS            reduce using rule 66 (expression -> subexpression paso4 .)
    MINUS           reduce using rule 66 (expression -> subexpression paso4 .)
    ID              reduce using rule 66 (expression -> subexpression paso4 .)
    READ            reduce using rule 66 (expression -> subexpression paso4 .)
    WRITE           reduce using rule 66 (expression -> subexpression paso4 .)
    IF              reduce using rule 66 (expression -> subexpression paso4 .)
    DO              reduce using rule 66 (expression -> subexpression paso4 .)
    INT             reduce using rule 66 (expression -> subexpression paso4 .)
    REAL            reduce using rule 66 (expression -> subexpression paso4 .)
    END             reduce using rule 66 (expression -> subexpression paso4 .)
    ELSIF           reduce using rule 66 (expression -> subexpression paso4 .)
    ELSE            reduce using rule 66 (expression -> subexpression paso4 .)


state 54

    (69) subexpression -> subexpression paso5 . MUL paso23 ssubexpression paso5
    (70) subexpression -> subexpression paso5 . DIV paso23 ssubexpression paso5

    MUL             shift and go to state 74
    DIV             shift and go to state 75


state 55

    (71) subexpression -> ssubexpression paso5 .

    MUL             reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    DIV             reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    CPAREN          reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    PLUS            reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    MINUS           reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    ID              reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    READ            reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    WRITE           reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    IF              reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    DO              reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    END             reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    ELSIF           reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    ELSE            reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    COMMA           reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    INT             reduce using rule 71 (subexpression -> ssubexpression paso5 .)
    REAL            reduce using rule 71 (subexpression -> ssubexpression paso5 .)


state 56

    (78) ssubexpression -> OPAREN paso6 . expression CPAREN paso7
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 76
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 57

    (34) write -> expression correction .

    END             reduce using rule 34 (write -> expression correction .)
    ID              reduce using rule 34 (write -> expression correction .)
    READ            reduce using rule 34 (write -> expression correction .)
    WRITE           reduce using rule 34 (write -> expression correction .)
    IF              reduce using rule 34 (write -> expression correction .)
    DO              reduce using rule 34 (write -> expression correction .)
    ELSIF           reduce using rule 34 (write -> expression correction .)
    ELSE            reduce using rule 34 (write -> expression correction .)


state 58

    (64) expression -> expression paso4 . PLUS paso23 subexpression paso4
    (65) expression -> expression paso4 . MINUS paso23 subexpression paso4

    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 59

    (26) statement -> ID COLLON DO . dowhile END DO ID
    (59) dowhile -> . dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (60) dowhile -> . statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 79
    dowhile                        shift and go to state 80
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 60

    (48) declare -> ID paso8 EQUAL . expression paso9
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 81

state 61

    (49) declare -> ID paso8 OPAREN . expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID paso8 OPAREN . expression CPAREN EQUAL expression paso9
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 82

state 62

    (25) statement -> ID OPAREN CPAREN .

    ID              reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    READ            reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    WRITE           reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    IF              reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    DO              reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    END             reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    ELSIF           reduce using rule 25 (statement -> ID OPAREN CPAREN .)
    ELSE            reduce using rule 25 (statement -> ID OPAREN CPAREN .)


state 63

    (29) statement -> IF paso1bool ifs . ELSE paso3bool statements END IF paso4bool
    (30) statement -> IF paso1bool ifs . END IF paso4bool

    ELSE            shift and go to state 83
    END             shift and go to state 84


state 64

    (53) ifs -> OPAREN . logicexp CPAREN paso2bool THEN statements iffs
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 88

state 65

    (33) statement -> DO paso1do dowhilenoid paso2do . END DO

    END             shift and go to state 92


state 66

    (61) dowhilenoid -> dowhilenoid IF . OPAREN logicexp CPAREN EXIT paso4do statements

    OPAREN          shift and go to state 93


state 67

    (62) dowhilenoid -> IF OPAREN . logicexp CPAREN EXIT paso4do statements
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 94

state 68

    (31) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 95

state 69

    (2) programa -> PROGRAM ID variables statements END PROGRAM ID . subroutines
    (21) subroutines -> . subroutines SUBROUTINE ID statements END SUBROUTINE
    (22) subroutines -> . SUBROUTINE ID statements END SUBROUTINE
    (23) subroutines -> .

  ! shift/reduce conflict for SUBROUTINE resolved as shift
    SUBROUTINE      shift and go to state 96
    $end            reduce using rule 23 (subroutines -> .)

  ! SUBROUTINE      [ reduce using rule 23 (subroutines -> .) ]

    subroutines                    shift and go to state 97

state 70

    (9) loopvars -> loopvars COMMA . ID

    ID              shift and go to state 98


state 71

    (11) variables2 -> tipo ID EQUAL expression .
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    ID              reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    READ            reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    WRITE           reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    IF              reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    DO              reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    INT             reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    REAL            reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    END             reduce using rule 11 (variables2 -> tipo ID EQUAL expression .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 72

    (12) variables3 -> tipo ID OPAREN expression . COMMA expression CPAREN
    (13) variables4 -> tipo ID OPAREN expression .
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    COMMA           shift and go to state 99
    ID              reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    READ            reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    WRITE           reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    IF              reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    DO              reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    INT             reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    REAL            reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    END             reduce using rule 13 (variables4 -> tipo ID OPAREN expression .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 73

    (74) ssubexpression -> ID OPAREN expression . CPAREN
    (75) ssubexpression -> ID OPAREN expression . COMMA expression CPAREN
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 100
    COMMA           shift and go to state 101
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 74

    (69) subexpression -> subexpression paso5 MUL . paso23 ssubexpression paso5
    (68) paso23 -> .

    ID              reduce using rule 68 (paso23 -> .)
    NUMBER          reduce using rule 68 (paso23 -> .)
    REAL            reduce using rule 68 (paso23 -> .)
    OPAREN          reduce using rule 68 (paso23 -> .)

    paso23                         shift and go to state 102

state 75

    (70) subexpression -> subexpression paso5 DIV . paso23 ssubexpression paso5
    (68) paso23 -> .

    ID              reduce using rule 68 (paso23 -> .)
    NUMBER          reduce using rule 68 (paso23 -> .)
    REAL            reduce using rule 68 (paso23 -> .)
    OPAREN          reduce using rule 68 (paso23 -> .)

    paso23                         shift and go to state 103

state 76

    (78) ssubexpression -> OPAREN paso6 expression . CPAREN paso7
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 104
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 77

    (64) expression -> expression paso4 PLUS . paso23 subexpression paso4
    (68) paso23 -> .

    ID              reduce using rule 68 (paso23 -> .)
    NUMBER          reduce using rule 68 (paso23 -> .)
    REAL            reduce using rule 68 (paso23 -> .)
    OPAREN          reduce using rule 68 (paso23 -> .)

    paso23                         shift and go to state 105

state 78

    (65) expression -> expression paso4 MINUS . paso23 subexpression paso4
    (68) paso23 -> .

    ID              reduce using rule 68 (paso23 -> .)
    NUMBER          reduce using rule 68 (paso23 -> .)
    REAL            reduce using rule 68 (paso23 -> .)
    OPAREN          reduce using rule 68 (paso23 -> .)

    paso23                         shift and go to state 106

state 79

    (60) dowhile -> statements . IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    IF              shift and go to state 107
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 80

    (26) statement -> ID COLLON DO dowhile . END DO ID
    (59) dowhile -> dowhile . statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             shift and go to state 109
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 108
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 81

    (48) declare -> ID paso8 EQUAL expression . paso9
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (52) paso9 -> .
    (67) paso4 -> .

    END             reduce using rule 52 (paso9 -> .)
    ID              reduce using rule 52 (paso9 -> .)
    READ            reduce using rule 52 (paso9 -> .)
    WRITE           reduce using rule 52 (paso9 -> .)
    IF              reduce using rule 52 (paso9 -> .)
    DO              reduce using rule 52 (paso9 -> .)
    ELSIF           reduce using rule 52 (paso9 -> .)
    ELSE            reduce using rule 52 (paso9 -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 110

state 82

    (49) declare -> ID paso8 OPAREN expression . COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID paso8 OPAREN expression . CPAREN EQUAL expression paso9
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    COMMA           shift and go to state 112
    CPAREN          shift and go to state 111
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 83

    (29) statement -> IF paso1bool ifs ELSE . paso3bool statements END IF paso4bool
    (38) paso3bool -> .

    ID              reduce using rule 38 (paso3bool -> .)
    READ            reduce using rule 38 (paso3bool -> .)
    WRITE           reduce using rule 38 (paso3bool -> .)
    IF              reduce using rule 38 (paso3bool -> .)
    DO              reduce using rule 38 (paso3bool -> .)
    END             reduce using rule 38 (paso3bool -> .)

    paso3bool                      shift and go to state 113

state 84

    (30) statement -> IF paso1bool ifs END . IF paso4bool

    IF              shift and go to state 114


state 85

    (99) slogicexp -> REAL . paso13
    (81) paso13 -> .

    GT              reduce using rule 81 (paso13 -> .)
    GET             reduce using rule 81 (paso13 -> .)
    NE              reduce using rule 81 (paso13 -> .)
    EQUALS          reduce using rule 81 (paso13 -> .)
    LET             reduce using rule 81 (paso13 -> .)
    LT              reduce using rule 81 (paso13 -> .)
    CPAREN          reduce using rule 81 (paso13 -> .)
    AND             reduce using rule 81 (paso13 -> .)
    OR              reduce using rule 81 (paso13 -> .)

    paso13                         shift and go to state 115

state 86

    (90) logicexp -> slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (102) logicop -> . GT
    (103) logicop -> . GET
    (104) logicop -> . NE
    (105) logicop -> . EQUALS
    (106) logicop -> . LET
    (107) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 122

state 87

    (98) slogicexp -> NUMBER . paso12
    (80) paso12 -> .

    GT              reduce using rule 80 (paso12 -> .)
    GET             reduce using rule 80 (paso12 -> .)
    NE              reduce using rule 80 (paso12 -> .)
    EQUALS          reduce using rule 80 (paso12 -> .)
    LET             reduce using rule 80 (paso12 -> .)
    LT              reduce using rule 80 (paso12 -> .)
    CPAREN          reduce using rule 80 (paso12 -> .)
    AND             reduce using rule 80 (paso12 -> .)
    OR              reduce using rule 80 (paso12 -> .)

    paso12                         shift and go to state 123

state 88

    (53) ifs -> OPAREN logicexp . CPAREN paso2bool THEN statements iffs
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 125
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 89

    (97) slogicexp -> ID . paso1
    (100) slogicexp -> ID . OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> ID . OPAREN expression CPAREN
    (79) paso1 -> .

    OPAREN          shift and go to state 126
    GT              reduce using rule 79 (paso1 -> .)
    GET             reduce using rule 79 (paso1 -> .)
    NE              reduce using rule 79 (paso1 -> .)
    EQUALS          reduce using rule 79 (paso1 -> .)
    LET             reduce using rule 79 (paso1 -> .)
    LT              reduce using rule 79 (paso1 -> .)
    CPAREN          reduce using rule 79 (paso1 -> .)
    AND             reduce using rule 79 (paso1 -> .)
    OR              reduce using rule 79 (paso1 -> .)

    paso1                          shift and go to state 127

state 90

    (96) slogicexp -> OPAREN . logicexp CPAREN
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 128

state 91

    (89) logicexp -> NOT . andornot slogicexp pasonot paso2lgexp
    (84) andornot -> .

    OPAREN          reduce using rule 84 (andornot -> .)
    ID              reduce using rule 84 (andornot -> .)
    NUMBER          reduce using rule 84 (andornot -> .)
    REAL            reduce using rule 84 (andornot -> .)

    andornot                       shift and go to state 129

state 92

    (33) statement -> DO paso1do dowhilenoid paso2do END . DO

    DO              shift and go to state 130


state 93

    (61) dowhilenoid -> dowhilenoid IF OPAREN . logicexp CPAREN EXIT paso4do statements
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 131

state 94

    (62) dowhilenoid -> IF OPAREN logicexp . CPAREN EXIT paso4do statements
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 132
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 95

    (31) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for statements paso4for2 END DO
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (42) paso2for -> .
    (67) paso4 -> .

    COMMA           reduce using rule 42 (paso2for -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso2for                       shift and go to state 133
    paso4                          shift and go to state 58

state 96

    (22) subroutines -> SUBROUTINE . ID statements END SUBROUTINE

    ID              shift and go to state 134


state 97

    (2) programa -> PROGRAM ID variables statements END PROGRAM ID subroutines .
    (21) subroutines -> subroutines . SUBROUTINE ID statements END SUBROUTINE

    $end            reduce using rule 2 (programa -> PROGRAM ID variables statements END PROGRAM ID subroutines .)
    SUBROUTINE      shift and go to state 135


state 98

    (9) loopvars -> loopvars COMMA ID .

    COMMA           reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    ID              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    READ            reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    WRITE           reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    IF              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    DO              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    INT             reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    REAL            reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    END             reduce using rule 9 (loopvars -> loopvars COMMA ID .)


state 99

    (12) variables3 -> tipo ID OPAREN expression COMMA . expression CPAREN
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 136
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 100

    (74) ssubexpression -> ID OPAREN expression CPAREN .

    MUL             reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    DIV             reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    PLUS            reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    MINUS           reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    END             reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    ID              reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    READ            reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    WRITE           reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    IF              reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    DO              reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    ELSIF           reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    ELSE            reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    INT             reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    REAL            reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    COMMA           reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)
    CPAREN          reduce using rule 74 (ssubexpression -> ID OPAREN expression CPAREN .)


state 101

    (75) ssubexpression -> ID OPAREN expression COMMA . expression CPAREN
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 137
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 102

    (69) subexpression -> subexpression paso5 MUL paso23 . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    ssubexpression                 shift and go to state 138

state 103

    (70) subexpression -> subexpression paso5 DIV paso23 . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    ssubexpression                 shift and go to state 139

state 104

    (78) ssubexpression -> OPAREN paso6 expression CPAREN . paso7
    (83) paso7 -> .

    MUL             reduce using rule 83 (paso7 -> .)
    DIV             reduce using rule 83 (paso7 -> .)
    PLUS            reduce using rule 83 (paso7 -> .)
    MINUS           reduce using rule 83 (paso7 -> .)
    END             reduce using rule 83 (paso7 -> .)
    ID              reduce using rule 83 (paso7 -> .)
    READ            reduce using rule 83 (paso7 -> .)
    WRITE           reduce using rule 83 (paso7 -> .)
    IF              reduce using rule 83 (paso7 -> .)
    DO              reduce using rule 83 (paso7 -> .)
    ELSIF           reduce using rule 83 (paso7 -> .)
    ELSE            reduce using rule 83 (paso7 -> .)
    INT             reduce using rule 83 (paso7 -> .)
    REAL            reduce using rule 83 (paso7 -> .)
    COMMA           reduce using rule 83 (paso7 -> .)
    CPAREN          reduce using rule 83 (paso7 -> .)

    paso7                          shift and go to state 140

state 105

    (64) expression -> expression paso4 PLUS paso23 . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 141
    ssubexpression                 shift and go to state 32

state 106

    (65) expression -> expression paso4 MINUS paso23 . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 142
    ssubexpression                 shift and go to state 32

state 107

    (60) dowhile -> statements IF . OPAREN logicexp CPAREN EXIT paso4do statements ID
    (29) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> IF . paso1bool ifs END IF paso4bool
    (37) paso1bool -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 143

  ! OPAREN          [ reduce using rule 37 (paso1bool -> .) ]

    paso1bool                      shift and go to state 38

state 108

    (59) dowhile -> dowhile statements . IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    IF              shift and go to state 144
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 109

    (26) statement -> ID COLLON DO dowhile END . DO ID

    DO              shift and go to state 145


state 110

    (48) declare -> ID paso8 EQUAL expression paso9 .

    END             reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    ID              reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    READ            reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    WRITE           reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    IF              reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    DO              reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    ELSIF           reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)
    ELSE            reduce using rule 48 (declare -> ID paso8 EQUAL expression paso9 .)


state 111

    (50) declare -> ID paso8 OPAREN expression CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 146


state 112

    (49) declare -> ID paso8 OPAREN expression COMMA . expression CPAREN EQUAL expression paso9
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 147

state 113

    (29) statement -> IF paso1bool ifs ELSE paso3bool . statements END IF paso4bool
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 148
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 114

    (30) statement -> IF paso1bool ifs END IF . paso4bool
    (55) paso4bool -> .

    END             reduce using rule 55 (paso4bool -> .)
    ID              reduce using rule 55 (paso4bool -> .)
    READ            reduce using rule 55 (paso4bool -> .)
    WRITE           reduce using rule 55 (paso4bool -> .)
    IF              reduce using rule 55 (paso4bool -> .)
    DO              reduce using rule 55 (paso4bool -> .)
    ELSIF           reduce using rule 55 (paso4bool -> .)
    ELSE            reduce using rule 55 (paso4bool -> .)

    paso4bool                      shift and go to state 149

state 115

    (99) slogicexp -> REAL paso13 .

    CPAREN          reduce using rule 99 (slogicexp -> REAL paso13 .)
    AND             reduce using rule 99 (slogicexp -> REAL paso13 .)
    OR              reduce using rule 99 (slogicexp -> REAL paso13 .)
    GT              reduce using rule 99 (slogicexp -> REAL paso13 .)
    GET             reduce using rule 99 (slogicexp -> REAL paso13 .)
    NE              reduce using rule 99 (slogicexp -> REAL paso13 .)
    EQUALS          reduce using rule 99 (slogicexp -> REAL paso13 .)
    LET             reduce using rule 99 (slogicexp -> REAL paso13 .)
    LT              reduce using rule 99 (slogicexp -> REAL paso13 .)


state 116

    (103) logicop -> GET .

    OPAREN          reduce using rule 103 (logicop -> GET .)
    ID              reduce using rule 103 (logicop -> GET .)
    NUMBER          reduce using rule 103 (logicop -> GET .)
    REAL            reduce using rule 103 (logicop -> GET .)


state 117

    (104) logicop -> NE .

    OPAREN          reduce using rule 104 (logicop -> NE .)
    ID              reduce using rule 104 (logicop -> NE .)
    NUMBER          reduce using rule 104 (logicop -> NE .)
    REAL            reduce using rule 104 (logicop -> NE .)


state 118

    (105) logicop -> EQUALS .

    OPAREN          reduce using rule 105 (logicop -> EQUALS .)
    ID              reduce using rule 105 (logicop -> EQUALS .)
    NUMBER          reduce using rule 105 (logicop -> EQUALS .)
    REAL            reduce using rule 105 (logicop -> EQUALS .)


state 119

    (107) logicop -> LT .

    OPAREN          reduce using rule 107 (logicop -> LT .)
    ID              reduce using rule 107 (logicop -> LT .)
    NUMBER          reduce using rule 107 (logicop -> LT .)
    REAL            reduce using rule 107 (logicop -> LT .)


state 120

    (102) logicop -> GT .

    OPAREN          reduce using rule 102 (logicop -> GT .)
    ID              reduce using rule 102 (logicop -> GT .)
    NUMBER          reduce using rule 102 (logicop -> GT .)
    REAL            reduce using rule 102 (logicop -> GT .)


state 121

    (106) logicop -> LET .

    OPAREN          reduce using rule 106 (logicop -> LET .)
    ID              reduce using rule 106 (logicop -> LET .)
    NUMBER          reduce using rule 106 (logicop -> LET .)
    REAL            reduce using rule 106 (logicop -> LET .)


state 122

    (90) logicexp -> slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 150

state 123

    (98) slogicexp -> NUMBER paso12 .

    CPAREN          reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    AND             reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    OR              reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    GT              reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    GET             reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    NE              reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    EQUALS          reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    LET             reduce using rule 98 (slogicexp -> NUMBER paso12 .)
    LT              reduce using rule 98 (slogicexp -> NUMBER paso12 .)


state 124

    (85) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp paso2lgexp . AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp paso2lgexp . OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp

    AND             shift and go to state 151
    OR              shift and go to state 152


state 125

    (53) ifs -> OPAREN logicexp CPAREN . paso2bool THEN statements iffs
    (54) paso2bool -> .

    THEN            reduce using rule 54 (paso2bool -> .)

    paso2bool                      shift and go to state 153

state 126

    (100) slogicexp -> ID OPAREN . expression COMMA expression CPAREN
    (101) slogicexp -> ID OPAREN . expression CPAREN
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 154
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 127

    (97) slogicexp -> ID paso1 .

    CPAREN          reduce using rule 97 (slogicexp -> ID paso1 .)
    AND             reduce using rule 97 (slogicexp -> ID paso1 .)
    OR              reduce using rule 97 (slogicexp -> ID paso1 .)
    GT              reduce using rule 97 (slogicexp -> ID paso1 .)
    GET             reduce using rule 97 (slogicexp -> ID paso1 .)
    NE              reduce using rule 97 (slogicexp -> ID paso1 .)
    EQUALS          reduce using rule 97 (slogicexp -> ID paso1 .)
    LET             reduce using rule 97 (slogicexp -> ID paso1 .)
    LT              reduce using rule 97 (slogicexp -> ID paso1 .)


state 128

    (96) slogicexp -> OPAREN logicexp . CPAREN
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 155
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 129

    (89) logicexp -> NOT andornot . slogicexp pasonot paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 156

state 130

    (33) statement -> DO paso1do dowhilenoid paso2do END DO .

    ID              reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    READ            reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    WRITE           reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    IF              reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    DO              reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    END             reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    ELSIF           reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    ELSE            reduce using rule 33 (statement -> DO paso1do dowhilenoid paso2do END DO .)


state 131

    (61) dowhilenoid -> dowhilenoid IF OPAREN logicexp . CPAREN EXIT paso4do statements
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 157
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 132

    (62) dowhilenoid -> IF OPAREN logicexp CPAREN . EXIT paso4do statements

    EXIT            shift and go to state 158


state 133

    (31) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for statements paso4for2 END DO

    COMMA           shift and go to state 159


state 134

    (22) subroutines -> SUBROUTINE ID . statements END SUBROUTINE
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 160
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 135

    (21) subroutines -> subroutines SUBROUTINE . ID statements END SUBROUTINE

    ID              shift and go to state 161


state 136

    (12) variables3 -> tipo ID OPAREN expression COMMA expression . CPAREN
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 162
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 137

    (75) ssubexpression -> ID OPAREN expression COMMA expression . CPAREN
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 163
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 138

    (69) subexpression -> subexpression paso5 MUL paso23 ssubexpression . paso5
    (72) paso5 -> .

    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)
    PLUS            reduce using rule 72 (paso5 -> .)
    MINUS           reduce using rule 72 (paso5 -> .)
    END             reduce using rule 72 (paso5 -> .)
    ID              reduce using rule 72 (paso5 -> .)
    READ            reduce using rule 72 (paso5 -> .)
    WRITE           reduce using rule 72 (paso5 -> .)
    IF              reduce using rule 72 (paso5 -> .)
    DO              reduce using rule 72 (paso5 -> .)
    ELSIF           reduce using rule 72 (paso5 -> .)
    ELSE            reduce using rule 72 (paso5 -> .)
    INT             reduce using rule 72 (paso5 -> .)
    REAL            reduce using rule 72 (paso5 -> .)
    COMMA           reduce using rule 72 (paso5 -> .)
    CPAREN          reduce using rule 72 (paso5 -> .)

    paso5                          shift and go to state 164

state 139

    (70) subexpression -> subexpression paso5 DIV paso23 ssubexpression . paso5
    (72) paso5 -> .

    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)
    PLUS            reduce using rule 72 (paso5 -> .)
    MINUS           reduce using rule 72 (paso5 -> .)
    END             reduce using rule 72 (paso5 -> .)
    ID              reduce using rule 72 (paso5 -> .)
    READ            reduce using rule 72 (paso5 -> .)
    WRITE           reduce using rule 72 (paso5 -> .)
    IF              reduce using rule 72 (paso5 -> .)
    DO              reduce using rule 72 (paso5 -> .)
    ELSIF           reduce using rule 72 (paso5 -> .)
    ELSE            reduce using rule 72 (paso5 -> .)
    INT             reduce using rule 72 (paso5 -> .)
    REAL            reduce using rule 72 (paso5 -> .)
    COMMA           reduce using rule 72 (paso5 -> .)
    CPAREN          reduce using rule 72 (paso5 -> .)

    paso5                          shift and go to state 165

state 140

    (78) ssubexpression -> OPAREN paso6 expression CPAREN paso7 .

    MUL             reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DIV             reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    PLUS            reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    MINUS           reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    END             reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ID              reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    READ            reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    WRITE           reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    IF              reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DO              reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSIF           reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSE            reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    INT             reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    REAL            reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    COMMA           reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    CPAREN          reduce using rule 78 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)


state 141

    (64) expression -> expression paso4 PLUS paso23 subexpression . paso4
    (69) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (67) paso4 -> .
    (72) paso5 -> .

    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)
    END             reduce using rule 67 (paso4 -> .)
    ID              reduce using rule 67 (paso4 -> .)
    READ            reduce using rule 67 (paso4 -> .)
    WRITE           reduce using rule 67 (paso4 -> .)
    IF              reduce using rule 67 (paso4 -> .)
    DO              reduce using rule 67 (paso4 -> .)
    ELSIF           reduce using rule 67 (paso4 -> .)
    ELSE            reduce using rule 67 (paso4 -> .)
    INT             reduce using rule 67 (paso4 -> .)
    REAL            reduce using rule 67 (paso4 -> .)
    COMMA           reduce using rule 67 (paso4 -> .)
    CPAREN          reduce using rule 67 (paso4 -> .)
    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)

    paso4                          shift and go to state 166
    paso5                          shift and go to state 54

state 142

    (65) expression -> expression paso4 MINUS paso23 subexpression . paso4
    (69) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (67) paso4 -> .
    (72) paso5 -> .

    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)
    END             reduce using rule 67 (paso4 -> .)
    ID              reduce using rule 67 (paso4 -> .)
    READ            reduce using rule 67 (paso4 -> .)
    WRITE           reduce using rule 67 (paso4 -> .)
    IF              reduce using rule 67 (paso4 -> .)
    DO              reduce using rule 67 (paso4 -> .)
    ELSIF           reduce using rule 67 (paso4 -> .)
    ELSE            reduce using rule 67 (paso4 -> .)
    INT             reduce using rule 67 (paso4 -> .)
    REAL            reduce using rule 67 (paso4 -> .)
    COMMA           reduce using rule 67 (paso4 -> .)
    CPAREN          reduce using rule 67 (paso4 -> .)
    MUL             reduce using rule 72 (paso5 -> .)
    DIV             reduce using rule 72 (paso5 -> .)

    paso4                          shift and go to state 167
    paso5                          shift and go to state 54

state 143

    (60) dowhile -> statements IF OPAREN . logicexp CPAREN EXIT paso4do statements ID
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 168

state 144

    (59) dowhile -> dowhile statements IF . OPAREN logicexp CPAREN EXIT paso4do statements ID
    (29) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> IF . paso1bool ifs END IF paso4bool
    (37) paso1bool -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 169

  ! OPAREN          [ reduce using rule 37 (paso1bool -> .) ]

    paso1bool                      shift and go to state 38

state 145

    (26) statement -> ID COLLON DO dowhile END DO . ID

    ID              shift and go to state 170


state 146

    (50) declare -> ID paso8 OPAREN expression CPAREN EQUAL . expression paso9
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 171

state 147

    (49) declare -> ID paso8 OPAREN expression COMMA expression . CPAREN EQUAL expression paso9
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 172
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 148

    (29) statement -> IF paso1bool ifs ELSE paso3bool statements . END IF paso4bool
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 173
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 149

    (30) statement -> IF paso1bool ifs END IF paso4bool .

    ID              reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    READ            reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    WRITE           reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    IF              reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    DO              reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    END             reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSIF           reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSE            reduce using rule 30 (statement -> IF paso1bool ifs END IF paso4bool .)


state 150

    (90) logicexp -> slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (93) paso1lgexp -> .

    CPAREN          reduce using rule 93 (paso1lgexp -> .)
    AND             reduce using rule 93 (paso1lgexp -> .)
    OR              reduce using rule 93 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 174

state 151

    (85) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp paso2lgexp AND . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (84) andornot -> .

    NOT             reduce using rule 84 (andornot -> .)
    OPAREN          reduce using rule 84 (andornot -> .)
    ID              reduce using rule 84 (andornot -> .)
    NUMBER          reduce using rule 84 (andornot -> .)
    REAL            reduce using rule 84 (andornot -> .)

    andornot                       shift and go to state 175

state 152

    (86) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp paso2lgexp OR . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (84) andornot -> .

    NOT             reduce using rule 84 (andornot -> .)
    OPAREN          reduce using rule 84 (andornot -> .)
    ID              reduce using rule 84 (andornot -> .)
    NUMBER          reduce using rule 84 (andornot -> .)
    REAL            reduce using rule 84 (andornot -> .)

    andornot                       shift and go to state 176

state 153

    (53) ifs -> OPAREN logicexp CPAREN paso2bool . THEN statements iffs

    THEN            shift and go to state 177


state 154

    (100) slogicexp -> ID OPAREN expression . COMMA expression CPAREN
    (101) slogicexp -> ID OPAREN expression . CPAREN
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    COMMA           shift and go to state 179
    CPAREN          shift and go to state 178
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 155

    (96) slogicexp -> OPAREN logicexp CPAREN .

    CPAREN          reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    AND             reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    OR              reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    GT              reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    GET             reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    NE              reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    EQUALS          reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    LET             reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)
    LT              reduce using rule 96 (slogicexp -> OPAREN logicexp CPAREN .)


state 156

    (89) logicexp -> NOT andornot slogicexp . pasonot paso2lgexp
    (95) pasonot -> .

    CPAREN          reduce using rule 95 (pasonot -> .)
    AND             reduce using rule 95 (pasonot -> .)
    OR              reduce using rule 95 (pasonot -> .)

    pasonot                        shift and go to state 180

state 157

    (61) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN . EXIT paso4do statements

    EXIT            shift and go to state 181


state 158

    (62) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT . paso4do statements
    (63) paso4do -> .

    ID              reduce using rule 63 (paso4do -> .)
    READ            reduce using rule 63 (paso4do -> .)
    WRITE           reduce using rule 63 (paso4do -> .)
    IF              reduce using rule 63 (paso4do -> .)
    DO              reduce using rule 63 (paso4do -> .)
    END             reduce using rule 63 (paso4do -> .)

    paso4do                        shift and go to state 182

state 159

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for statements paso4for2 END DO
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 183

state 160

    (22) subroutines -> SUBROUTINE ID statements . END SUBROUTINE
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 184
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 161

    (21) subroutines -> subroutines SUBROUTINE ID . statements END SUBROUTINE
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 185
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 162

    (12) variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .

    ID              reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    READ            reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    WRITE           reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    IF              reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    DO              reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    INT             reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    REAL            reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)
    END             reduce using rule 12 (variables3 -> tipo ID OPAREN expression COMMA expression CPAREN .)


state 163

    (75) ssubexpression -> ID OPAREN expression COMMA expression CPAREN .

    MUL             reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    DIV             reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    PLUS            reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    MINUS           reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    END             reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    ID              reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    READ            reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    WRITE           reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    IF              reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    DO              reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    ELSIF           reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    ELSE            reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    INT             reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    REAL            reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    COMMA           reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)
    CPAREN          reduce using rule 75 (ssubexpression -> ID OPAREN expression COMMA expression CPAREN .)


state 164

    (69) subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .

    MUL             reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DIV             reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ID              reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    READ            reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    IF              reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DO              reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    END             reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    INT             reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    REAL            reduce using rule 69 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)


state 165

    (70) subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .

    MUL             reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DIV             reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ID              reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    READ            reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    IF              reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DO              reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    END             reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    INT             reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    REAL            reduce using rule 70 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)


state 166

    (64) expression -> expression paso4 PLUS paso23 subexpression paso4 .

    COMMA           reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    CPAREN          reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ID              reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    READ            reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    IF              reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    DO              reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    INT             reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    REAL            reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    END             reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 64 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)


state 167

    (65) expression -> expression paso4 MINUS paso23 subexpression paso4 .

    COMMA           reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    CPAREN          reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ID              reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    READ            reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    IF              reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    DO              reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    INT             reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    REAL            reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    END             reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 65 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)


state 168

    (60) dowhile -> statements IF OPAREN logicexp . CPAREN EXIT paso4do statements ID
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 186
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 169

    (59) dowhile -> dowhile statements IF OPAREN . logicexp CPAREN EXIT paso4do statements ID
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 187

state 170

    (26) statement -> ID COLLON DO dowhile END DO ID .

    ID              reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    READ            reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    WRITE           reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    IF              reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    DO              reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    END             reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    ELSIF           reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)
    ELSE            reduce using rule 26 (statement -> ID COLLON DO dowhile END DO ID .)


state 171

    (50) declare -> ID paso8 OPAREN expression CPAREN EQUAL expression . paso9
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (52) paso9 -> .
    (67) paso4 -> .

    END             reduce using rule 52 (paso9 -> .)
    ID              reduce using rule 52 (paso9 -> .)
    READ            reduce using rule 52 (paso9 -> .)
    WRITE           reduce using rule 52 (paso9 -> .)
    IF              reduce using rule 52 (paso9 -> .)
    DO              reduce using rule 52 (paso9 -> .)
    ELSIF           reduce using rule 52 (paso9 -> .)
    ELSE            reduce using rule 52 (paso9 -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 188

state 172

    (49) declare -> ID paso8 OPAREN expression COMMA expression CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 189


state 173

    (29) statement -> IF paso1bool ifs ELSE paso3bool statements END . IF paso4bool

    IF              shift and go to state 190


state 174

    (90) logicexp -> slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 191

state 175

    (85) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp paso2lgexp AND andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 193
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 192

state 176

    (86) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp paso2lgexp OR andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 195
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 194

state 177

    (53) ifs -> OPAREN logicexp CPAREN paso2bool THEN . statements iffs
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 18 (statements -> .)
    ELSE            reduce using rule 18 (statements -> .)
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 196
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 178

    (101) slogicexp -> ID OPAREN expression CPAREN .

    CPAREN          reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    AND             reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    OR              reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    GT              reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    GET             reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    NE              reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    EQUALS          reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    LET             reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)
    LT              reduce using rule 101 (slogicexp -> ID OPAREN expression CPAREN .)


state 179

    (100) slogicexp -> ID OPAREN expression COMMA . expression CPAREN
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 197
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 180

    (89) logicexp -> NOT andornot slogicexp pasonot . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 198

state 181

    (61) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT . paso4do statements
    (63) paso4do -> .

    ID              reduce using rule 63 (paso4do -> .)
    READ            reduce using rule 63 (paso4do -> .)
    WRITE           reduce using rule 63 (paso4do -> .)
    IF              reduce using rule 63 (paso4do -> .)
    DO              reduce using rule 63 (paso4do -> .)
    END             reduce using rule 63 (paso4do -> .)

    paso4do                        shift and go to state 199

state 182

    (62) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do . statements
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 200
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 183

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for statements paso4for2 END DO
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (43) paso3for -> .
    (67) paso4 -> .

    COMMA           reduce using rule 43 (paso3for -> .)
    ID              reduce using rule 43 (paso3for -> .)
    READ            reduce using rule 43 (paso3for -> .)
    WRITE           reduce using rule 43 (paso3for -> .)
    IF              reduce using rule 43 (paso3for -> .)
    DO              reduce using rule 43 (paso3for -> .)
    END             reduce using rule 43 (paso3for -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58
    paso3for                       shift and go to state 201

state 184

    (22) subroutines -> SUBROUTINE ID statements END . SUBROUTINE

    SUBROUTINE      shift and go to state 202


state 185

    (21) subroutines -> subroutines SUBROUTINE ID statements . END SUBROUTINE
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 203
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 186

    (60) dowhile -> statements IF OPAREN logicexp CPAREN . EXIT paso4do statements ID

    EXIT            shift and go to state 204


state 187

    (59) dowhile -> dowhile statements IF OPAREN logicexp . CPAREN EXIT paso4do statements ID
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 205
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 188

    (50) declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .

    END             reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    ID              reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 50 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)


state 189

    (49) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL . expression paso9
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 206

state 190

    (29) statement -> IF paso1bool ifs ELSE paso3bool statements END IF . paso4bool
    (55) paso4bool -> .

    END             reduce using rule 55 (paso4bool -> .)
    ID              reduce using rule 55 (paso4bool -> .)
    READ            reduce using rule 55 (paso4bool -> .)
    WRITE           reduce using rule 55 (paso4bool -> .)
    IF              reduce using rule 55 (paso4bool -> .)
    DO              reduce using rule 55 (paso4bool -> .)
    ELSIF           reduce using rule 55 (paso4bool -> .)
    ELSE            reduce using rule 55 (paso4bool -> .)

    paso4bool                      shift and go to state 207

state 191

    (90) logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 90 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 90 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 90 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 192

    (91) logicexp -> logicexp paso2lgexp AND andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (102) logicop -> . GT
    (103) logicop -> . GET
    (104) logicop -> . NE
    (105) logicop -> . EQUALS
    (106) logicop -> . LET
    (107) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 208

state 193

    (85) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (84) andornot -> .

    OPAREN          reduce using rule 84 (andornot -> .)
    ID              reduce using rule 84 (andornot -> .)
    NUMBER          reduce using rule 84 (andornot -> .)
    REAL            reduce using rule 84 (andornot -> .)

    andornot                       shift and go to state 209

state 194

    (92) logicexp -> logicexp paso2lgexp OR andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (102) logicop -> . GT
    (103) logicop -> . GET
    (104) logicop -> . NE
    (105) logicop -> . EQUALS
    (106) logicop -> . LET
    (107) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 210

state 195

    (86) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (84) andornot -> .

    OPAREN          reduce using rule 84 (andornot -> .)
    ID              reduce using rule 84 (andornot -> .)
    NUMBER          reduce using rule 84 (andornot -> .)
    REAL            reduce using rule 84 (andornot -> .)

    andornot                       shift and go to state 211

state 196

    (53) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements . iffs
    (16) statements -> statements . statement
    (56) iffs -> . iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (57) iffs -> . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (58) iffs -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ELSIF resolved as shift
    ELSIF           shift and go to state 212
    ELSE            reduce using rule 58 (iffs -> .)
    END             reduce using rule 58 (iffs -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ELSIF           [ reduce using rule 58 (iffs -> .) ]

    statement                      shift and go to state 22
    iffs                           shift and go to state 213
    declare                        shift and go to state 19

state 197

    (100) slogicexp -> ID OPAREN expression COMMA expression . CPAREN
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (67) paso4 -> .

    CPAREN          shift and go to state 214
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58

state 198

    (89) logicexp -> NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 89 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 89 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 89 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)


state 199

    (61) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do . statements
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 215
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 200

    (62) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for IF resolved as shift
    END             reduce using rule 62 (dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! IF              [ reduce using rule 62 (dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .) ]

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 201

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . COMMA expression statements paso4for1 END DO
    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . statements paso4for2 END DO
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    COMMA           shift and go to state 217
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 216
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 202

    (22) subroutines -> SUBROUTINE ID statements END SUBROUTINE .

    SUBROUTINE      reduce using rule 22 (subroutines -> SUBROUTINE ID statements END SUBROUTINE .)
    $end            reduce using rule 22 (subroutines -> SUBROUTINE ID statements END SUBROUTINE .)


state 203

    (21) subroutines -> subroutines SUBROUTINE ID statements END . SUBROUTINE

    SUBROUTINE      shift and go to state 218


state 204

    (60) dowhile -> statements IF OPAREN logicexp CPAREN EXIT . paso4do statements ID
    (63) paso4do -> .

    ID              reduce using rule 63 (paso4do -> .)
    READ            reduce using rule 63 (paso4do -> .)
    WRITE           reduce using rule 63 (paso4do -> .)
    IF              reduce using rule 63 (paso4do -> .)
    DO              reduce using rule 63 (paso4do -> .)

    paso4do                        shift and go to state 219

state 205

    (59) dowhile -> dowhile statements IF OPAREN logicexp CPAREN . EXIT paso4do statements ID

    EXIT            shift and go to state 220


state 206

    (49) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression . paso9
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (52) paso9 -> .
    (67) paso4 -> .

    END             reduce using rule 52 (paso9 -> .)
    ID              reduce using rule 52 (paso9 -> .)
    READ            reduce using rule 52 (paso9 -> .)
    WRITE           reduce using rule 52 (paso9 -> .)
    IF              reduce using rule 52 (paso9 -> .)
    DO              reduce using rule 52 (paso9 -> .)
    ELSIF           reduce using rule 52 (paso9 -> .)
    ELSE            reduce using rule 52 (paso9 -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 221

state 207

    (29) statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .

    ID              reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    READ            reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    WRITE           reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    IF              reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    DO              reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    END             reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSIF           reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSE            reduce using rule 29 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)


state 208

    (91) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 222

state 209

    (85) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 223

state 210

    (92) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 224

state 211

    (86) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 225

state 212

    (57) iffs -> ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (38) paso3bool -> .

    OPAREN          reduce using rule 38 (paso3bool -> .)

    paso3bool                      shift and go to state 226

state 213

    (53) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .
    (56) iffs -> iffs . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements

    ELSE            reduce using rule 53 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    END             reduce using rule 53 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    ELSIF           shift and go to state 227


state 214

    (100) slogicexp -> ID OPAREN expression COMMA expression CPAREN .

    CPAREN          reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    AND             reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    OR              reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    GT              reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    GET             reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    NE              reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    EQUALS          reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LET             reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LT              reduce using rule 100 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)


state 215

    (61) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for IF resolved as shift
    END             reduce using rule 61 (dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! IF              [ reduce using rule 61 (dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .) ]

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 216

    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements . paso4for2 END DO
    (16) statements -> statements . statement
    (45) paso4for2 -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             reduce using rule 45 (paso4for2 -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    paso4for2                      shift and go to state 228
    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 217

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA . expression statements paso4for1 END DO
    (64) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (65) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (66) expression -> . subexpression paso4
    (69) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (70) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (71) subexpression -> . ssubexpression paso5
    (73) ssubexpression -> . ID paso1
    (74) ssubexpression -> . ID OPAREN expression CPAREN
    (75) ssubexpression -> . ID OPAREN expression COMMA expression CPAREN
    (76) ssubexpression -> . NUMBER paso12
    (77) ssubexpression -> . REAL paso13
    (78) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 229

state 218

    (21) subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .

    SUBROUTINE      reduce using rule 21 (subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .)
    $end            reduce using rule 21 (subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .)


state 219

    (60) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do . statements ID
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 230
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 220

    (59) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT . paso4do statements ID
    (63) paso4do -> .

    ID              reduce using rule 63 (paso4do -> .)
    READ            reduce using rule 63 (paso4do -> .)
    WRITE           reduce using rule 63 (paso4do -> .)
    IF              reduce using rule 63 (paso4do -> .)
    DO              reduce using rule 63 (paso4do -> .)

    paso4do                        shift and go to state 231

state 221

    (49) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .

    END             reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    ID              reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 49 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)


state 222

    (91) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (93) paso1lgexp -> .

    CPAREN          reduce using rule 93 (paso1lgexp -> .)
    AND             reduce using rule 93 (paso1lgexp -> .)
    OR              reduce using rule 93 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 232

state 223

    (85) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) pasonot -> .

    GT              reduce using rule 95 (pasonot -> .)
    GET             reduce using rule 95 (pasonot -> .)
    NE              reduce using rule 95 (pasonot -> .)
    EQUALS          reduce using rule 95 (pasonot -> .)
    LET             reduce using rule 95 (pasonot -> .)
    LT              reduce using rule 95 (pasonot -> .)
    CPAREN          reduce using rule 95 (pasonot -> .)
    AND             reduce using rule 95 (pasonot -> .)
    OR              reduce using rule 95 (pasonot -> .)

    pasonot                        shift and go to state 233

state 224

    (92) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (93) paso1lgexp -> .

    CPAREN          reduce using rule 93 (paso1lgexp -> .)
    AND             reduce using rule 93 (paso1lgexp -> .)
    OR              reduce using rule 93 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 234

state 225

    (86) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) pasonot -> .

    GT              reduce using rule 95 (pasonot -> .)
    GET             reduce using rule 95 (pasonot -> .)
    NE              reduce using rule 95 (pasonot -> .)
    EQUALS          reduce using rule 95 (pasonot -> .)
    LET             reduce using rule 95 (pasonot -> .)
    LT              reduce using rule 95 (pasonot -> .)
    CPAREN          reduce using rule 95 (pasonot -> .)
    AND             reduce using rule 95 (pasonot -> .)
    OR              reduce using rule 95 (pasonot -> .)

    pasonot                        shift and go to state 235

state 226

    (57) iffs -> ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 236


state 227

    (56) iffs -> iffs ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (38) paso3bool -> .

    OPAREN          reduce using rule 38 (paso3bool -> .)

    paso3bool                      shift and go to state 237

state 228

    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 . END DO

    END             shift and go to state 238


state 229

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression . statements paso4for1 END DO
    (64) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (65) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (67) paso4 -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 18 (statements -> .)
    PLUS            reduce using rule 67 (paso4 -> .)
    MINUS           reduce using rule 67 (paso4 -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 239
    statement                      shift and go to state 10
    paso4                          shift and go to state 58
    declare                        shift and go to state 19

state 230

    (60) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements . ID
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ID              shift and go to state 240
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 231

    (59) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do . statements ID
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 241
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 232

    (91) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 242

state 233

    (85) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . paso2lgexp
    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .
    (102) logicop -> . GT
    (103) logicop -> . GET
    (104) logicop -> . NE
    (105) logicop -> . EQUALS
    (106) logicop -> . LET
    (107) logicop -> . LT

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)
    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    paso2lgexp                     shift and go to state 243
    logicop                        shift and go to state 244

state 234

    (92) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 245

state 235

    (86) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . paso2lgexp
    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .
    (102) logicop -> . GT
    (103) logicop -> . GET
    (104) logicop -> . NE
    (105) logicop -> . EQUALS
    (106) logicop -> . LET
    (107) logicop -> . LT

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)
    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    paso2lgexp                     shift and go to state 246
    logicop                        shift and go to state 247

state 236

    (57) iffs -> ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 248

state 237

    (56) iffs -> iffs ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 249


state 238

    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END . DO

    DO              shift and go to state 250


state 239

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements . paso4for1 END DO
    (16) statements -> statements . statement
    (44) paso4for1 -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             reduce using rule 44 (paso4for1 -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    paso4for1                      shift and go to state 251
    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 240

    (60) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .
    (25) statement -> ID . OPAREN CPAREN
    (26) statement -> ID . COLLON DO dowhile END DO ID
    (48) declare -> ID . paso8 EQUAL expression paso9
    (49) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (51) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    END             reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    ID              reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    READ            reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    WRITE           reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    IF              reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    DO              reduce using rule 60 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 51 (paso8 -> .)

  ! OPAREN          [ reduce using rule 51 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 241

    (59) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements . ID
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ID              shift and go to state 252
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 242

    (91) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 243

    (85) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 85 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 85 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 85 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 244

    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 253

state 245

    (92) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 246

    (86) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 86 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 86 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 86 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 247

    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 254

state 248

    (57) iffs -> ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 255
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 249

    (56) iffs -> iffs ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (85) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (89) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (90) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (96) slogicexp -> . OPAREN logicexp CPAREN
    (97) slogicexp -> . ID paso1
    (98) slogicexp -> . NUMBER paso12
    (99) slogicexp -> . REAL paso13
    (100) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (101) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 91
    OPAREN          shift and go to state 90
    ID              shift and go to state 89
    NUMBER          shift and go to state 87
    REAL            shift and go to state 85

    slogicexp                      shift and go to state 86
    logicexp                       shift and go to state 256

state 250

    (32) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .

    ID              reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    READ            reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    WRITE           reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    IF              reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    DO              reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    END             reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSIF           reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSE            reduce using rule 32 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)


state 251

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 . END DO

    END             shift and go to state 257


state 252

    (59) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .
    (25) statement -> ID . OPAREN CPAREN
    (26) statement -> ID . COLLON DO dowhile END DO ID
    (48) declare -> ID . paso8 EQUAL expression paso9
    (49) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (51) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    END             reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    ID              reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    READ            reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    WRITE           reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    IF              reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    DO              reduce using rule 59 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 51 (paso8 -> .)

  ! OPAREN          [ reduce using rule 51 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 253

    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (93) paso1lgexp -> .

    CPAREN          reduce using rule 93 (paso1lgexp -> .)
    AND             reduce using rule 93 (paso1lgexp -> .)
    OR              reduce using rule 93 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 258

state 254

    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (93) paso1lgexp -> .

    CPAREN          reduce using rule 93 (paso1lgexp -> .)
    AND             reduce using rule 93 (paso1lgexp -> .)
    OR              reduce using rule 93 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 259

state 255

    (57) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (54) paso2bool -> .

    THEN            reduce using rule 54 (paso2bool -> .)

    paso2bool                      shift and go to state 260

state 256

    (56) iffs -> iffs ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (85) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (86) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (87) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (88) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (91) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          shift and go to state 261
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 257

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END . DO

    DO              shift and go to state 262


state 258

    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 263

state 259

    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (94) paso2lgexp -> .

    CPAREN          reduce using rule 94 (paso2lgexp -> .)
    AND             reduce using rule 94 (paso2lgexp -> .)
    OR              reduce using rule 94 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 264

state 260

    (57) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 265


state 261

    (56) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (54) paso2bool -> .

    THEN            reduce using rule 54 (paso2bool -> .)

    paso2bool                      shift and go to state 266

state 262

    (31) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .

    ID              reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    READ            reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    WRITE           reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    IF              reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    DO              reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    END             reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSIF           reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSE            reduce using rule 31 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)


state 263

    (87) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 87 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 87 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 87 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 264

    (88) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 88 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 88 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 88 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 265

    (57) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 18 (statements -> .)
    ELSE            reduce using rule 18 (statements -> .)
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 267
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 266

    (56) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 268


state 267

    (57) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ELSIF           reduce using rule 57 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 57 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 57 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19

state 268

    (56) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (16) statements -> . statements statement
    (17) statements -> . statement
    (18) statements -> .
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 18 (statements -> .)
    ELSE            reduce using rule 18 (statements -> .)
    END             reduce using rule 18 (statements -> .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

  ! ID              [ reduce using rule 18 (statements -> .) ]
  ! READ            [ reduce using rule 18 (statements -> .) ]
  ! WRITE           [ reduce using rule 18 (statements -> .) ]
  ! IF              [ reduce using rule 18 (statements -> .) ]
  ! DO              [ reduce using rule 18 (statements -> .) ]

    statements                     shift and go to state 269
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 269

    (56) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (16) statements -> statements . statement
    (24) statement -> . declare
    (25) statement -> . ID OPAREN CPAREN
    (26) statement -> . ID COLLON DO dowhile END DO ID
    (27) statement -> . READ ID readquad
    (28) statement -> . WRITE write writequad
    (29) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (30) statement -> . IF paso1bool ifs END IF paso4bool
    (31) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (32) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (33) statement -> . DO paso1do dowhilenoid paso2do END DO
    (48) declare -> . ID paso8 EQUAL expression paso9
    (49) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (50) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ELSIF           reduce using rule 56 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 56 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 56 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 13
    READ            shift and go to state 8
    WRITE           shift and go to state 12
    IF              shift and go to state 14
    DO              shift and go to state 6

    statement                      shift and go to state 22
    declare                        shift and go to state 19
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for READ in state 4 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for READ in state 59 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for SUBROUTINE in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for READ in state 80 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for READ in state 113 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for DO in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for READ in state 134 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for DO in state 134 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for READ in state 161 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for DO in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for READ in state 177 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for DO in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for READ in state 182 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 182 resolved as shift
WARNING: shift/reduce conflict for IF in state 182 resolved as shift
WARNING: shift/reduce conflict for DO in state 182 resolved as shift
WARNING: shift/reduce conflict for ELSIF in state 196 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for READ in state 199 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for DO in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 201 resolved as shift
WARNING: shift/reduce conflict for READ in state 201 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 201 resolved as shift
WARNING: shift/reduce conflict for IF in state 201 resolved as shift
WARNING: shift/reduce conflict for DO in state 201 resolved as shift
WARNING: shift/reduce conflict for IF in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for READ in state 219 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 219 resolved as shift
WARNING: shift/reduce conflict for IF in state 219 resolved as shift
WARNING: shift/reduce conflict for DO in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for READ in state 229 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for DO in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 231 resolved as shift
WARNING: shift/reduce conflict for READ in state 231 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 231 resolved as shift
WARNING: shift/reduce conflict for IF in state 231 resolved as shift
WARNING: shift/reduce conflict for DO in state 231 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 240 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 252 resolved as shift
WARNING: shift/reduce conflict for ID in state 265 resolved as shift
WARNING: shift/reduce conflict for READ in state 265 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 265 resolved as shift
WARNING: shift/reduce conflict for IF in state 265 resolved as shift
WARNING: shift/reduce conflict for DO in state 265 resolved as shift
WARNING: shift/reduce conflict for ID in state 268 resolved as shift
WARNING: shift/reduce conflict for READ in state 268 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 268 resolved as shift
WARNING: shift/reduce conflict for IF in state 268 resolved as shift
WARNING: shift/reduce conflict for DO in state 268 resolved as shift
