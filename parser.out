Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     empty -> <empty>
Rule 2     programa -> PROGRAM ID variables statements END PROGRAM ID subroutines
Rule 3     variables -> variables variables1
Rule 4     variables -> variables variables2
Rule 5     variables -> variables variables3
Rule 6     variables -> variables variables4
Rule 7     variables -> <empty>
Rule 8     variables1 -> tipo ID loopvars
Rule 9     loopvars -> loopvars COMMA ID
Rule 10    loopvars -> empty
Rule 11    variables2 -> tipo ID EQUAL NUMBER
Rule 12    variables2 -> tipo ID EQUAL REAL
Rule 13    variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
Rule 14    variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
Rule 15    paso1dim -> <empty>
Rule 16    paso2dim -> <empty>
Rule 17    paso3dim -> <empty>
Rule 18    paso4dim -> <empty>
Rule 19    paso51dim -> <empty>
Rule 20    paso52dim -> <empty>
Rule 21    statements -> statements statement
Rule 22    statements -> statement
Rule 23    statements -> <empty>
Rule 24    tipo -> INT
Rule 25    tipo -> REAL
Rule 26    subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE
Rule 27    subroutines -> SUBROUTINE ID statements END SUBROUTINE
Rule 28    subroutines -> <empty>
Rule 29    statement -> declare
Rule 30    statement -> ID OPAREN CPAREN
Rule 31    statement -> ID COLLON DO dowhile END DO ID
Rule 32    statement -> READ ID readquad
Rule 33    statement -> WRITE write writequad
Rule 34    statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
Rule 35    statement -> IF paso1bool ifs END IF paso4bool
Rule 36    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
Rule 37    statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
Rule 38    statement -> DO paso1do dowhilenoid paso2do END DO
Rule 39    write -> expression correction
Rule 40    write -> STRING
Rule 41    correction -> <empty>
Rule 42    paso1bool -> <empty>
Rule 43    paso3bool -> <empty>
Rule 44    paso1do -> <empty>
Rule 45    paso2do -> <empty>
Rule 46    paso1for -> <empty>
Rule 47    paso2for -> <empty>
Rule 48    paso3for -> <empty>
Rule 49    paso4for1 -> <empty>
Rule 50    paso4for2 -> <empty>
Rule 51    writequad -> <empty>
Rule 52    readquad -> <empty>
Rule 53    declare -> ID paso8 EQUAL expression paso9
Rule 54    declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
Rule 55    declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9
Rule 56    paso8 -> <empty>
Rule 57    paso9 -> <empty>
Rule 58    ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs
Rule 59    paso2bool -> <empty>
Rule 60    paso4bool -> <empty>
Rule 61    iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 62    iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
Rule 63    iffs -> <empty>
Rule 64    dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
Rule 65    dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
Rule 66    dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements
Rule 67    dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements
Rule 68    paso4do -> <empty>
Rule 69    expression -> expression paso4 PLUS paso23 subexpression paso4
Rule 70    expression -> expression paso4 MINUS paso23 subexpression paso4
Rule 71    expression -> subexpression paso4
Rule 72    paso4 -> <empty>
Rule 73    paso23 -> <empty>
Rule 74    subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5
Rule 75    subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5
Rule 76    subexpression -> ssubexpression paso5
Rule 77    paso5 -> <empty>
Rule 78    ssubexpression -> ID paso1
Rule 79    ssubexpression -> ID paso14 OPAREN expression CPAREN
Rule 80    ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN
Rule 81    ssubexpression -> NUMBER paso12
Rule 82    ssubexpression -> REAL paso13
Rule 83    ssubexpression -> OPAREN paso6 expression CPAREN paso7
Rule 84    paso1 -> <empty>
Rule 85    paso12 -> <empty>
Rule 86    paso13 -> <empty>
Rule 87    paso14 -> <empty>
Rule 88    paso6 -> <empty>
Rule 89    paso7 -> <empty>
Rule 90    andornot -> <empty>
Rule 91    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 92    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
Rule 93    logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 94    logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
Rule 95    logicexp -> NOT andornot slogicexp pasonot paso2lgexp
Rule 96    logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 97    logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 98    logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
Rule 99    paso1lgexp -> <empty>
Rule 100   paso2lgexp -> <empty>
Rule 101   pasonot -> <empty>
Rule 102   slogicexp -> OPAREN logicexp CPAREN
Rule 103   slogicexp -> ID paso1
Rule 104   slogicexp -> NUMBER paso12
Rule 105   slogicexp -> REAL paso13
Rule 106   slogicexp -> ID OPAREN expression COMMA expression CPAREN
Rule 107   slogicexp -> ID OPAREN expression CPAREN
Rule 108   logicop -> GT
Rule 109   logicop -> GET
Rule 110   logicop -> NE
Rule 111   logicop -> EQUALS
Rule 112   logicop -> LET
Rule 113   logicop -> LT

Terminals, with rules where they appear

AND                  : 91 93 97
COLLON               : 31
COMMA                : 9 13 36 36 37 54 80 106
CPAREN               : 13 14 30 54 55 58 61 62 64 65 66 67 79 80 83 102 106 107
DIV                  : 75
DO                   : 31 31 36 36 37 37 38 38
ELSE                 : 34
ELSIF                : 61 62
END                  : 2 26 27 31 34 35 36 37 38
EQUAL                : 11 12 36 37 53 54 55
EQUALS               : 111
EXIT                 : 64 65 66 67
GET                  : 109
GT                   : 108
ID                   : 2 2 8 9 11 12 13 14 26 27 30 31 31 32 36 37 53 54 55 64 65 78 79 80 103 106 107
IF                   : 34 34 35 35 64 65 66 67
INT                  : 24
LET                  : 112
LT                   : 113
MINUS                : 70
MUL                  : 74
NE                   : 110
NOT                  : 91 92 93 94 95
NUMBER               : 11 13 13 14 81 104
OPAREN               : 13 14 30 54 55 58 61 62 64 65 66 67 79 80 83 102 106 107
OR                   : 92 94 98
PLUS                 : 69
PROGRAM              : 2 2
READ                 : 32
REAL                 : 12 25 82 105
STRING               : 40
SUBROUTINE           : 26 26 27 27
THEN                 : 58 61 62
WRITE                : 33
error                : 

Nonterminals, with rules where they appear

andornot             : 91 91 92 92 93 93 94 94 95 97 98
correction           : 39
declare              : 29
dowhile              : 31 64
dowhilenoid          : 38 66
empty                : 10
expression           : 36 36 36 37 37 39 53 54 54 54 55 55 69 70 79 80 80 83 106 106 107
iffs                 : 58 61
ifs                  : 34 35
logicexp             : 58 61 62 64 65 66 67 91 92 93 94 97 98 102
logicop              : 93 94 96 97 98
loopvars             : 8 9
paso1                : 78 103
paso12               : 81 104
paso13               : 82 105
paso14               : 79 80
paso1bool            : 34 35
paso1dim             : 13 14
paso1do              : 38
paso1for             : 36 37
paso1lgexp           : 93 94 96 97 98
paso23               : 69 70 74 75
paso2bool            : 58 61 62
paso2dim             : 13 14
paso2do              : 38
paso2for             : 36 37
paso2lgexp           : 91 91 92 92 93 93 94 94 95 96 97 97 98 98
paso3bool            : 34 61 62
paso3dim             : 13 14
paso3for             : 36 37
paso4                : 69 69 70 70 71
paso4bool            : 34 35
paso4dim             : 13
paso4do              : 64 65 66 67
paso4for1            : 36
paso4for2            : 37
paso5                : 74 74 75 75 76
paso51dim            : 14
paso52dim            : 13
paso6                : 83
paso7                : 83
paso8                : 53 54 55
paso9                : 53 54 55
pasonot              : 91 92 93 94 95
programa             : 0
readquad             : 32
slogicexp            : 91 92 93 93 94 94 95 96 96 97 97 98 98
ssubexpression       : 74 75 76
statement            : 21 22
statements           : 2 21 26 27 34 36 37 58 61 62 64 64 65 65 66 67
subexpression        : 69 70 71 74 75
subroutines          : 2 26
tipo                 : 8 11 12 13 14
variables            : 2 3 4 5 6
variables1           : 3
variables2           : 4
variables3           : 5
variables4           : 6
write                : 33
writequad            : 33

Parsing method: LALR

state 0

    (0) S' -> . programa
    (2) programa -> . PROGRAM ID variables statements END PROGRAM ID subroutines

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (2) programa -> PROGRAM . ID variables statements END PROGRAM ID subroutines

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (2) programa -> PROGRAM ID . variables statements END PROGRAM ID subroutines
    (3) variables -> . variables variables1
    (4) variables -> . variables variables2
    (5) variables -> . variables variables3
    (6) variables -> . variables variables4
    (7) variables -> .

    ID              reduce using rule 7 (variables -> .)
    READ            reduce using rule 7 (variables -> .)
    WRITE           reduce using rule 7 (variables -> .)
    IF              reduce using rule 7 (variables -> .)
    DO              reduce using rule 7 (variables -> .)
    INT             reduce using rule 7 (variables -> .)
    REAL            reduce using rule 7 (variables -> .)
    END             reduce using rule 7 (variables -> .)

    variables                      shift and go to state 4

state 4

    (2) programa -> PROGRAM ID variables . statements END PROGRAM ID subroutines
    (3) variables -> variables . variables1
    (4) variables -> variables . variables2
    (5) variables -> variables . variables3
    (6) variables -> variables . variables4
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (8) variables1 -> . tipo ID loopvars
    (11) variables2 -> . tipo ID EQUAL NUMBER
    (12) variables2 -> . tipo ID EQUAL REAL
    (13) variables3 -> . tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> . tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (24) tipo -> . INT
    (25) tipo -> . REAL
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7
    INT             shift and go to state 11
    REAL            shift and go to state 5

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 6
    tipo                           shift and go to state 9
    statement                      shift and go to state 10
    declare                        shift and go to state 19
    variables3                     shift and go to state 16
    variables2                     shift and go to state 17
    variables1                     shift and go to state 18
    variables4                     shift and go to state 12

state 5

    (25) tipo -> REAL .

    ID              reduce using rule 25 (tipo -> REAL .)


state 6

    (2) programa -> PROGRAM ID variables statements . END PROGRAM ID subroutines
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 21
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 7

    (36) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO . ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> DO . paso1do dowhilenoid paso2do END DO
    (44) paso1do -> .

    ID              shift and go to state 23
    IF              reduce using rule 44 (paso1do -> .)

    paso1do                        shift and go to state 22

state 8

    (32) statement -> READ . ID readquad

    ID              shift and go to state 24


state 9

    (8) variables1 -> tipo . ID loopvars
    (11) variables2 -> tipo . ID EQUAL NUMBER
    (12) variables2 -> tipo . ID EQUAL REAL
    (13) variables3 -> tipo . ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo . ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim

    ID              shift and go to state 25


state 10

    (22) statements -> statement .

    END             reduce using rule 22 (statements -> statement .)
    ID              reduce using rule 22 (statements -> statement .)
    READ            reduce using rule 22 (statements -> statement .)
    WRITE           reduce using rule 22 (statements -> statement .)
    IF              reduce using rule 22 (statements -> statement .)
    DO              reduce using rule 22 (statements -> statement .)
    ELSIF           reduce using rule 22 (statements -> statement .)
    ELSE            reduce using rule 22 (statements -> statement .)


state 11

    (24) tipo -> INT .

    ID              reduce using rule 24 (tipo -> INT .)


state 12

    (6) variables -> variables variables4 .

    ID              reduce using rule 6 (variables -> variables variables4 .)
    READ            reduce using rule 6 (variables -> variables variables4 .)
    WRITE           reduce using rule 6 (variables -> variables variables4 .)
    IF              reduce using rule 6 (variables -> variables variables4 .)
    DO              reduce using rule 6 (variables -> variables variables4 .)
    INT             reduce using rule 6 (variables -> variables variables4 .)
    REAL            reduce using rule 6 (variables -> variables variables4 .)
    END             reduce using rule 6 (variables -> variables variables4 .)


state 13

    (33) statement -> WRITE . write writequad
    (39) write -> . expression correction
    (40) write -> . STRING
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    STRING          shift and go to state 30
    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    write                          shift and go to state 29
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 34

state 14

    (30) statement -> ID . OPAREN CPAREN
    (31) statement -> ID . COLLON DO dowhile END DO ID
    (53) declare -> ID . paso8 EQUAL expression paso9
    (54) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (56) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 56 (paso8 -> .)

  ! OPAREN          [ reduce using rule 56 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 15

    (34) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> IF . paso1bool ifs END IF paso4bool
    (42) paso1bool -> .

    OPAREN          reduce using rule 42 (paso1bool -> .)

    paso1bool                      shift and go to state 38

state 16

    (5) variables -> variables variables3 .

    ID              reduce using rule 5 (variables -> variables variables3 .)
    READ            reduce using rule 5 (variables -> variables variables3 .)
    WRITE           reduce using rule 5 (variables -> variables variables3 .)
    IF              reduce using rule 5 (variables -> variables variables3 .)
    DO              reduce using rule 5 (variables -> variables variables3 .)
    INT             reduce using rule 5 (variables -> variables variables3 .)
    REAL            reduce using rule 5 (variables -> variables variables3 .)
    END             reduce using rule 5 (variables -> variables variables3 .)


state 17

    (4) variables -> variables variables2 .

    ID              reduce using rule 4 (variables -> variables variables2 .)
    READ            reduce using rule 4 (variables -> variables variables2 .)
    WRITE           reduce using rule 4 (variables -> variables variables2 .)
    IF              reduce using rule 4 (variables -> variables variables2 .)
    DO              reduce using rule 4 (variables -> variables variables2 .)
    INT             reduce using rule 4 (variables -> variables variables2 .)
    REAL            reduce using rule 4 (variables -> variables variables2 .)
    END             reduce using rule 4 (variables -> variables variables2 .)


state 18

    (3) variables -> variables variables1 .

    ID              reduce using rule 3 (variables -> variables variables1 .)
    READ            reduce using rule 3 (variables -> variables variables1 .)
    WRITE           reduce using rule 3 (variables -> variables variables1 .)
    IF              reduce using rule 3 (variables -> variables variables1 .)
    DO              reduce using rule 3 (variables -> variables variables1 .)
    INT             reduce using rule 3 (variables -> variables variables1 .)
    REAL            reduce using rule 3 (variables -> variables variables1 .)
    END             reduce using rule 3 (variables -> variables variables1 .)


state 19

    (29) statement -> declare .

    END             reduce using rule 29 (statement -> declare .)
    ID              reduce using rule 29 (statement -> declare .)
    READ            reduce using rule 29 (statement -> declare .)
    WRITE           reduce using rule 29 (statement -> declare .)
    IF              reduce using rule 29 (statement -> declare .)
    DO              reduce using rule 29 (statement -> declare .)
    ELSIF           reduce using rule 29 (statement -> declare .)
    ELSE            reduce using rule 29 (statement -> declare .)


state 20

    (21) statements -> statements statement .

    END             reduce using rule 21 (statements -> statements statement .)
    ID              reduce using rule 21 (statements -> statements statement .)
    READ            reduce using rule 21 (statements -> statements statement .)
    WRITE           reduce using rule 21 (statements -> statements statement .)
    IF              reduce using rule 21 (statements -> statements statement .)
    DO              reduce using rule 21 (statements -> statements statement .)
    ELSIF           reduce using rule 21 (statements -> statements statement .)
    ELSE            reduce using rule 21 (statements -> statements statement .)


state 21

    (2) programa -> PROGRAM ID variables statements END . PROGRAM ID subroutines

    PROGRAM         shift and go to state 39


state 22

    (38) statement -> DO paso1do . dowhilenoid paso2do END DO
    (66) dowhilenoid -> . dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements
    (67) dowhilenoid -> . IF OPAREN logicexp CPAREN EXIT paso4do statements

    IF              shift and go to state 41

    dowhilenoid                    shift and go to state 40

state 23

    (36) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID . paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (46) paso1for -> .

    EQUAL           reduce using rule 46 (paso1for -> .)

    paso1for                       shift and go to state 42

state 24

    (32) statement -> READ ID . readquad
    (52) readquad -> .

    END             reduce using rule 52 (readquad -> .)
    ID              reduce using rule 52 (readquad -> .)
    READ            reduce using rule 52 (readquad -> .)
    WRITE           reduce using rule 52 (readquad -> .)
    IF              reduce using rule 52 (readquad -> .)
    DO              reduce using rule 52 (readquad -> .)
    ELSIF           reduce using rule 52 (readquad -> .)
    ELSE            reduce using rule 52 (readquad -> .)

    readquad                       shift and go to state 43

state 25

    (8) variables1 -> tipo ID . loopvars
    (11) variables2 -> tipo ID . EQUAL NUMBER
    (12) variables2 -> tipo ID . EQUAL REAL
    (13) variables3 -> tipo ID . paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID . paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim
    (9) loopvars -> . loopvars COMMA ID
    (10) loopvars -> . empty
    (15) paso1dim -> .
    (1) empty -> .

    EQUAL           shift and go to state 46
    OPAREN          reduce using rule 15 (paso1dim -> .)
    COMMA           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    READ            reduce using rule 1 (empty -> .)
    WRITE           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    REAL            reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)

    loopvars                       shift and go to state 44
    paso1dim                       shift and go to state 45
    empty                          shift and go to state 47

state 26

    (82) ssubexpression -> REAL . paso13
    (86) paso13 -> .

    MUL             reduce using rule 86 (paso13 -> .)
    DIV             reduce using rule 86 (paso13 -> .)
    PLUS            reduce using rule 86 (paso13 -> .)
    MINUS           reduce using rule 86 (paso13 -> .)
    END             reduce using rule 86 (paso13 -> .)
    ID              reduce using rule 86 (paso13 -> .)
    READ            reduce using rule 86 (paso13 -> .)
    WRITE           reduce using rule 86 (paso13 -> .)
    IF              reduce using rule 86 (paso13 -> .)
    DO              reduce using rule 86 (paso13 -> .)
    ELSIF           reduce using rule 86 (paso13 -> .)
    ELSE            reduce using rule 86 (paso13 -> .)
    CPAREN          reduce using rule 86 (paso13 -> .)
    COMMA           reduce using rule 86 (paso13 -> .)

    paso13                         shift and go to state 48

state 27

    (81) ssubexpression -> NUMBER . paso12
    (85) paso12 -> .

    MUL             reduce using rule 85 (paso12 -> .)
    DIV             reduce using rule 85 (paso12 -> .)
    PLUS            reduce using rule 85 (paso12 -> .)
    MINUS           reduce using rule 85 (paso12 -> .)
    END             reduce using rule 85 (paso12 -> .)
    ID              reduce using rule 85 (paso12 -> .)
    READ            reduce using rule 85 (paso12 -> .)
    WRITE           reduce using rule 85 (paso12 -> .)
    IF              reduce using rule 85 (paso12 -> .)
    DO              reduce using rule 85 (paso12 -> .)
    ELSIF           reduce using rule 85 (paso12 -> .)
    ELSE            reduce using rule 85 (paso12 -> .)
    CPAREN          reduce using rule 85 (paso12 -> .)
    COMMA           reduce using rule 85 (paso12 -> .)

    paso12                         shift and go to state 49

state 28

    (78) ssubexpression -> ID . paso1
    (79) ssubexpression -> ID . paso14 OPAREN expression CPAREN
    (80) ssubexpression -> ID . paso14 OPAREN expression COMMA expression CPAREN
    (84) paso1 -> .
    (87) paso14 -> .

    MUL             reduce using rule 84 (paso1 -> .)
    DIV             reduce using rule 84 (paso1 -> .)
    PLUS            reduce using rule 84 (paso1 -> .)
    MINUS           reduce using rule 84 (paso1 -> .)
    END             reduce using rule 84 (paso1 -> .)
    ID              reduce using rule 84 (paso1 -> .)
    READ            reduce using rule 84 (paso1 -> .)
    WRITE           reduce using rule 84 (paso1 -> .)
    IF              reduce using rule 84 (paso1 -> .)
    DO              reduce using rule 84 (paso1 -> .)
    ELSIF           reduce using rule 84 (paso1 -> .)
    ELSE            reduce using rule 84 (paso1 -> .)
    CPAREN          reduce using rule 84 (paso1 -> .)
    COMMA           reduce using rule 84 (paso1 -> .)
    OPAREN          reduce using rule 87 (paso14 -> .)

    paso1                          shift and go to state 51
    paso14                         shift and go to state 50

state 29

    (33) statement -> WRITE write . writequad
    (51) writequad -> .

    END             reduce using rule 51 (writequad -> .)
    ID              reduce using rule 51 (writequad -> .)
    READ            reduce using rule 51 (writequad -> .)
    WRITE           reduce using rule 51 (writequad -> .)
    IF              reduce using rule 51 (writequad -> .)
    DO              reduce using rule 51 (writequad -> .)
    ELSIF           reduce using rule 51 (writequad -> .)
    ELSE            reduce using rule 51 (writequad -> .)

    writequad                      shift and go to state 52

state 30

    (40) write -> STRING .

    END             reduce using rule 40 (write -> STRING .)
    ID              reduce using rule 40 (write -> STRING .)
    READ            reduce using rule 40 (write -> STRING .)
    WRITE           reduce using rule 40 (write -> STRING .)
    IF              reduce using rule 40 (write -> STRING .)
    DO              reduce using rule 40 (write -> STRING .)
    ELSIF           reduce using rule 40 (write -> STRING .)
    ELSE            reduce using rule 40 (write -> STRING .)


state 31

    (71) expression -> subexpression . paso4
    (74) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (72) paso4 -> .
    (77) paso5 -> .

    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)
    END             reduce using rule 72 (paso4 -> .)
    ID              reduce using rule 72 (paso4 -> .)
    READ            reduce using rule 72 (paso4 -> .)
    WRITE           reduce using rule 72 (paso4 -> .)
    IF              reduce using rule 72 (paso4 -> .)
    DO              reduce using rule 72 (paso4 -> .)
    ELSIF           reduce using rule 72 (paso4 -> .)
    ELSE            reduce using rule 72 (paso4 -> .)
    CPAREN          reduce using rule 72 (paso4 -> .)
    COMMA           reduce using rule 72 (paso4 -> .)
    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)

    paso4                          shift and go to state 53
    paso5                          shift and go to state 54

state 32

    (76) subexpression -> ssubexpression . paso5
    (77) paso5 -> .

    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)
    PLUS            reduce using rule 77 (paso5 -> .)
    MINUS           reduce using rule 77 (paso5 -> .)
    END             reduce using rule 77 (paso5 -> .)
    ID              reduce using rule 77 (paso5 -> .)
    READ            reduce using rule 77 (paso5 -> .)
    WRITE           reduce using rule 77 (paso5 -> .)
    IF              reduce using rule 77 (paso5 -> .)
    DO              reduce using rule 77 (paso5 -> .)
    ELSIF           reduce using rule 77 (paso5 -> .)
    ELSE            reduce using rule 77 (paso5 -> .)
    CPAREN          reduce using rule 77 (paso5 -> .)
    COMMA           reduce using rule 77 (paso5 -> .)

    paso5                          shift and go to state 55

state 33

    (83) ssubexpression -> OPAREN . paso6 expression CPAREN paso7
    (88) paso6 -> .

    ID              reduce using rule 88 (paso6 -> .)
    NUMBER          reduce using rule 88 (paso6 -> .)
    REAL            reduce using rule 88 (paso6 -> .)
    OPAREN          reduce using rule 88 (paso6 -> .)

    paso6                          shift and go to state 56

state 34

    (39) write -> expression . correction
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (41) correction -> .
    (72) paso4 -> .

    END             reduce using rule 41 (correction -> .)
    ID              reduce using rule 41 (correction -> .)
    READ            reduce using rule 41 (correction -> .)
    WRITE           reduce using rule 41 (correction -> .)
    IF              reduce using rule 41 (correction -> .)
    DO              reduce using rule 41 (correction -> .)
    ELSIF           reduce using rule 41 (correction -> .)
    ELSE            reduce using rule 41 (correction -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58
    correction                     shift and go to state 57

state 35

    (31) statement -> ID COLLON . DO dowhile END DO ID

    DO              shift and go to state 59


state 36

    (53) declare -> ID paso8 . EQUAL expression paso9
    (54) declare -> ID paso8 . OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID paso8 . OPAREN expression CPAREN EQUAL expression paso9

    EQUAL           shift and go to state 60
    OPAREN          shift and go to state 61


state 37

    (30) statement -> ID OPAREN . CPAREN

    CPAREN          shift and go to state 62


state 38

    (34) statement -> IF paso1bool . ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> IF paso1bool . ifs END IF paso4bool
    (58) ifs -> . OPAREN logicexp CPAREN paso2bool THEN statements iffs

    OPAREN          shift and go to state 64

    ifs                            shift and go to state 63

state 39

    (2) programa -> PROGRAM ID variables statements END PROGRAM . ID subroutines

    ID              shift and go to state 65


state 40

    (38) statement -> DO paso1do dowhilenoid . paso2do END DO
    (66) dowhilenoid -> dowhilenoid . IF OPAREN logicexp CPAREN EXIT paso4do statements
    (45) paso2do -> .

    IF              shift and go to state 67
    END             reduce using rule 45 (paso2do -> .)

    paso2do                        shift and go to state 66

state 41

    (67) dowhilenoid -> IF . OPAREN logicexp CPAREN EXIT paso4do statements

    OPAREN          shift and go to state 68


state 42

    (36) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for . EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO

    EQUAL           shift and go to state 69


state 43

    (32) statement -> READ ID readquad .

    END             reduce using rule 32 (statement -> READ ID readquad .)
    ID              reduce using rule 32 (statement -> READ ID readquad .)
    READ            reduce using rule 32 (statement -> READ ID readquad .)
    WRITE           reduce using rule 32 (statement -> READ ID readquad .)
    IF              reduce using rule 32 (statement -> READ ID readquad .)
    DO              reduce using rule 32 (statement -> READ ID readquad .)
    ELSIF           reduce using rule 32 (statement -> READ ID readquad .)
    ELSE            reduce using rule 32 (statement -> READ ID readquad .)


state 44

    (8) variables1 -> tipo ID loopvars .
    (9) loopvars -> loopvars . COMMA ID

    ID              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    READ            reduce using rule 8 (variables1 -> tipo ID loopvars .)
    WRITE           reduce using rule 8 (variables1 -> tipo ID loopvars .)
    IF              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    DO              reduce using rule 8 (variables1 -> tipo ID loopvars .)
    INT             reduce using rule 8 (variables1 -> tipo ID loopvars .)
    REAL            reduce using rule 8 (variables1 -> tipo ID loopvars .)
    END             reduce using rule 8 (variables1 -> tipo ID loopvars .)
    COMMA           shift and go to state 70


state 45

    (13) variables3 -> tipo ID paso1dim . OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID paso1dim . OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim

    OPAREN          shift and go to state 71


state 46

    (11) variables2 -> tipo ID EQUAL . NUMBER
    (12) variables2 -> tipo ID EQUAL . REAL

    NUMBER          shift and go to state 72
    REAL            shift and go to state 73


state 47

    (10) loopvars -> empty .

    COMMA           reduce using rule 10 (loopvars -> empty .)
    ID              reduce using rule 10 (loopvars -> empty .)
    READ            reduce using rule 10 (loopvars -> empty .)
    WRITE           reduce using rule 10 (loopvars -> empty .)
    IF              reduce using rule 10 (loopvars -> empty .)
    DO              reduce using rule 10 (loopvars -> empty .)
    INT             reduce using rule 10 (loopvars -> empty .)
    REAL            reduce using rule 10 (loopvars -> empty .)
    END             reduce using rule 10 (loopvars -> empty .)


state 48

    (82) ssubexpression -> REAL paso13 .

    MUL             reduce using rule 82 (ssubexpression -> REAL paso13 .)
    DIV             reduce using rule 82 (ssubexpression -> REAL paso13 .)
    CPAREN          reduce using rule 82 (ssubexpression -> REAL paso13 .)
    PLUS            reduce using rule 82 (ssubexpression -> REAL paso13 .)
    MINUS           reduce using rule 82 (ssubexpression -> REAL paso13 .)
    END             reduce using rule 82 (ssubexpression -> REAL paso13 .)
    ID              reduce using rule 82 (ssubexpression -> REAL paso13 .)
    READ            reduce using rule 82 (ssubexpression -> REAL paso13 .)
    WRITE           reduce using rule 82 (ssubexpression -> REAL paso13 .)
    IF              reduce using rule 82 (ssubexpression -> REAL paso13 .)
    DO              reduce using rule 82 (ssubexpression -> REAL paso13 .)
    ELSIF           reduce using rule 82 (ssubexpression -> REAL paso13 .)
    ELSE            reduce using rule 82 (ssubexpression -> REAL paso13 .)
    COMMA           reduce using rule 82 (ssubexpression -> REAL paso13 .)


state 49

    (81) ssubexpression -> NUMBER paso12 .

    MUL             reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    DIV             reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    CPAREN          reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    PLUS            reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    MINUS           reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    END             reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    ID              reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    READ            reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    WRITE           reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    IF              reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    DO              reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    ELSIF           reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    ELSE            reduce using rule 81 (ssubexpression -> NUMBER paso12 .)
    COMMA           reduce using rule 81 (ssubexpression -> NUMBER paso12 .)


state 50

    (79) ssubexpression -> ID paso14 . OPAREN expression CPAREN
    (80) ssubexpression -> ID paso14 . OPAREN expression COMMA expression CPAREN

    OPAREN          shift and go to state 74


state 51

    (78) ssubexpression -> ID paso1 .

    MUL             reduce using rule 78 (ssubexpression -> ID paso1 .)
    DIV             reduce using rule 78 (ssubexpression -> ID paso1 .)
    CPAREN          reduce using rule 78 (ssubexpression -> ID paso1 .)
    PLUS            reduce using rule 78 (ssubexpression -> ID paso1 .)
    MINUS           reduce using rule 78 (ssubexpression -> ID paso1 .)
    END             reduce using rule 78 (ssubexpression -> ID paso1 .)
    ID              reduce using rule 78 (ssubexpression -> ID paso1 .)
    READ            reduce using rule 78 (ssubexpression -> ID paso1 .)
    WRITE           reduce using rule 78 (ssubexpression -> ID paso1 .)
    IF              reduce using rule 78 (ssubexpression -> ID paso1 .)
    DO              reduce using rule 78 (ssubexpression -> ID paso1 .)
    ELSIF           reduce using rule 78 (ssubexpression -> ID paso1 .)
    ELSE            reduce using rule 78 (ssubexpression -> ID paso1 .)
    COMMA           reduce using rule 78 (ssubexpression -> ID paso1 .)


state 52

    (33) statement -> WRITE write writequad .

    END             reduce using rule 33 (statement -> WRITE write writequad .)
    ID              reduce using rule 33 (statement -> WRITE write writequad .)
    READ            reduce using rule 33 (statement -> WRITE write writequad .)
    WRITE           reduce using rule 33 (statement -> WRITE write writequad .)
    IF              reduce using rule 33 (statement -> WRITE write writequad .)
    DO              reduce using rule 33 (statement -> WRITE write writequad .)
    ELSIF           reduce using rule 33 (statement -> WRITE write writequad .)
    ELSE            reduce using rule 33 (statement -> WRITE write writequad .)


state 53

    (71) expression -> subexpression paso4 .

    COMMA           reduce using rule 71 (expression -> subexpression paso4 .)
    CPAREN          reduce using rule 71 (expression -> subexpression paso4 .)
    PLUS            reduce using rule 71 (expression -> subexpression paso4 .)
    MINUS           reduce using rule 71 (expression -> subexpression paso4 .)
    ID              reduce using rule 71 (expression -> subexpression paso4 .)
    READ            reduce using rule 71 (expression -> subexpression paso4 .)
    WRITE           reduce using rule 71 (expression -> subexpression paso4 .)
    IF              reduce using rule 71 (expression -> subexpression paso4 .)
    DO              reduce using rule 71 (expression -> subexpression paso4 .)
    END             reduce using rule 71 (expression -> subexpression paso4 .)
    ELSIF           reduce using rule 71 (expression -> subexpression paso4 .)
    ELSE            reduce using rule 71 (expression -> subexpression paso4 .)


state 54

    (74) subexpression -> subexpression paso5 . MUL paso23 ssubexpression paso5
    (75) subexpression -> subexpression paso5 . DIV paso23 ssubexpression paso5

    MUL             shift and go to state 75
    DIV             shift and go to state 76


state 55

    (76) subexpression -> ssubexpression paso5 .

    MUL             reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    DIV             reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    COMMA           reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    PLUS            reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    MINUS           reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    ID              reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    READ            reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    WRITE           reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    IF              reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    DO              reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    END             reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    ELSIF           reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    ELSE            reduce using rule 76 (subexpression -> ssubexpression paso5 .)
    CPAREN          reduce using rule 76 (subexpression -> ssubexpression paso5 .)


state 56

    (83) ssubexpression -> OPAREN paso6 . expression CPAREN paso7
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 77
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 57

    (39) write -> expression correction .

    END             reduce using rule 39 (write -> expression correction .)
    ID              reduce using rule 39 (write -> expression correction .)
    READ            reduce using rule 39 (write -> expression correction .)
    WRITE           reduce using rule 39 (write -> expression correction .)
    IF              reduce using rule 39 (write -> expression correction .)
    DO              reduce using rule 39 (write -> expression correction .)
    ELSIF           reduce using rule 39 (write -> expression correction .)
    ELSE            reduce using rule 39 (write -> expression correction .)


state 58

    (69) expression -> expression paso4 . PLUS paso23 subexpression paso4
    (70) expression -> expression paso4 . MINUS paso23 subexpression paso4

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 59

    (31) statement -> ID COLLON DO . dowhile END DO ID
    (64) dowhile -> . dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (65) dowhile -> . statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 80
    dowhile                        shift and go to state 81
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 60

    (53) declare -> ID paso8 EQUAL . expression paso9
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 82

state 61

    (54) declare -> ID paso8 OPAREN . expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID paso8 OPAREN . expression CPAREN EQUAL expression paso9
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 83

state 62

    (30) statement -> ID OPAREN CPAREN .

    END             reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    ID              reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    READ            reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    WRITE           reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    IF              reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    DO              reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    ELSIF           reduce using rule 30 (statement -> ID OPAREN CPAREN .)
    ELSE            reduce using rule 30 (statement -> ID OPAREN CPAREN .)


state 63

    (34) statement -> IF paso1bool ifs . ELSE paso3bool statements END IF paso4bool
    (35) statement -> IF paso1bool ifs . END IF paso4bool

    ELSE            shift and go to state 84
    END             shift and go to state 85


state 64

    (58) ifs -> OPAREN . logicexp CPAREN paso2bool THEN statements iffs
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 89

state 65

    (2) programa -> PROGRAM ID variables statements END PROGRAM ID . subroutines
    (26) subroutines -> . subroutines SUBROUTINE ID statements END SUBROUTINE
    (27) subroutines -> . SUBROUTINE ID statements END SUBROUTINE
    (28) subroutines -> .

  ! shift/reduce conflict for SUBROUTINE resolved as shift
    SUBROUTINE      shift and go to state 93
    $end            reduce using rule 28 (subroutines -> .)

  ! SUBROUTINE      [ reduce using rule 28 (subroutines -> .) ]

    subroutines                    shift and go to state 94

state 66

    (38) statement -> DO paso1do dowhilenoid paso2do . END DO

    END             shift and go to state 95


state 67

    (66) dowhilenoid -> dowhilenoid IF . OPAREN logicexp CPAREN EXIT paso4do statements

    OPAREN          shift and go to state 96


state 68

    (67) dowhilenoid -> IF OPAREN . logicexp CPAREN EXIT paso4do statements
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 97

state 69

    (36) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL . expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 98

state 70

    (9) loopvars -> loopvars COMMA . ID

    ID              shift and go to state 99


state 71

    (13) variables3 -> tipo ID paso1dim OPAREN . paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID paso1dim OPAREN . paso2dim NUMBER paso3dim CPAREN paso51dim
    (16) paso2dim -> .

    NUMBER          reduce using rule 16 (paso2dim -> .)

    paso2dim                       shift and go to state 100

state 72

    (11) variables2 -> tipo ID EQUAL NUMBER .

    ID              reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    READ            reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    WRITE           reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    IF              reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    DO              reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    INT             reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    REAL            reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)
    END             reduce using rule 11 (variables2 -> tipo ID EQUAL NUMBER .)


state 73

    (12) variables2 -> tipo ID EQUAL REAL .

    ID              reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    READ            reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    WRITE           reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    IF              reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    DO              reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    INT             reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    REAL            reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)
    END             reduce using rule 12 (variables2 -> tipo ID EQUAL REAL .)


state 74

    (79) ssubexpression -> ID paso14 OPAREN . expression CPAREN
    (80) ssubexpression -> ID paso14 OPAREN . expression COMMA expression CPAREN
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 101
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 75

    (74) subexpression -> subexpression paso5 MUL . paso23 ssubexpression paso5
    (73) paso23 -> .

    ID              reduce using rule 73 (paso23 -> .)
    NUMBER          reduce using rule 73 (paso23 -> .)
    REAL            reduce using rule 73 (paso23 -> .)
    OPAREN          reduce using rule 73 (paso23 -> .)

    paso23                         shift and go to state 102

state 76

    (75) subexpression -> subexpression paso5 DIV . paso23 ssubexpression paso5
    (73) paso23 -> .

    ID              reduce using rule 73 (paso23 -> .)
    NUMBER          reduce using rule 73 (paso23 -> .)
    REAL            reduce using rule 73 (paso23 -> .)
    OPAREN          reduce using rule 73 (paso23 -> .)

    paso23                         shift and go to state 103

state 77

    (83) ssubexpression -> OPAREN paso6 expression . CPAREN paso7
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    CPAREN          shift and go to state 104
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 78

    (69) expression -> expression paso4 PLUS . paso23 subexpression paso4
    (73) paso23 -> .

    ID              reduce using rule 73 (paso23 -> .)
    NUMBER          reduce using rule 73 (paso23 -> .)
    REAL            reduce using rule 73 (paso23 -> .)
    OPAREN          reduce using rule 73 (paso23 -> .)

    paso23                         shift and go to state 105

state 79

    (70) expression -> expression paso4 MINUS . paso23 subexpression paso4
    (73) paso23 -> .

    ID              reduce using rule 73 (paso23 -> .)
    NUMBER          reduce using rule 73 (paso23 -> .)
    REAL            reduce using rule 73 (paso23 -> .)
    OPAREN          reduce using rule 73 (paso23 -> .)

    paso23                         shift and go to state 106

state 80

    (65) dowhile -> statements . IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    IF              shift and go to state 107
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 81

    (31) statement -> ID COLLON DO dowhile . END DO ID
    (64) dowhile -> dowhile . statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             shift and go to state 109
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 108
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 82

    (53) declare -> ID paso8 EQUAL expression . paso9
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (57) paso9 -> .
    (72) paso4 -> .

    END             reduce using rule 57 (paso9 -> .)
    ID              reduce using rule 57 (paso9 -> .)
    READ            reduce using rule 57 (paso9 -> .)
    WRITE           reduce using rule 57 (paso9 -> .)
    IF              reduce using rule 57 (paso9 -> .)
    DO              reduce using rule 57 (paso9 -> .)
    ELSIF           reduce using rule 57 (paso9 -> .)
    ELSE            reduce using rule 57 (paso9 -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 110

state 83

    (54) declare -> ID paso8 OPAREN expression . COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID paso8 OPAREN expression . CPAREN EQUAL expression paso9
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    COMMA           shift and go to state 112
    CPAREN          shift and go to state 111
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 84

    (34) statement -> IF paso1bool ifs ELSE . paso3bool statements END IF paso4bool
    (43) paso3bool -> .

    ID              reduce using rule 43 (paso3bool -> .)
    READ            reduce using rule 43 (paso3bool -> .)
    WRITE           reduce using rule 43 (paso3bool -> .)
    IF              reduce using rule 43 (paso3bool -> .)
    DO              reduce using rule 43 (paso3bool -> .)
    END             reduce using rule 43 (paso3bool -> .)

    paso3bool                      shift and go to state 113

state 85

    (35) statement -> IF paso1bool ifs END . IF paso4bool

    IF              shift and go to state 114


state 86

    (105) slogicexp -> REAL . paso13
    (86) paso13 -> .

    GT              reduce using rule 86 (paso13 -> .)
    GET             reduce using rule 86 (paso13 -> .)
    NE              reduce using rule 86 (paso13 -> .)
    EQUALS          reduce using rule 86 (paso13 -> .)
    LET             reduce using rule 86 (paso13 -> .)
    LT              reduce using rule 86 (paso13 -> .)
    CPAREN          reduce using rule 86 (paso13 -> .)
    AND             reduce using rule 86 (paso13 -> .)
    OR              reduce using rule 86 (paso13 -> .)

    paso13                         shift and go to state 115

state 87

    (96) logicexp -> slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (108) logicop -> . GT
    (109) logicop -> . GET
    (110) logicop -> . NE
    (111) logicop -> . EQUALS
    (112) logicop -> . LET
    (113) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 122

state 88

    (104) slogicexp -> NUMBER . paso12
    (85) paso12 -> .

    GT              reduce using rule 85 (paso12 -> .)
    GET             reduce using rule 85 (paso12 -> .)
    NE              reduce using rule 85 (paso12 -> .)
    EQUALS          reduce using rule 85 (paso12 -> .)
    LET             reduce using rule 85 (paso12 -> .)
    LT              reduce using rule 85 (paso12 -> .)
    CPAREN          reduce using rule 85 (paso12 -> .)
    AND             reduce using rule 85 (paso12 -> .)
    OR              reduce using rule 85 (paso12 -> .)

    paso12                         shift and go to state 123

state 89

    (58) ifs -> OPAREN logicexp . CPAREN paso2bool THEN statements iffs
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 125
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 90

    (103) slogicexp -> ID . paso1
    (106) slogicexp -> ID . OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> ID . OPAREN expression CPAREN
    (84) paso1 -> .

    OPAREN          shift and go to state 126
    GT              reduce using rule 84 (paso1 -> .)
    GET             reduce using rule 84 (paso1 -> .)
    NE              reduce using rule 84 (paso1 -> .)
    EQUALS          reduce using rule 84 (paso1 -> .)
    LET             reduce using rule 84 (paso1 -> .)
    LT              reduce using rule 84 (paso1 -> .)
    CPAREN          reduce using rule 84 (paso1 -> .)
    AND             reduce using rule 84 (paso1 -> .)
    OR              reduce using rule 84 (paso1 -> .)

    paso1                          shift and go to state 127

state 91

    (102) slogicexp -> OPAREN . logicexp CPAREN
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 128

state 92

    (95) logicexp -> NOT . andornot slogicexp pasonot paso2lgexp
    (90) andornot -> .

    OPAREN          reduce using rule 90 (andornot -> .)
    ID              reduce using rule 90 (andornot -> .)
    NUMBER          reduce using rule 90 (andornot -> .)
    REAL            reduce using rule 90 (andornot -> .)

    andornot                       shift and go to state 129

state 93

    (27) subroutines -> SUBROUTINE . ID statements END SUBROUTINE

    ID              shift and go to state 130


state 94

    (2) programa -> PROGRAM ID variables statements END PROGRAM ID subroutines .
    (26) subroutines -> subroutines . SUBROUTINE ID statements END SUBROUTINE

    $end            reduce using rule 2 (programa -> PROGRAM ID variables statements END PROGRAM ID subroutines .)
    SUBROUTINE      shift and go to state 131


state 95

    (38) statement -> DO paso1do dowhilenoid paso2do END . DO

    DO              shift and go to state 132


state 96

    (66) dowhilenoid -> dowhilenoid IF OPAREN . logicexp CPAREN EXIT paso4do statements
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 133

state 97

    (67) dowhilenoid -> IF OPAREN logicexp . CPAREN EXIT paso4do statements
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 134
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 98

    (36) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL expression . paso2for COMMA expression paso3for statements paso4for2 END DO
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (47) paso2for -> .
    (72) paso4 -> .

    COMMA           reduce using rule 47 (paso2for -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso2for                       shift and go to state 135
    paso4                          shift and go to state 58

state 99

    (9) loopvars -> loopvars COMMA ID .

    COMMA           reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    ID              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    READ            reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    WRITE           reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    IF              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    DO              reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    INT             reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    REAL            reduce using rule 9 (loopvars -> loopvars COMMA ID .)
    END             reduce using rule 9 (loopvars -> loopvars COMMA ID .)


state 100

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim . NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID paso1dim OPAREN paso2dim . NUMBER paso3dim CPAREN paso51dim

    NUMBER          shift and go to state 136


state 101

    (79) ssubexpression -> ID paso14 OPAREN expression . CPAREN
    (80) ssubexpression -> ID paso14 OPAREN expression . COMMA expression CPAREN
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    CPAREN          shift and go to state 137
    COMMA           shift and go to state 138
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 102

    (74) subexpression -> subexpression paso5 MUL paso23 . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    ssubexpression                 shift and go to state 139

state 103

    (75) subexpression -> subexpression paso5 DIV paso23 . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    ssubexpression                 shift and go to state 140

state 104

    (83) ssubexpression -> OPAREN paso6 expression CPAREN . paso7
    (89) paso7 -> .

    MUL             reduce using rule 89 (paso7 -> .)
    DIV             reduce using rule 89 (paso7 -> .)
    PLUS            reduce using rule 89 (paso7 -> .)
    MINUS           reduce using rule 89 (paso7 -> .)
    END             reduce using rule 89 (paso7 -> .)
    ID              reduce using rule 89 (paso7 -> .)
    READ            reduce using rule 89 (paso7 -> .)
    WRITE           reduce using rule 89 (paso7 -> .)
    IF              reduce using rule 89 (paso7 -> .)
    DO              reduce using rule 89 (paso7 -> .)
    ELSIF           reduce using rule 89 (paso7 -> .)
    ELSE            reduce using rule 89 (paso7 -> .)
    CPAREN          reduce using rule 89 (paso7 -> .)
    COMMA           reduce using rule 89 (paso7 -> .)

    paso7                          shift and go to state 141

state 105

    (69) expression -> expression paso4 PLUS paso23 . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 142
    ssubexpression                 shift and go to state 32

state 106

    (70) expression -> expression paso4 MINUS paso23 . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 143
    ssubexpression                 shift and go to state 32

state 107

    (65) dowhile -> statements IF . OPAREN logicexp CPAREN EXIT paso4do statements ID
    (34) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> IF . paso1bool ifs END IF paso4bool
    (42) paso1bool -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 144

  ! OPAREN          [ reduce using rule 42 (paso1bool -> .) ]

    paso1bool                      shift and go to state 38

state 108

    (64) dowhile -> dowhile statements . IF OPAREN logicexp CPAREN EXIT paso4do statements ID
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    IF              shift and go to state 145
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 109

    (31) statement -> ID COLLON DO dowhile END . DO ID

    DO              shift and go to state 146


state 110

    (53) declare -> ID paso8 EQUAL expression paso9 .

    ID              reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    READ            reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    WRITE           reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    IF              reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    DO              reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    END             reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    ELSIF           reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)
    ELSE            reduce using rule 53 (declare -> ID paso8 EQUAL expression paso9 .)


state 111

    (55) declare -> ID paso8 OPAREN expression CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 147


state 112

    (54) declare -> ID paso8 OPAREN expression COMMA . expression CPAREN EQUAL expression paso9
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 148

state 113

    (34) statement -> IF paso1bool ifs ELSE paso3bool . statements END IF paso4bool
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 149
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 114

    (35) statement -> IF paso1bool ifs END IF . paso4bool
    (60) paso4bool -> .

    END             reduce using rule 60 (paso4bool -> .)
    ID              reduce using rule 60 (paso4bool -> .)
    READ            reduce using rule 60 (paso4bool -> .)
    WRITE           reduce using rule 60 (paso4bool -> .)
    IF              reduce using rule 60 (paso4bool -> .)
    DO              reduce using rule 60 (paso4bool -> .)
    ELSIF           reduce using rule 60 (paso4bool -> .)
    ELSE            reduce using rule 60 (paso4bool -> .)

    paso4bool                      shift and go to state 150

state 115

    (105) slogicexp -> REAL paso13 .

    GT              reduce using rule 105 (slogicexp -> REAL paso13 .)
    GET             reduce using rule 105 (slogicexp -> REAL paso13 .)
    NE              reduce using rule 105 (slogicexp -> REAL paso13 .)
    EQUALS          reduce using rule 105 (slogicexp -> REAL paso13 .)
    LET             reduce using rule 105 (slogicexp -> REAL paso13 .)
    LT              reduce using rule 105 (slogicexp -> REAL paso13 .)
    CPAREN          reduce using rule 105 (slogicexp -> REAL paso13 .)
    AND             reduce using rule 105 (slogicexp -> REAL paso13 .)
    OR              reduce using rule 105 (slogicexp -> REAL paso13 .)


state 116

    (109) logicop -> GET .

    OPAREN          reduce using rule 109 (logicop -> GET .)
    ID              reduce using rule 109 (logicop -> GET .)
    NUMBER          reduce using rule 109 (logicop -> GET .)
    REAL            reduce using rule 109 (logicop -> GET .)


state 117

    (110) logicop -> NE .

    OPAREN          reduce using rule 110 (logicop -> NE .)
    ID              reduce using rule 110 (logicop -> NE .)
    NUMBER          reduce using rule 110 (logicop -> NE .)
    REAL            reduce using rule 110 (logicop -> NE .)


state 118

    (111) logicop -> EQUALS .

    OPAREN          reduce using rule 111 (logicop -> EQUALS .)
    ID              reduce using rule 111 (logicop -> EQUALS .)
    NUMBER          reduce using rule 111 (logicop -> EQUALS .)
    REAL            reduce using rule 111 (logicop -> EQUALS .)


state 119

    (113) logicop -> LT .

    OPAREN          reduce using rule 113 (logicop -> LT .)
    ID              reduce using rule 113 (logicop -> LT .)
    NUMBER          reduce using rule 113 (logicop -> LT .)
    REAL            reduce using rule 113 (logicop -> LT .)


state 120

    (108) logicop -> GT .

    OPAREN          reduce using rule 108 (logicop -> GT .)
    ID              reduce using rule 108 (logicop -> GT .)
    NUMBER          reduce using rule 108 (logicop -> GT .)
    REAL            reduce using rule 108 (logicop -> GT .)


state 121

    (112) logicop -> LET .

    OPAREN          reduce using rule 112 (logicop -> LET .)
    ID              reduce using rule 112 (logicop -> LET .)
    NUMBER          reduce using rule 112 (logicop -> LET .)
    REAL            reduce using rule 112 (logicop -> LET .)


state 122

    (96) logicexp -> slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 151

state 123

    (104) slogicexp -> NUMBER paso12 .

    GT              reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    GET             reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    NE              reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    EQUALS          reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    LET             reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    LT              reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    CPAREN          reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    AND             reduce using rule 104 (slogicexp -> NUMBER paso12 .)
    OR              reduce using rule 104 (slogicexp -> NUMBER paso12 .)


state 124

    (91) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp . AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp paso2lgexp . OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp paso2lgexp . AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp paso2lgexp . OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp

    AND             shift and go to state 152
    OR              shift and go to state 153


state 125

    (58) ifs -> OPAREN logicexp CPAREN . paso2bool THEN statements iffs
    (59) paso2bool -> .

    THEN            reduce using rule 59 (paso2bool -> .)

    paso2bool                      shift and go to state 154

state 126

    (106) slogicexp -> ID OPAREN . expression COMMA expression CPAREN
    (107) slogicexp -> ID OPAREN . expression CPAREN
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 155
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 127

    (103) slogicexp -> ID paso1 .

    GT              reduce using rule 103 (slogicexp -> ID paso1 .)
    GET             reduce using rule 103 (slogicexp -> ID paso1 .)
    NE              reduce using rule 103 (slogicexp -> ID paso1 .)
    EQUALS          reduce using rule 103 (slogicexp -> ID paso1 .)
    LET             reduce using rule 103 (slogicexp -> ID paso1 .)
    LT              reduce using rule 103 (slogicexp -> ID paso1 .)
    CPAREN          reduce using rule 103 (slogicexp -> ID paso1 .)
    AND             reduce using rule 103 (slogicexp -> ID paso1 .)
    OR              reduce using rule 103 (slogicexp -> ID paso1 .)


state 128

    (102) slogicexp -> OPAREN logicexp . CPAREN
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 156
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 129

    (95) logicexp -> NOT andornot . slogicexp pasonot paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 157

state 130

    (27) subroutines -> SUBROUTINE ID . statements END SUBROUTINE
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 158
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 131

    (26) subroutines -> subroutines SUBROUTINE . ID statements END SUBROUTINE

    ID              shift and go to state 159


state 132

    (38) statement -> DO paso1do dowhilenoid paso2do END DO .

    END             reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    ID              reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    READ            reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    WRITE           reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    IF              reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    DO              reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    ELSIF           reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)
    ELSE            reduce using rule 38 (statement -> DO paso1do dowhilenoid paso2do END DO .)


state 133

    (66) dowhilenoid -> dowhilenoid IF OPAREN logicexp . CPAREN EXIT paso4do statements
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 160
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 134

    (67) dowhilenoid -> IF OPAREN logicexp CPAREN . EXIT paso4do statements

    EXIT            shift and go to state 161


state 135

    (36) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL expression paso2for . COMMA expression paso3for statements paso4for2 END DO

    COMMA           shift and go to state 162


state 136

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER . paso3dim COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER . paso3dim CPAREN paso51dim
    (17) paso3dim -> .

    COMMA           reduce using rule 17 (paso3dim -> .)
    CPAREN          reduce using rule 17 (paso3dim -> .)

    paso3dim                       shift and go to state 163

state 137

    (79) ssubexpression -> ID paso14 OPAREN expression CPAREN .

    MUL             reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    DIV             reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    CPAREN          reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    PLUS            reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    MINUS           reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    END             reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    ID              reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    READ            reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    WRITE           reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    IF              reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    DO              reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    ELSIF           reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    ELSE            reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)
    COMMA           reduce using rule 79 (ssubexpression -> ID paso14 OPAREN expression CPAREN .)


state 138

    (80) ssubexpression -> ID paso14 OPAREN expression COMMA . expression CPAREN
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 164
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 139

    (74) subexpression -> subexpression paso5 MUL paso23 ssubexpression . paso5
    (77) paso5 -> .

    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)
    PLUS            reduce using rule 77 (paso5 -> .)
    MINUS           reduce using rule 77 (paso5 -> .)
    END             reduce using rule 77 (paso5 -> .)
    ID              reduce using rule 77 (paso5 -> .)
    READ            reduce using rule 77 (paso5 -> .)
    WRITE           reduce using rule 77 (paso5 -> .)
    IF              reduce using rule 77 (paso5 -> .)
    DO              reduce using rule 77 (paso5 -> .)
    ELSIF           reduce using rule 77 (paso5 -> .)
    ELSE            reduce using rule 77 (paso5 -> .)
    CPAREN          reduce using rule 77 (paso5 -> .)
    COMMA           reduce using rule 77 (paso5 -> .)

    paso5                          shift and go to state 165

state 140

    (75) subexpression -> subexpression paso5 DIV paso23 ssubexpression . paso5
    (77) paso5 -> .

    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)
    PLUS            reduce using rule 77 (paso5 -> .)
    MINUS           reduce using rule 77 (paso5 -> .)
    END             reduce using rule 77 (paso5 -> .)
    ID              reduce using rule 77 (paso5 -> .)
    READ            reduce using rule 77 (paso5 -> .)
    WRITE           reduce using rule 77 (paso5 -> .)
    IF              reduce using rule 77 (paso5 -> .)
    DO              reduce using rule 77 (paso5 -> .)
    ELSIF           reduce using rule 77 (paso5 -> .)
    ELSE            reduce using rule 77 (paso5 -> .)
    CPAREN          reduce using rule 77 (paso5 -> .)
    COMMA           reduce using rule 77 (paso5 -> .)

    paso5                          shift and go to state 166

state 141

    (83) ssubexpression -> OPAREN paso6 expression CPAREN paso7 .

    MUL             reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DIV             reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    CPAREN          reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    PLUS            reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    MINUS           reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    END             reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ID              reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    READ            reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    WRITE           reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    IF              reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    DO              reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSIF           reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    ELSE            reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)
    COMMA           reduce using rule 83 (ssubexpression -> OPAREN paso6 expression CPAREN paso7 .)


state 142

    (69) expression -> expression paso4 PLUS paso23 subexpression . paso4
    (74) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (72) paso4 -> .
    (77) paso5 -> .

    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)
    END             reduce using rule 72 (paso4 -> .)
    ID              reduce using rule 72 (paso4 -> .)
    READ            reduce using rule 72 (paso4 -> .)
    WRITE           reduce using rule 72 (paso4 -> .)
    IF              reduce using rule 72 (paso4 -> .)
    DO              reduce using rule 72 (paso4 -> .)
    ELSIF           reduce using rule 72 (paso4 -> .)
    ELSE            reduce using rule 72 (paso4 -> .)
    CPAREN          reduce using rule 72 (paso4 -> .)
    COMMA           reduce using rule 72 (paso4 -> .)
    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)

    paso4                          shift and go to state 167
    paso5                          shift and go to state 54

state 143

    (70) expression -> expression paso4 MINUS paso23 subexpression . paso4
    (74) subexpression -> subexpression . paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> subexpression . paso5 DIV paso23 ssubexpression paso5
    (72) paso4 -> .
    (77) paso5 -> .

    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)
    END             reduce using rule 72 (paso4 -> .)
    ID              reduce using rule 72 (paso4 -> .)
    READ            reduce using rule 72 (paso4 -> .)
    WRITE           reduce using rule 72 (paso4 -> .)
    IF              reduce using rule 72 (paso4 -> .)
    DO              reduce using rule 72 (paso4 -> .)
    ELSIF           reduce using rule 72 (paso4 -> .)
    ELSE            reduce using rule 72 (paso4 -> .)
    CPAREN          reduce using rule 72 (paso4 -> .)
    COMMA           reduce using rule 72 (paso4 -> .)
    MUL             reduce using rule 77 (paso5 -> .)
    DIV             reduce using rule 77 (paso5 -> .)

    paso4                          shift and go to state 168
    paso5                          shift and go to state 54

state 144

    (65) dowhile -> statements IF OPAREN . logicexp CPAREN EXIT paso4do statements ID
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 169

state 145

    (64) dowhile -> dowhile statements IF . OPAREN logicexp CPAREN EXIT paso4do statements ID
    (34) statement -> IF . paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> IF . paso1bool ifs END IF paso4bool
    (42) paso1bool -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 170

  ! OPAREN          [ reduce using rule 42 (paso1bool -> .) ]

    paso1bool                      shift and go to state 38

state 146

    (31) statement -> ID COLLON DO dowhile END DO . ID

    ID              shift and go to state 171


state 147

    (55) declare -> ID paso8 OPAREN expression CPAREN EQUAL . expression paso9
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 172

state 148

    (54) declare -> ID paso8 OPAREN expression COMMA expression . CPAREN EQUAL expression paso9
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    CPAREN          shift and go to state 173
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 149

    (34) statement -> IF paso1bool ifs ELSE paso3bool statements . END IF paso4bool
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 174
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 150

    (35) statement -> IF paso1bool ifs END IF paso4bool .

    END             reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    ID              reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    READ            reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    WRITE           reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    IF              reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    DO              reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSIF           reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)
    ELSE            reduce using rule 35 (statement -> IF paso1bool ifs END IF paso4bool .)


state 151

    (96) logicexp -> slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (99) paso1lgexp -> .

    CPAREN          reduce using rule 99 (paso1lgexp -> .)
    AND             reduce using rule 99 (paso1lgexp -> .)
    OR              reduce using rule 99 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 175

state 152

    (91) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (90) andornot -> .

    NOT             reduce using rule 90 (andornot -> .)
    OPAREN          reduce using rule 90 (andornot -> .)
    ID              reduce using rule 90 (andornot -> .)
    NUMBER          reduce using rule 90 (andornot -> .)
    REAL            reduce using rule 90 (andornot -> .)

    andornot                       shift and go to state 176

state 153

    (92) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR . andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR . andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (90) andornot -> .

    NOT             reduce using rule 90 (andornot -> .)
    OPAREN          reduce using rule 90 (andornot -> .)
    ID              reduce using rule 90 (andornot -> .)
    NUMBER          reduce using rule 90 (andornot -> .)
    REAL            reduce using rule 90 (andornot -> .)

    andornot                       shift and go to state 177

state 154

    (58) ifs -> OPAREN logicexp CPAREN paso2bool . THEN statements iffs

    THEN            shift and go to state 178


state 155

    (106) slogicexp -> ID OPAREN expression . COMMA expression CPAREN
    (107) slogicexp -> ID OPAREN expression . CPAREN
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    COMMA           shift and go to state 180
    CPAREN          shift and go to state 179
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 156

    (102) slogicexp -> OPAREN logicexp CPAREN .

    GT              reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    GET             reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    NE              reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    EQUALS          reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    LET             reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    LT              reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    CPAREN          reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    AND             reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)
    OR              reduce using rule 102 (slogicexp -> OPAREN logicexp CPAREN .)


state 157

    (95) logicexp -> NOT andornot slogicexp . pasonot paso2lgexp
    (101) pasonot -> .

    CPAREN          reduce using rule 101 (pasonot -> .)
    AND             reduce using rule 101 (pasonot -> .)
    OR              reduce using rule 101 (pasonot -> .)

    pasonot                        shift and go to state 181

state 158

    (27) subroutines -> SUBROUTINE ID statements . END SUBROUTINE
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 182
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 159

    (26) subroutines -> subroutines SUBROUTINE ID . statements END SUBROUTINE
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 183
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 160

    (66) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN . EXIT paso4do statements

    EXIT            shift and go to state 184


state 161

    (67) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT . paso4do statements
    (68) paso4do -> .

    ID              reduce using rule 68 (paso4do -> .)
    READ            reduce using rule 68 (paso4do -> .)
    WRITE           reduce using rule 68 (paso4do -> .)
    IF              reduce using rule 68 (paso4do -> .)
    DO              reduce using rule 68 (paso4do -> .)
    END             reduce using rule 68 (paso4do -> .)

    paso4do                        shift and go to state 185

state 162

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA . expression paso3for statements paso4for2 END DO
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 186

state 163

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim . COMMA NUMBER paso4dim CPAREN paso52dim
    (14) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim . CPAREN paso51dim

    COMMA           shift and go to state 188
    CPAREN          shift and go to state 187


state 164

    (80) ssubexpression -> ID paso14 OPAREN expression COMMA expression . CPAREN
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    CPAREN          shift and go to state 189
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 165

    (74) subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .

    MUL             reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DIV             reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ID              reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    READ            reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    IF              reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    DO              reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    END             reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 74 (subexpression -> subexpression paso5 MUL paso23 ssubexpression paso5 .)


state 166

    (75) subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .

    MUL             reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DIV             reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    COMMA           reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    PLUS            reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    MINUS           reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ID              reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    READ            reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    WRITE           reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    IF              reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    DO              reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    END             reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSIF           reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    ELSE            reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)
    CPAREN          reduce using rule 75 (subexpression -> subexpression paso5 DIV paso23 ssubexpression paso5 .)


state 167

    (69) expression -> expression paso4 PLUS paso23 subexpression paso4 .

    COMMA           reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    CPAREN          reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ID              reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    READ            reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    IF              reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    DO              reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    END             reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 69 (expression -> expression paso4 PLUS paso23 subexpression paso4 .)


state 168

    (70) expression -> expression paso4 MINUS paso23 subexpression paso4 .

    COMMA           reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    CPAREN          reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    PLUS            reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    MINUS           reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ID              reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    READ            reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    WRITE           reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    IF              reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    DO              reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    END             reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSIF           reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)
    ELSE            reduce using rule 70 (expression -> expression paso4 MINUS paso23 subexpression paso4 .)


state 169

    (65) dowhile -> statements IF OPAREN logicexp . CPAREN EXIT paso4do statements ID
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 190
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 170

    (64) dowhile -> dowhile statements IF OPAREN . logicexp CPAREN EXIT paso4do statements ID
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 191

state 171

    (31) statement -> ID COLLON DO dowhile END DO ID .

    END             reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    ID              reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    READ            reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    WRITE           reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    IF              reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    DO              reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    ELSIF           reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)
    ELSE            reduce using rule 31 (statement -> ID COLLON DO dowhile END DO ID .)


state 172

    (55) declare -> ID paso8 OPAREN expression CPAREN EQUAL expression . paso9
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (57) paso9 -> .
    (72) paso4 -> .

    END             reduce using rule 57 (paso9 -> .)
    ID              reduce using rule 57 (paso9 -> .)
    READ            reduce using rule 57 (paso9 -> .)
    WRITE           reduce using rule 57 (paso9 -> .)
    IF              reduce using rule 57 (paso9 -> .)
    DO              reduce using rule 57 (paso9 -> .)
    ELSIF           reduce using rule 57 (paso9 -> .)
    ELSE            reduce using rule 57 (paso9 -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 192

state 173

    (54) declare -> ID paso8 OPAREN expression COMMA expression CPAREN . EQUAL expression paso9

    EQUAL           shift and go to state 193


state 174

    (34) statement -> IF paso1bool ifs ELSE paso3bool statements END . IF paso4bool

    IF              shift and go to state 194


state 175

    (96) logicexp -> slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 195

state 176

    (91) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp paso2lgexp AND andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 197
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 196

state 177

    (92) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR andornot . NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp paso2lgexp OR andornot . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 199
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 198

state 178

    (58) ifs -> OPAREN logicexp CPAREN paso2bool THEN . statements iffs
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 23 (statements -> .)
    ELSE            reduce using rule 23 (statements -> .)
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 200
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 179

    (107) slogicexp -> ID OPAREN expression CPAREN .

    GT              reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    GET             reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    NE              reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    EQUALS          reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    LET             reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    LT              reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    CPAREN          reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    AND             reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)
    OR              reduce using rule 107 (slogicexp -> ID OPAREN expression CPAREN .)


state 180

    (106) slogicexp -> ID OPAREN expression COMMA . expression CPAREN
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    expression                     shift and go to state 201
    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32

state 181

    (95) logicexp -> NOT andornot slogicexp pasonot . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 202

state 182

    (27) subroutines -> SUBROUTINE ID statements END . SUBROUTINE

    SUBROUTINE      shift and go to state 203


state 183

    (26) subroutines -> subroutines SUBROUTINE ID statements . END SUBROUTINE
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             shift and go to state 204
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 184

    (66) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT . paso4do statements
    (68) paso4do -> .

    ID              reduce using rule 68 (paso4do -> .)
    READ            reduce using rule 68 (paso4do -> .)
    WRITE           reduce using rule 68 (paso4do -> .)
    IF              reduce using rule 68 (paso4do -> .)
    DO              reduce using rule 68 (paso4do -> .)
    END             reduce using rule 68 (paso4do -> .)

    paso4do                        shift and go to state 205

state 185

    (67) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do . statements
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 206
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 186

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression . paso3for statements paso4for2 END DO
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (48) paso3for -> .
    (72) paso4 -> .

    COMMA           reduce using rule 48 (paso3for -> .)
    ID              reduce using rule 48 (paso3for -> .)
    READ            reduce using rule 48 (paso3for -> .)
    WRITE           reduce using rule 48 (paso3for -> .)
    IF              reduce using rule 48 (paso3for -> .)
    DO              reduce using rule 48 (paso3for -> .)
    END             reduce using rule 48 (paso3for -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58
    paso3for                       shift and go to state 207

state 187

    (14) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN . paso51dim
    (19) paso51dim -> .

    ID              reduce using rule 19 (paso51dim -> .)
    READ            reduce using rule 19 (paso51dim -> .)
    WRITE           reduce using rule 19 (paso51dim -> .)
    IF              reduce using rule 19 (paso51dim -> .)
    DO              reduce using rule 19 (paso51dim -> .)
    INT             reduce using rule 19 (paso51dim -> .)
    REAL            reduce using rule 19 (paso51dim -> .)
    END             reduce using rule 19 (paso51dim -> .)

    paso51dim                      shift and go to state 208

state 188

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA . NUMBER paso4dim CPAREN paso52dim

    NUMBER          shift and go to state 209


state 189

    (80) ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .

    MUL             reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    DIV             reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    CPAREN          reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    PLUS            reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    MINUS           reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    END             reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    ID              reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    READ            reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    WRITE           reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    IF              reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    DO              reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    ELSIF           reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    ELSE            reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)
    COMMA           reduce using rule 80 (ssubexpression -> ID paso14 OPAREN expression COMMA expression CPAREN .)


state 190

    (65) dowhile -> statements IF OPAREN logicexp CPAREN . EXIT paso4do statements ID

    EXIT            shift and go to state 210


state 191

    (64) dowhile -> dowhile statements IF OPAREN logicexp . CPAREN EXIT paso4do statements ID
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 211
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 192

    (55) declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .

    ID              reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    END             reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 55 (declare -> ID paso8 OPAREN expression CPAREN EQUAL expression paso9 .)


state 193

    (54) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL . expression paso9
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 212

state 194

    (34) statement -> IF paso1bool ifs ELSE paso3bool statements END IF . paso4bool
    (60) paso4bool -> .

    END             reduce using rule 60 (paso4bool -> .)
    ID              reduce using rule 60 (paso4bool -> .)
    READ            reduce using rule 60 (paso4bool -> .)
    WRITE           reduce using rule 60 (paso4bool -> .)
    IF              reduce using rule 60 (paso4bool -> .)
    DO              reduce using rule 60 (paso4bool -> .)
    ELSIF           reduce using rule 60 (paso4bool -> .)
    ELSE            reduce using rule 60 (paso4bool -> .)

    paso4bool                      shift and go to state 213

state 195

    (96) logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 96 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 96 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 96 (logicexp -> slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 196

    (97) logicexp -> logicexp paso2lgexp AND andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (108) logicop -> . GT
    (109) logicop -> . GET
    (110) logicop -> . NE
    (111) logicop -> . EQUALS
    (112) logicop -> . LET
    (113) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 214

state 197

    (91) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (90) andornot -> .

    OPAREN          reduce using rule 90 (andornot -> .)
    ID              reduce using rule 90 (andornot -> .)
    NUMBER          reduce using rule 90 (andornot -> .)
    REAL            reduce using rule 90 (andornot -> .)

    andornot                       shift and go to state 215

state 198

    (98) logicexp -> logicexp paso2lgexp OR andornot slogicexp . logicop slogicexp paso1lgexp paso2lgexp
    (108) logicop -> . GT
    (109) logicop -> . GET
    (110) logicop -> . NE
    (111) logicop -> . EQUALS
    (112) logicop -> . LET
    (113) logicop -> . LT

    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    logicop                        shift and go to state 216

state 199

    (92) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR andornot NOT . andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (90) andornot -> .

    OPAREN          reduce using rule 90 (andornot -> .)
    ID              reduce using rule 90 (andornot -> .)
    NUMBER          reduce using rule 90 (andornot -> .)
    REAL            reduce using rule 90 (andornot -> .)

    andornot                       shift and go to state 217

state 200

    (58) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements . iffs
    (21) statements -> statements . statement
    (61) iffs -> . iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (62) iffs -> . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (63) iffs -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ELSIF resolved as shift
    ELSIF           shift and go to state 218
    ELSE            reduce using rule 63 (iffs -> .)
    END             reduce using rule 63 (iffs -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ELSIF           [ reduce using rule 63 (iffs -> .) ]

    statement                      shift and go to state 20
    iffs                           shift and go to state 219
    declare                        shift and go to state 19

state 201

    (106) slogicexp -> ID OPAREN expression COMMA expression . CPAREN
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (72) paso4 -> .

    CPAREN          shift and go to state 220
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58

state 202

    (95) logicexp -> NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 95 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 95 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 95 (logicexp -> NOT andornot slogicexp pasonot paso2lgexp .)


state 203

    (27) subroutines -> SUBROUTINE ID statements END SUBROUTINE .

    SUBROUTINE      reduce using rule 27 (subroutines -> SUBROUTINE ID statements END SUBROUTINE .)
    $end            reduce using rule 27 (subroutines -> SUBROUTINE ID statements END SUBROUTINE .)


state 204

    (26) subroutines -> subroutines SUBROUTINE ID statements END . SUBROUTINE

    SUBROUTINE      shift and go to state 221


state 205

    (66) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do . statements
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 222
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 206

    (67) dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for IF resolved as shift
    END             reduce using rule 67 (dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! IF              [ reduce using rule 67 (dowhilenoid -> IF OPAREN logicexp CPAREN EXIT paso4do statements .) ]

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 207

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . COMMA expression statements paso4for1 END DO
    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for . statements paso4for2 END DO
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    COMMA           shift and go to state 224
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 223
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 208

    (14) variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .

    ID              reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    READ            reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    WRITE           reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    IF              reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    DO              reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    INT             reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    REAL            reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)
    END             reduce using rule 14 (variables4 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim CPAREN paso51dim .)


state 209

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER . paso4dim CPAREN paso52dim
    (18) paso4dim -> .

    CPAREN          reduce using rule 18 (paso4dim -> .)

    paso4dim                       shift and go to state 225

state 210

    (65) dowhile -> statements IF OPAREN logicexp CPAREN EXIT . paso4do statements ID
    (68) paso4do -> .

    ID              reduce using rule 68 (paso4do -> .)
    READ            reduce using rule 68 (paso4do -> .)
    WRITE           reduce using rule 68 (paso4do -> .)
    IF              reduce using rule 68 (paso4do -> .)
    DO              reduce using rule 68 (paso4do -> .)

    paso4do                        shift and go to state 226

state 211

    (64) dowhile -> dowhile statements IF OPAREN logicexp CPAREN . EXIT paso4do statements ID

    EXIT            shift and go to state 227


state 212

    (54) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression . paso9
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (57) paso9 -> .
    (72) paso4 -> .

    END             reduce using rule 57 (paso9 -> .)
    ID              reduce using rule 57 (paso9 -> .)
    READ            reduce using rule 57 (paso9 -> .)
    WRITE           reduce using rule 57 (paso9 -> .)
    IF              reduce using rule 57 (paso9 -> .)
    DO              reduce using rule 57 (paso9 -> .)
    ELSIF           reduce using rule 57 (paso9 -> .)
    ELSE            reduce using rule 57 (paso9 -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)

    paso4                          shift and go to state 58
    paso9                          shift and go to state 228

state 213

    (34) statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .

    END             reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ID              reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    READ            reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    WRITE           reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    IF              reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    DO              reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSIF           reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)
    ELSE            reduce using rule 34 (statement -> IF paso1bool ifs ELSE paso3bool statements END IF paso4bool .)


state 214

    (97) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 229

state 215

    (91) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 230

state 216

    (98) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop . slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 231

state 217

    (92) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot . slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 232

state 218

    (62) iffs -> ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (43) paso3bool -> .

    OPAREN          reduce using rule 43 (paso3bool -> .)

    paso3bool                      shift and go to state 233

state 219

    (58) ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .
    (61) iffs -> iffs . ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements

    ELSE            reduce using rule 58 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    END             reduce using rule 58 (ifs -> OPAREN logicexp CPAREN paso2bool THEN statements iffs .)
    ELSIF           shift and go to state 234


state 220

    (106) slogicexp -> ID OPAREN expression COMMA expression CPAREN .

    GT              reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    GET             reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    NE              reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    EQUALS          reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LET             reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    LT              reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    CPAREN          reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    AND             reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)
    OR              reduce using rule 106 (slogicexp -> ID OPAREN expression COMMA expression CPAREN .)


state 221

    (26) subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .

    SUBROUTINE      reduce using rule 26 (subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .)
    $end            reduce using rule 26 (subroutines -> subroutines SUBROUTINE ID statements END SUBROUTINE .)


state 222

    (66) dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for IF resolved as shift
    END             reduce using rule 66 (dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! IF              [ reduce using rule 66 (dowhilenoid -> dowhilenoid IF OPAREN logicexp CPAREN EXIT paso4do statements .) ]

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 223

    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements . paso4for2 END DO
    (21) statements -> statements . statement
    (50) paso4for2 -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             reduce using rule 50 (paso4for2 -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    paso4for2                      shift and go to state 235
    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 224

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA . expression statements paso4for1 END DO
    (69) expression -> . expression paso4 PLUS paso23 subexpression paso4
    (70) expression -> . expression paso4 MINUS paso23 subexpression paso4
    (71) expression -> . subexpression paso4
    (74) subexpression -> . subexpression paso5 MUL paso23 ssubexpression paso5
    (75) subexpression -> . subexpression paso5 DIV paso23 ssubexpression paso5
    (76) subexpression -> . ssubexpression paso5
    (78) ssubexpression -> . ID paso1
    (79) ssubexpression -> . ID paso14 OPAREN expression CPAREN
    (80) ssubexpression -> . ID paso14 OPAREN expression COMMA expression CPAREN
    (81) ssubexpression -> . NUMBER paso12
    (82) ssubexpression -> . REAL paso13
    (83) ssubexpression -> . OPAREN paso6 expression CPAREN paso7

    ID              shift and go to state 28
    NUMBER          shift and go to state 27
    REAL            shift and go to state 26
    OPAREN          shift and go to state 33

    subexpression                  shift and go to state 31
    ssubexpression                 shift and go to state 32
    expression                     shift and go to state 236

state 225

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim . CPAREN paso52dim

    CPAREN          shift and go to state 237


state 226

    (65) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do . statements ID
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 238
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 227

    (64) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT . paso4do statements ID
    (68) paso4do -> .

    ID              reduce using rule 68 (paso4do -> .)
    READ            reduce using rule 68 (paso4do -> .)
    WRITE           reduce using rule 68 (paso4do -> .)
    IF              reduce using rule 68 (paso4do -> .)
    DO              reduce using rule 68 (paso4do -> .)

    paso4do                        shift and go to state 239

state 228

    (54) declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .

    ID              reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    READ            reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    WRITE           reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    IF              reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    DO              reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    END             reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    ELSIF           reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)
    ELSE            reduce using rule 54 (declare -> ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9 .)


state 229

    (97) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (99) paso1lgexp -> .

    CPAREN          reduce using rule 99 (paso1lgexp -> .)
    AND             reduce using rule 99 (paso1lgexp -> .)
    OR              reduce using rule 99 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 240

state 230

    (91) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) pasonot -> .

    GT              reduce using rule 101 (pasonot -> .)
    GET             reduce using rule 101 (pasonot -> .)
    NE              reduce using rule 101 (pasonot -> .)
    EQUALS          reduce using rule 101 (pasonot -> .)
    LET             reduce using rule 101 (pasonot -> .)
    LT              reduce using rule 101 (pasonot -> .)
    CPAREN          reduce using rule 101 (pasonot -> .)
    AND             reduce using rule 101 (pasonot -> .)
    OR              reduce using rule 101 (pasonot -> .)

    pasonot                        shift and go to state 241

state 231

    (98) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp . paso1lgexp paso2lgexp
    (99) paso1lgexp -> .

    CPAREN          reduce using rule 99 (paso1lgexp -> .)
    AND             reduce using rule 99 (paso1lgexp -> .)
    OR              reduce using rule 99 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 242

state 232

    (92) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp . pasonot logicop slogicexp paso1lgexp paso2lgexp
    (101) pasonot -> .

    GT              reduce using rule 101 (pasonot -> .)
    GET             reduce using rule 101 (pasonot -> .)
    NE              reduce using rule 101 (pasonot -> .)
    EQUALS          reduce using rule 101 (pasonot -> .)
    LET             reduce using rule 101 (pasonot -> .)
    LT              reduce using rule 101 (pasonot -> .)
    CPAREN          reduce using rule 101 (pasonot -> .)
    AND             reduce using rule 101 (pasonot -> .)
    OR              reduce using rule 101 (pasonot -> .)

    pasonot                        shift and go to state 243

state 233

    (62) iffs -> ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 244


state 234

    (61) iffs -> iffs ELSIF . paso3bool OPAREN logicexp CPAREN paso2bool THEN statements
    (43) paso3bool -> .

    OPAREN          reduce using rule 43 (paso3bool -> .)

    paso3bool                      shift and go to state 245

state 235

    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 . END DO

    END             shift and go to state 246


state 236

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression . statements paso4for1 END DO
    (69) expression -> expression . paso4 PLUS paso23 subexpression paso4
    (70) expression -> expression . paso4 MINUS paso23 subexpression paso4
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (72) paso4 -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 23 (statements -> .)
    PLUS            reduce using rule 72 (paso4 -> .)
    MINUS           reduce using rule 72 (paso4 -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 247
    statement                      shift and go to state 10
    paso4                          shift and go to state 58
    declare                        shift and go to state 19

state 237

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN . paso52dim
    (20) paso52dim -> .

    ID              reduce using rule 20 (paso52dim -> .)
    READ            reduce using rule 20 (paso52dim -> .)
    WRITE           reduce using rule 20 (paso52dim -> .)
    IF              reduce using rule 20 (paso52dim -> .)
    DO              reduce using rule 20 (paso52dim -> .)
    INT             reduce using rule 20 (paso52dim -> .)
    REAL            reduce using rule 20 (paso52dim -> .)
    END             reduce using rule 20 (paso52dim -> .)

    paso52dim                      shift and go to state 248

state 238

    (65) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements . ID
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ID              shift and go to state 249
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 239

    (64) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do . statements ID
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 250
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 240

    (97) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 251

state 241

    (91) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . paso2lgexp
    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .
    (108) logicop -> . GT
    (109) logicop -> . GET
    (110) logicop -> . NE
    (111) logicop -> . EQUALS
    (112) logicop -> . LET
    (113) logicop -> . LT

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)
    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    paso2lgexp                     shift and go to state 252
    logicop                        shift and go to state 253

state 242

    (98) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 254

state 243

    (92) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . paso2lgexp
    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot . logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .
    (108) logicop -> . GT
    (109) logicop -> . GET
    (110) logicop -> . NE
    (111) logicop -> . EQUALS
    (112) logicop -> . LET
    (113) logicop -> . LT

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)
    GT              shift and go to state 120
    GET             shift and go to state 116
    NE              shift and go to state 117
    EQUALS          shift and go to state 118
    LET             shift and go to state 121
    LT              shift and go to state 119

    paso2lgexp                     shift and go to state 255
    logicop                        shift and go to state 256

state 244

    (62) iffs -> ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 257

state 245

    (61) iffs -> iffs ELSIF paso3bool . OPAREN logicexp CPAREN paso2bool THEN statements

    OPAREN          shift and go to state 258


state 246

    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END . DO

    DO              shift and go to state 259


state 247

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements . paso4for1 END DO
    (21) statements -> statements . statement
    (49) paso4for1 -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    END             reduce using rule 49 (paso4for1 -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    paso4for1                      shift and go to state 260
    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 248

    (13) variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .

    ID              reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    READ            reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    WRITE           reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    IF              reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    DO              reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    INT             reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    REAL            reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)
    END             reduce using rule 13 (variables3 -> tipo ID paso1dim OPAREN paso2dim NUMBER paso3dim COMMA NUMBER paso4dim CPAREN paso52dim .)


state 249

    (65) dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .
    (30) statement -> ID . OPAREN CPAREN
    (31) statement -> ID . COLLON DO dowhile END DO ID
    (53) declare -> ID . paso8 EQUAL expression paso9
    (54) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (56) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    END             reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    ID              reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    READ            reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    WRITE           reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    IF              reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    DO              reduce using rule 65 (dowhile -> statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 56 (paso8 -> .)

  ! OPAREN          [ reduce using rule 56 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 250

    (64) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements . ID
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ID              shift and go to state 261
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 251

    (97) logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 97 (logicexp -> logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 252

    (91) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 91 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 253

    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 262

state 254

    (98) logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 98 (logicexp -> logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp .)


state 255

    (92) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .

    CPAREN          reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    AND             reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)
    OR              reduce using rule 92 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp .)


state 256

    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop . slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 263

state 257

    (62) iffs -> ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 264
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 258

    (61) iffs -> iffs ELSIF paso3bool OPAREN . logicexp CPAREN paso2bool THEN statements
    (91) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> . logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> . logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (95) logicexp -> . NOT andornot slogicexp pasonot paso2lgexp
    (96) logicexp -> . slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> . logicexp paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> . logicexp paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (102) slogicexp -> . OPAREN logicexp CPAREN
    (103) slogicexp -> . ID paso1
    (104) slogicexp -> . NUMBER paso12
    (105) slogicexp -> . REAL paso13
    (106) slogicexp -> . ID OPAREN expression COMMA expression CPAREN
    (107) slogicexp -> . ID OPAREN expression CPAREN

    NOT             shift and go to state 92
    OPAREN          shift and go to state 91
    ID              shift and go to state 90
    NUMBER          shift and go to state 88
    REAL            shift and go to state 86

    slogicexp                      shift and go to state 87
    logicexp                       shift and go to state 265

state 259

    (37) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .

    END             reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ID              reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    READ            reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    WRITE           reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    IF              reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    DO              reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSIF           reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)
    ELSE            reduce using rule 37 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO .)


state 260

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 . END DO

    END             shift and go to state 266


state 261

    (64) dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .
    (30) statement -> ID . OPAREN CPAREN
    (31) statement -> ID . COLLON DO dowhile END DO ID
    (53) declare -> ID . paso8 EQUAL expression paso9
    (54) declare -> ID . paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> ID . paso8 OPAREN expression CPAREN EQUAL expression paso9
    (56) paso8 -> .

  ! shift/reduce conflict for OPAREN resolved as shift
    END             reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    ID              reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    READ            reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    WRITE           reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    IF              reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    DO              reduce using rule 64 (dowhile -> dowhile statements IF OPAREN logicexp CPAREN EXIT paso4do statements ID .)
    OPAREN          shift and go to state 37
    COLLON          shift and go to state 35
    EQUAL           reduce using rule 56 (paso8 -> .)

  ! OPAREN          [ reduce using rule 56 (paso8 -> .) ]

    paso8                          shift and go to state 36

state 262

    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (99) paso1lgexp -> .

    CPAREN          reduce using rule 99 (paso1lgexp -> .)
    AND             reduce using rule 99 (paso1lgexp -> .)
    OR              reduce using rule 99 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 267

state 263

    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp . paso1lgexp paso2lgexp
    (99) paso1lgexp -> .

    CPAREN          reduce using rule 99 (paso1lgexp -> .)
    AND             reduce using rule 99 (paso1lgexp -> .)
    OR              reduce using rule 99 (paso1lgexp -> .)

    paso1lgexp                     shift and go to state 268

state 264

    (62) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (59) paso2bool -> .

    THEN            reduce using rule 59 (paso2bool -> .)

    paso2bool                      shift and go to state 269

state 265

    (61) iffs -> iffs ELSIF paso3bool OPAREN logicexp . CPAREN paso2bool THEN statements
    (91) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot paso2lgexp
    (92) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot paso2lgexp
    (93) logicexp -> logicexp . paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (94) logicexp -> logicexp . paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp
    (97) logicexp -> logicexp . paso2lgexp AND andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (98) logicexp -> logicexp . paso2lgexp OR andornot slogicexp logicop slogicexp paso1lgexp paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          shift and go to state 270
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 124

state 266

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END . DO

    DO              shift and go to state 271


state 267

    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 272

state 268

    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp . paso2lgexp
    (100) paso2lgexp -> .

    CPAREN          reduce using rule 100 (paso2lgexp -> .)
    AND             reduce using rule 100 (paso2lgexp -> .)
    OR              reduce using rule 100 (paso2lgexp -> .)

    paso2lgexp                     shift and go to state 273

state 269

    (62) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 274


state 270

    (61) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN . paso2bool THEN statements
    (59) paso2bool -> .

    THEN            reduce using rule 59 (paso2bool -> .)

    paso2bool                      shift and go to state 275

state 271

    (36) statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .

    END             reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ID              reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    READ            reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    WRITE           reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    IF              reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    DO              reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSIF           reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)
    ELSE            reduce using rule 36 (statement -> DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO .)


state 272

    (93) logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 93 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 93 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 93 (logicexp -> logicexp paso2lgexp AND andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 273

    (94) logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .

    CPAREN          reduce using rule 94 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    AND             reduce using rule 94 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)
    OR              reduce using rule 94 (logicexp -> logicexp paso2lgexp OR andornot NOT andornot slogicexp pasonot logicop slogicexp paso1lgexp paso2lgexp .)


state 274

    (62) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 23 (statements -> .)
    ELSE            reduce using rule 23 (statements -> .)
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 276
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 275

    (61) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool . THEN statements

    THEN            shift and go to state 277


state 276

    (62) iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ELSIF           reduce using rule 62 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 62 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 62 (iffs -> ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19

state 277

    (61) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN . statements
    (21) statements -> . statements statement
    (22) statements -> . statement
    (23) statements -> .
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ELSIF           reduce using rule 23 (statements -> .)
    ELSE            reduce using rule 23 (statements -> .)
    END             reduce using rule 23 (statements -> .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

  ! ID              [ reduce using rule 23 (statements -> .) ]
  ! READ            [ reduce using rule 23 (statements -> .) ]
  ! WRITE           [ reduce using rule 23 (statements -> .) ]
  ! IF              [ reduce using rule 23 (statements -> .) ]
  ! DO              [ reduce using rule 23 (statements -> .) ]

    statements                     shift and go to state 278
    statement                      shift and go to state 10
    declare                        shift and go to state 19

state 278

    (61) iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .
    (21) statements -> statements . statement
    (29) statement -> . declare
    (30) statement -> . ID OPAREN CPAREN
    (31) statement -> . ID COLLON DO dowhile END DO ID
    (32) statement -> . READ ID readquad
    (33) statement -> . WRITE write writequad
    (34) statement -> . IF paso1bool ifs ELSE paso3bool statements END IF paso4bool
    (35) statement -> . IF paso1bool ifs END IF paso4bool
    (36) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for COMMA expression statements paso4for1 END DO
    (37) statement -> . DO ID paso1for EQUAL expression paso2for COMMA expression paso3for statements paso4for2 END DO
    (38) statement -> . DO paso1do dowhilenoid paso2do END DO
    (53) declare -> . ID paso8 EQUAL expression paso9
    (54) declare -> . ID paso8 OPAREN expression COMMA expression CPAREN EQUAL expression paso9
    (55) declare -> . ID paso8 OPAREN expression CPAREN EQUAL expression paso9

    ELSIF           reduce using rule 61 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ELSE            reduce using rule 61 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    END             reduce using rule 61 (iffs -> iffs ELSIF paso3bool OPAREN logicexp CPAREN paso2bool THEN statements .)
    ID              shift and go to state 14
    READ            shift and go to state 8
    WRITE           shift and go to state 13
    IF              shift and go to state 15
    DO              shift and go to state 7

    statement                      shift and go to state 20
    declare                        shift and go to state 19
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for READ in state 4 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for READ in state 59 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for SUBROUTINE in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for READ in state 81 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for READ in state 113 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for DO in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for READ in state 130 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for DO in state 130 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for READ in state 159 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for DO in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for READ in state 178 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for DO in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 185 resolved as shift
WARNING: shift/reduce conflict for READ in state 185 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 185 resolved as shift
WARNING: shift/reduce conflict for IF in state 185 resolved as shift
WARNING: shift/reduce conflict for DO in state 185 resolved as shift
WARNING: shift/reduce conflict for ELSIF in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 205 resolved as shift
WARNING: shift/reduce conflict for READ in state 205 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 205 resolved as shift
WARNING: shift/reduce conflict for IF in state 205 resolved as shift
WARNING: shift/reduce conflict for DO in state 205 resolved as shift
WARNING: shift/reduce conflict for IF in state 206 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for READ in state 207 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 207 resolved as shift
WARNING: shift/reduce conflict for DO in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for READ in state 226 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for DO in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: shift/reduce conflict for READ in state 236 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 236 resolved as shift
WARNING: shift/reduce conflict for IF in state 236 resolved as shift
WARNING: shift/reduce conflict for DO in state 236 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for READ in state 239 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 239 resolved as shift
WARNING: shift/reduce conflict for IF in state 239 resolved as shift
WARNING: shift/reduce conflict for DO in state 239 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 249 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 261 resolved as shift
WARNING: shift/reduce conflict for ID in state 274 resolved as shift
WARNING: shift/reduce conflict for READ in state 274 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 274 resolved as shift
WARNING: shift/reduce conflict for IF in state 274 resolved as shift
WARNING: shift/reduce conflict for DO in state 274 resolved as shift
WARNING: shift/reduce conflict for ID in state 277 resolved as shift
WARNING: shift/reduce conflict for READ in state 277 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 277 resolved as shift
WARNING: shift/reduce conflict for IF in state 277 resolved as shift
WARNING: shift/reduce conflict for DO in state 277 resolved as shift
